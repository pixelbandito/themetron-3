{"ast":null,"code":"var _jsxFileName = \"/Users/pixelbandito/Code/pixelbandito/themetron-3/workspaces/themed-ui/src/App.js\";\nimport React, { useCallback, useState } from 'react';\nimport { ThemeProvider } from 'styled-components';\nimport classNames from 'classnames';\nimport './App.css';\nimport styles from './App.module.css';\nimport defaultTheme from './theme.mjs';\nimport ThemeForm from './ThemeForm';\nimport Examples from './Examples';\nimport GridOverlay from './GridOverlay';\n\nfunction App() {\n  const [theme, setTheme] = useState(defaultTheme);\n  const [themePreview, setThemePreview] = useState(theme);\n  const [sidebarIsExpanded, setSidebarIsExpanded] = useState(true);\n  const handleChangeThemePreview = useCallback(theme => {\n    setThemePreview(theme);\n  }, []);\n  const handleApplyThemePreview = useCallback(theme => {\n    setTheme(themePreview);\n  }, [themePreview]);\n  return /*#__PURE__*/React.createElement(ThemeProvider, {\n    theme: theme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classNames('App', styles.App, {\n      [styles.withSidebarExpanded]: sidebarIsExpanded\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.sidebar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.form,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ThemeForm, {\n    theme: theme,\n    onChangeTheme: handleChangeThemePreview,\n    onApplyTheme: handleApplyThemePreview,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    className: styles.sideBarToggleStripe,\n    onClick: () => setSidebarIsExpanded(prev => !prev),\n    type: \"button\",\n    style: {\n      backgroundColor: theme.colors.default['dark-1']\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: styles.sideBarToggleButton,\n    onClick: () => setSidebarIsExpanded(prev => !prev),\n    type: \"button\",\n    style: {\n      borderColor: theme.colors.default['dark-1'],\n      color: theme.colors.default['dark-3']\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }, \"\\u2194\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.example,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ThemeProvider, {\n    theme: themePreview,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Examples, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(ThemeProvider, {\n    theme: { ...themePreview,\n      shared: { ...themePreview.shared,\n        mode: 'dark'\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Examples, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(ThemeProvider, {\n    theme: { ...themePreview,\n      shared: { ...themePreview.shared,\n        mode: 'light'\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Examples, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 15\n    }\n  }))))), /*#__PURE__*/React.createElement(GridOverlay, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/pixelbandito/Code/pixelbandito/themetron-3/workspaces/themed-ui/src/App.js"],"names":["React","useCallback","useState","ThemeProvider","classNames","styles","defaultTheme","ThemeForm","Examples","GridOverlay","App","theme","setTheme","themePreview","setThemePreview","sidebarIsExpanded","setSidebarIsExpanded","handleChangeThemePreview","handleApplyThemePreview","withSidebarExpanded","sidebar","form","sideBarToggleStripe","prev","backgroundColor","colors","default","sideBarToggleButton","borderColor","color","example","shared","mode"],"mappings":"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","sourcesContent":["import React, { useCallback, useState } from 'react';\nimport { ThemeProvider } from 'styled-components'\nimport classNames from 'classnames';\n\nimport './App.css';\nimport styles from './App.module.css';\nimport defaultTheme from './theme.mjs';\nimport ThemeForm from './ThemeForm';\nimport Examples from './Examples';\nimport GridOverlay from './GridOverlay';\n\nfunction App() {\n  const [theme, setTheme] = useState(defaultTheme);\n  const [themePreview, setThemePreview] = useState(theme);\n  const [sidebarIsExpanded, setSidebarIsExpanded] = useState(true);\n\n  const handleChangeThemePreview = useCallback((theme) => {\n    setThemePreview(theme);\n  }, []);\n\n  const handleApplyThemePreview = useCallback((theme) => {\n    setTheme(themePreview);\n  }, [themePreview]);\n\n  return (\n    <ThemeProvider theme={theme}>\n      <div className={classNames('App', styles.App, {\n        [styles.withSidebarExpanded]: sidebarIsExpanded,\n      })}>\n        <div className={styles.sidebar}>\n          <div className={styles.form}>\n            <ThemeForm\n              theme={theme}\n              onChangeTheme={handleChangeThemePreview}\n              onApplyTheme={handleApplyThemePreview}\n            />\n          </div>\n          <button\n            className={styles.sideBarToggleStripe}\n            onClick={() => setSidebarIsExpanded(prev => !prev)}\n            type=\"button\"\n            style={{\n              backgroundColor: theme.colors.default['dark-1'],\n            }}\n          />\n          <button\n            className={styles.sideBarToggleButton}\n            onClick={() => setSidebarIsExpanded(prev => !prev)}\n            type=\"button\"\n            style={{\n              borderColor: theme.colors.default['dark-1'],\n              color: theme.colors.default['dark-3']\n            }}\n          >\n            â†”\n          </button>\n        </div>\n        <div className={styles.example}>\n          <div>\n            <ThemeProvider theme={themePreview} >\n              <Examples />\n            </ThemeProvider>\n            <ThemeProvider theme={{\n                ...themePreview,\n                shared: {\n                  ...themePreview.shared,\n                  mode: 'dark',\n                },\n              }} >\n              <Examples />\n            </ThemeProvider>\n            <ThemeProvider theme={{\n                ...themePreview,\n                shared: {\n                  ...themePreview.shared,\n                  mode: 'light',\n                },\n              }} >\n              <Examples />\n            </ThemeProvider>\n          </div>\n        </div>\n      </div>\n      <GridOverlay />\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}