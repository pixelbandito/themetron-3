{"ast":null,"code":"var _jsxFileName = \"/Users/pixelbandito/Code/pixelbandito/themetron-3/workspaces/themed-ui/src/ThemeForm/ThemeForm.js\";\nimport React, { useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport colorConvert from 'color-convert';\nimport { debounce } from 'lodash-es';\nimport { getButtons, getColors, getInheritedBaseColor, getSizes } from '../theme-utils.mjs';\nimport { getLuminance } from '../utils/colors';\nimport Accordion from '../Accordion';\nimport Button from '../Button';\nimport Card from '../Card';\nimport Swatch from '../Swatch';\nimport { getHexOrDont, getNumberOrDont } from './utils';\nimport Control from './Control';\nimport styles from './ThemeForm.module.css';\n\nconst ThemeForm = ({\n  className,\n  theme: initTheme,\n  onChangeTheme,\n  onApplyTheme\n}) => {\n  const [mdSize, setMdSize] = useState(initTheme.space.md);\n  const [roundness, setRoundness] = useState(initTheme.shared.roundness);\n  const [themeForm, setThemeForm] = useState(initTheme);\n  const [isAddingBaseColor, setIsAddingBaseColor] = useState(false);\n  const [newBaseColor, setNewBaseColor] = useState(initTheme.colors.default['light-1']);\n  const [newBaseColorName, setNewBaseColorName] = useState('');\n  const importInputFileRef = useRef();\n  useEffect(() => {\n    onChangeTheme(themeForm);\n  }, [onChangeTheme, themeForm]);\n  useEffect(() => {\n    setThemeForm(prevThemeForm => ({ ...prevThemeForm,\n      buttons: getButtons({ ...prevThemeForm\n      })\n    }));\n  }, [themeForm.colors, themeForm.fonts, themeForm.shared.roundness, themeForm.space]);\n  const handleClickApply = useCallback(() => {\n    onApplyTheme(themeForm);\n  }, [onApplyTheme, themeForm]);\n  const handleClickRevert = useCallback(() => {\n    setThemeForm(initTheme);\n  }, [initTheme]); // COLORS\n\n  const safeBaseColors = useMemo(() => {\n    const baseColors = Object.entries(themeForm.baseColors).reduce((result, [key, value]) => {\n      // When base colors inherit from each other, this resolves to a hex code or css color name\n      let safeValue = getInheritedBaseColor({\n        baseColors: themeForm.baseColors,\n        unsafeColor: value\n      });\n\n      try {\n        safeValue = colorConvert.keyword.hex(safeValue).toLowerCase();\n      } catch (e) {\n        safeValue = safeValue[0] === '#' ? safeValue.substr(1) : value;\n      }\n\n      return { ...result,\n        [key]: `#${safeValue}`\n      };\n    }, {});\n    return baseColors;\n  }, [themeForm.baseColors]);\n  const handleDeleteBaseColor = useCallback(({\n    key\n  }) => {\n    setThemeForm(prevThemeForm => {\n      const nextBaseColors = { ...prevThemeForm.baseColors\n      };\n      delete nextBaseColors[key];\n      return { ...prevThemeForm,\n        baseColors: nextBaseColors\n      };\n    });\n  }, []);\n  const handleChangeBaseColorHex = useCallback(({\n    value,\n    key\n  }) => {\n    if (key === '_new') {\n      setNewBaseColor(value);\n      return;\n    }\n\n    setThemeForm(prevThemeForm => ({ ...prevThemeForm,\n      baseColors: { ...prevThemeForm.baseColors,\n        [key]: getHexOrDont(value)\n      }\n    }));\n  }, []);\n  useEffect(() => {\n    setThemeForm(prevThemeForm => ({ ...prevThemeForm,\n      colors: getColors({ ...prevThemeForm\n      })\n    }));\n  }, [safeBaseColors]);\n  const debouncedHandleChangeBaseColorHex = debounce(handleChangeBaseColorHex, 100);\n\n  const handleClickAddBaseColor = event => {\n    if (!newBaseColor || !newBaseColorName) {\n      return;\n    }\n\n    setIsAddingBaseColor(false);\n    setThemeForm(prevThemeForm => ({ ...prevThemeForm,\n      baseColors: { ...prevThemeForm.baseColors,\n        [newBaseColorName.replace(' ', '_')]: getHexOrDont(newBaseColor)\n      }\n    }));\n    setNewBaseColorName('');\n  }; // FONTS\n\n\n  const [fontSizesCount, setFontSizesCount] = useState(Object.keys(initTheme.fonts.sizes).length);\n  const [fontSizes, setFontSizes] = useState(initTheme.fonts.sizes);\n  const handleChangeFontSize = useCallback(({\n    event,\n    key\n  }) => {\n    const nextSizes = { ...fontSizes,\n      [key]: getNumberOrDont(event.target.value)\n    };\n    setFontSizes(nextSizes);\n    setThemeForm(prevThemeForm => ({ ...prevThemeForm,\n      fonts: { ...themeForm.fonts,\n        sizes: nextSizes\n      }\n    }));\n  }, [fontSizes, themeForm]);\n  const handleChangeFontSizesCount = useCallback(e => {\n    const nextFontSizesCount = getNumberOrDont(e.target.value);\n    let nextSizes = getSizes({\n      count: nextFontSizesCount\n    });\n    nextSizes = Object.keys(nextSizes).reduce((result, sizeKey) => {\n      return { ...result,\n        [sizeKey]: fontSizes[sizeKey] || Object.values(fontSizes)[0]\n      };\n    }, {});\n    setFontSizes(nextSizes);\n    setFontSizesCount(nextFontSizesCount);\n  }, [fontSizes]);\n\n  const handleChangeMdSize = e => {\n    const nextMdSize = getNumberOrDont(e.target.value);\n    setMdSize(nextMdSize);\n    setThemeForm(prevThemeForm => ({ ...prevThemeForm,\n      space: getSizes({\n        count: 5,\n        mdSize: nextMdSize\n      })\n    }));\n  };\n\n  const roundnessMax = 10;\n  const roundnessMin = 0;\n\n  const handleChangeRoundness = e => {\n    let nextRoundness = getNumberOrDont(e.target.value);\n    nextRoundness = Math.min(nextRoundness, roundnessMax);\n    nextRoundness = Math.max(nextRoundness, roundnessMin);\n    setRoundness(nextRoundness);\n    setThemeForm(prevThemeForm => ({ ...prevThemeForm,\n      shared: { ...prevThemeForm.shared,\n        roundness: nextRoundness\n      }\n    }));\n  };\n\n  const handleClickImport = useCallback(() => {\n    if (importInputFileRef.current) {\n      importInputFileRef.current.click();\n    }\n  }, []);\n  const handleChangeImport = useCallback(e => {\n    const reader = new FileReader();\n    reader.readAsText(e.target.files[0]);\n\n    reader.onload = e => {\n      try {\n        setThemeForm(JSON.parse(e.target.result));\n      } catch (e) {\n        console.warn('Couldn\\'t read theme file.', e.message);\n      }\n    };\n  }, []);\n  return /*#__PURE__*/React.createElement(\"form\", {\n    className: classNames(className, styles.ThemeForm),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Accordion, {\n    defaultIsOpen: true,\n    head: \"Shared styles\",\n    style: {\n      borderBottomWidth: '0',\n      borderRadius: '0'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Control, {\n    id: \"mdSize\",\n    onChange: handleChangeMdSize,\n    type: \"number\",\n    value: `${mdSize}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Control, {\n    id: \"roundness\",\n    onChange: handleChangeRoundness,\n    type: \"number\",\n    min: \"0\",\n    max: \"10\",\n    step: \"1\",\n    value: `${roundness}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Accordion, {\n    defaultIsOpen: true,\n    head: \"Colors\",\n    style: {\n      borderBottomWidth: '0',\n      borderRadius: '0'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 11\n    }\n  }, \"Neutral colors\"), safeBaseColors.white && /*#__PURE__*/React.createElement(Control, {\n    id: \"white\",\n    label: \"white\",\n    onChange: event => debouncedHandleChangeBaseColorHex({\n      value: event.target.value,\n      key: 'white'\n    }),\n    type: \"color\",\n    value: safeBaseColors.white,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 13\n    }\n  }), safeBaseColors.black && /*#__PURE__*/React.createElement(Control, {\n    id: \"black\",\n    label: \"black\",\n    onChange: event => debouncedHandleChangeBaseColorHex({\n      value: event.target.value,\n      key: 'black'\n    }),\n    type: \"color\",\n    value: safeBaseColors.black,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 13\n    }\n  }), themeForm.colors.default && /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.swatches,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 13\n    }\n  }, Object.entries(themeForm.colors.default).sort(([variantKeyA, hexA], [variantKeyB, hexB]) => variantKeyB.charCodeAt(0) + getLuminance(hexB) - variantKeyA.charCodeAt(0) - getLuminance(hexA)).filter(([variantKey]) => variantKey !== 'base').map(([variantKey, hex], i) => /*#__PURE__*/React.createElement(Swatch, {\n    key: variantKey,\n    className: styles.swatch,\n    color: getLuminance(hex) > 0.5 ? themeForm.colors.default['dark-bg'] : themeForm.colors.default['light-bg'],\n    backgroundColor: hex,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 19\n    }\n  }, variantKey)))), /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 11\n    }\n  }, \"Semantic colors\"), Object.entries(themeForm.colors).filter(([key, value]) => key !== 'default').map(([key, value], i) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: key,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Control, {\n      id: `semanticColor-${key}`,\n      key: key,\n      label: key,\n      onChange: event => debouncedHandleChangeBaseColorHex({\n        value: event.target.value,\n        key\n      }),\n      onDelete: key !== 'primary' ? event => handleDeleteBaseColor({\n        key\n      }) : undefined,\n      type: \"color\",\n      value: `${value.base}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 17\n      }\n    }), themeForm.colors[key] && /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.swatches,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 19\n      }\n    }, Object.entries(themeForm.colors[key]).sort(([variantKeyA, hexA], [variantKeyB, hexB]) => variantKeyB.charCodeAt(0) + getLuminance(hexB) - variantKeyA.charCodeAt(0) - getLuminance(hexA)).filter(([variantKey]) => variantKey !== 'base').map(([variantKey, hex], i) => /*#__PURE__*/React.createElement(Swatch, {\n      key: variantKey,\n      className: styles.swatch,\n      color: getLuminance(hex) > 0.5 ? themeForm.colors[key]['dark-bg'] : themeForm.colors[key]['light-bg'],\n      backgroundColor: hex,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 25\n      }\n    }, variantKey))));\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: () => setIsAddingBaseColor(true),\n    type: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 13\n    }\n  }, \"Add another color\"), isAddingBaseColor && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Control, {\n    id: \"_newBaseColorName\",\n    onChange: event => setNewBaseColorName(event.target.value),\n    type: \"text\",\n    value: newBaseColorName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Control, {\n    id: \"_newBaseColor\",\n    label: \"Color\",\n    onChange: event => debouncedHandleChangeBaseColorHex({\n      value: event.target.value,\n      key: '_new'\n    }),\n    type: \"color\",\n    value: newBaseColor,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    disabled: Object.keys(themeForm.baseColors).includes(newBaseColorName),\n    onClick: handleClickAddBaseColor,\n    type: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 17\n    }\n  }, \"Confirm\"), ' ', /*#__PURE__*/React.createElement(Button, {\n    onClick: () => setIsAddingBaseColor(false),\n    outline: true,\n    type: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 371,\n      columnNumber: 17\n    }\n  }, \"Cancel\"))))), /*#__PURE__*/React.createElement(Accordion, {\n    defaultIsOpen: true,\n    head: \"Shared styles\",\n    style: {\n      borderBottomWidth: '0',\n      borderRadius: '0'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 383,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Control, {\n    id: \"fontSizesCount\",\n    onChange: handleChangeFontSizesCount,\n    type: \"number\",\n    value: `${fontSizesCount}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 391,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 397,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 398,\n      columnNumber: 11\n    }\n  }, \"Font sizes\"), Object.entries(fontSizes).map(([key, value]) => /*#__PURE__*/React.createElement(Control, {\n    id: `fontSize-${key}`,\n    key: key,\n    label: key,\n    onChange: event => handleChangeFontSize({\n      event,\n      key\n    }),\n    type: \"number\",\n    value: `${value}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 400,\n      columnNumber: 13\n    }\n  })))), /*#__PURE__*/React.createElement(Card, {\n    style: {\n      borderRadius: '0'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 411,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Card.Head, {\n    variant: \"default\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 412,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.actions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 413,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    outline: true,\n    onClick: handleClickRevert,\n    type: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 414,\n      columnNumber: 13\n    }\n  }, \"Revert\"), ' ', /*#__PURE__*/React.createElement(Button, {\n    onClick: handleClickApply,\n    type: \"button\",\n    variant: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 422,\n      columnNumber: 13\n    }\n  }, \"Apply\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 429,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 430,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    download: \"theme.json\",\n    href: `data:text/json;charset=utf-8,${encodeURIComponent(JSON.stringify(themeForm))}`,\n    outline: true,\n    size: \"sm\",\n    style: {\n      display: 'inline-block'\n    },\n    tag: \"a\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 431,\n      columnNumber: 13\n    }\n  }, \"Export JSON\"), ' ', /*#__PURE__*/React.createElement(\"input\", {\n    onChange: handleChangeImport,\n    ref: importInputFileRef,\n    style: {\n      fontSize: '0',\n      height: '0',\n      left: '-100vw',\n      opacity: '0',\n      position: 'absolute',\n      top: '-100vh',\n      width: '0',\n      zIndex: '-1'\n    },\n    tabIndex: \"-1\",\n    type: \"file\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 444,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    onClick: handleClickImport,\n    outline: true,\n    size: \"sm\",\n    type: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 460,\n      columnNumber: 13\n    }\n  }, \"Import JSON ...\")))));\n};\n\nThemeForm.propTypes = {\n  className: PropTypes.string\n};\nThemeForm.defaultProps = {\n  className: ''\n};\nexport default ThemeForm;","map":{"version":3,"sources":["/Users/pixelbandito/Code/pixelbandito/themetron-3/workspaces/themed-ui/src/ThemeForm/ThemeForm.js"],"names":["React","useCallback","useEffect","useMemo","useRef","useState","PropTypes","classNames","colorConvert","debounce","getButtons","getColors","getInheritedBaseColor","getSizes","getLuminance","Accordion","Button","Card","Swatch","getHexOrDont","getNumberOrDont","Control","styles","ThemeForm","className","theme","initTheme","onChangeTheme","onApplyTheme","mdSize","setMdSize","space","md","roundness","setRoundness","shared","themeForm","setThemeForm","isAddingBaseColor","setIsAddingBaseColor","newBaseColor","setNewBaseColor","colors","default","newBaseColorName","setNewBaseColorName","importInputFileRef","prevThemeForm","buttons","fonts","handleClickApply","handleClickRevert","safeBaseColors","baseColors","Object","entries","reduce","result","key","value","safeValue","unsafeColor","keyword","hex","toLowerCase","e","substr","handleDeleteBaseColor","nextBaseColors","handleChangeBaseColorHex","debouncedHandleChangeBaseColorHex","handleClickAddBaseColor","event","replace","fontSizesCount","setFontSizesCount","keys","sizes","length","fontSizes","setFontSizes","handleChangeFontSize","nextSizes","target","handleChangeFontSizesCount","nextFontSizesCount","count","sizeKey","values","handleChangeMdSize","nextMdSize","roundnessMax","roundnessMin","handleChangeRoundness","nextRoundness","Math","min","max","handleClickImport","current","click","handleChangeImport","reader","FileReader","readAsText","files","onload","JSON","parse","console","warn","message","borderBottomWidth","borderRadius","white","black","swatches","sort","variantKeyA","hexA","variantKeyB","hexB","charCodeAt","filter","variantKey","map","i","swatch","undefined","base","includes","actions","encodeURIComponent","stringify","display","fontSize","height","left","opacity","position","top","width","zIndex","propTypes","string","defaultProps"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport colorConvert from 'color-convert';\nimport { debounce } from 'lodash-es';\nimport { getButtons, getColors, getInheritedBaseColor, getSizes } from '../theme-utils.mjs';\nimport { getLuminance } from '../utils/colors';\n\nimport Accordion from '../Accordion';\nimport Button from '../Button';\nimport Card from '../Card';\nimport Swatch from '../Swatch';\n\nimport { getHexOrDont, getNumberOrDont } from './utils';\nimport Control from './Control';\nimport styles from './ThemeForm.module.css';\n\nconst ThemeForm = ({\n  className,\n  theme: initTheme,\n  onChangeTheme,\n  onApplyTheme,\n}) => {\n  const [mdSize, setMdSize] = useState(initTheme.space.md);\n  const [roundness, setRoundness] = useState(initTheme.shared.roundness);\n  const [themeForm, setThemeForm] = useState(initTheme);\n  const [isAddingBaseColor, setIsAddingBaseColor] = useState(false);\n  const [newBaseColor, setNewBaseColor] = useState(initTheme.colors.default['light-1']);\n  const [newBaseColorName, setNewBaseColorName] = useState('');\n  const importInputFileRef = useRef();\n\n  useEffect(() => {\n    onChangeTheme(themeForm);\n  }, [onChangeTheme, themeForm]);\n\n  useEffect(() => {\n    setThemeForm(prevThemeForm => ({\n      ...prevThemeForm,\n      buttons: getButtons({\n        ...prevThemeForm,\n      }),\n    }));\n  }, [themeForm.colors,  themeForm.fonts, themeForm.shared.roundness,  themeForm.space]);\n\n  const handleClickApply = useCallback(() => {\n    onApplyTheme(themeForm);\n  }, [onApplyTheme, themeForm]);\n\n  const handleClickRevert = useCallback(() => {\n    setThemeForm(initTheme);\n  }, [initTheme]);\n\n  // COLORS\n  const safeBaseColors = useMemo(() => {\n    const baseColors =  Object.entries(themeForm.baseColors).reduce((result, [key, value]) => {\n      // When base colors inherit from each other, this resolves to a hex code or css color name\n      let safeValue = getInheritedBaseColor({\n        baseColors: themeForm.baseColors,\n        unsafeColor: value,\n      });\n\n      try {\n        safeValue = colorConvert.keyword.hex(safeValue).toLowerCase();\n      } catch(e) {\n        safeValue = safeValue[0] === '#' ? safeValue.substr(1) : value;\n      }\n\n      return {\n        ...result,\n        [key]: `#${safeValue}`,\n      }\n    }, {});\n\n    return baseColors;\n  }, [themeForm.baseColors]);\n\n  const handleDeleteBaseColor = useCallback(({ key }) => {\n    setThemeForm(prevThemeForm => {\n      const nextBaseColors = { ...prevThemeForm.baseColors };\n      delete nextBaseColors[key];\n\n      return ({\n        ...prevThemeForm,\n        baseColors: nextBaseColors,\n      });\n    });\n  }, []);\n\n  const handleChangeBaseColorHex = useCallback(({ value, key }) => {\n    if (key === '_new') {\n      setNewBaseColor(value);\n      return;\n    }\n\n    setThemeForm(prevThemeForm => ({\n      ...prevThemeForm,\n      baseColors: {\n        ...prevThemeForm.baseColors,\n        [key]: getHexOrDont(value)\n      },\n    }));\n  }, []);\n\n  useEffect(() => {\n    setThemeForm(prevThemeForm => ({\n      ...prevThemeForm,\n      colors: getColors({\n        ...prevThemeForm,\n      }),\n    }));\n  }, [safeBaseColors]);\n\n  const debouncedHandleChangeBaseColorHex = debounce(handleChangeBaseColorHex, 100);\n\n  const handleClickAddBaseColor = (event) => {\n    if (!newBaseColor || !newBaseColorName) {\n      return;\n    }\n\n    setIsAddingBaseColor(false);\n\n    setThemeForm(prevThemeForm => ({\n      ...prevThemeForm,\n      baseColors: {\n        ...prevThemeForm.baseColors,\n        [newBaseColorName.replace(' ', '_')]: getHexOrDont(newBaseColor),\n      },\n    }));\n\n    setNewBaseColorName('');\n  }\n\n  // FONTS\n\n  const [fontSizesCount, setFontSizesCount] = useState(Object.keys(initTheme.fonts.sizes).length);\n  const [fontSizes, setFontSizes] = useState(initTheme.fonts.sizes);\n\n  const handleChangeFontSize = useCallback(({ event, key }) => {\n    const nextSizes = {\n      ...fontSizes,\n      [key]: getNumberOrDont(event.target.value),\n    };\n\n    setFontSizes(nextSizes);\n\n    setThemeForm(prevThemeForm => ({\n      ...prevThemeForm,\n      fonts: {\n        ...themeForm.fonts,\n        sizes: nextSizes,\n      },\n    }));\n  }, [fontSizes, themeForm]);\n\n\n  const handleChangeFontSizesCount = useCallback(e => {\n    const nextFontSizesCount = getNumberOrDont(e.target.value);\n    let nextSizes = getSizes({ count: nextFontSizesCount });\n\n    nextSizes = Object.keys(nextSizes).reduce((result, sizeKey) => {\n      return {\n        ...result,\n        [sizeKey]: fontSizes[sizeKey] || Object.values(fontSizes)[0],\n      };\n    }, {});\n\n    setFontSizes(nextSizes);\n    setFontSizesCount(nextFontSizesCount);\n  }, [fontSizes]);\n\n  const handleChangeMdSize = e => {\n    const nextMdSize = getNumberOrDont(e.target.value);\n\n    setMdSize(nextMdSize);\n\n    setThemeForm(prevThemeForm => ({\n      ...prevThemeForm,\n      space: getSizes({\n        count: 5,\n        mdSize: nextMdSize,\n      }),\n    }));\n  };\n\n  const roundnessMax = 10;\n  const roundnessMin = 0;\n\n  const handleChangeRoundness = e => {\n    let nextRoundness = getNumberOrDont(e.target.value)\n    nextRoundness = Math.min(nextRoundness, roundnessMax);\n    nextRoundness = Math.max(nextRoundness, roundnessMin);\n\n    setRoundness(nextRoundness);\n\n    setThemeForm(prevThemeForm => ({\n      ...prevThemeForm,\n      shared: {\n        ...prevThemeForm.shared,\n        roundness: nextRoundness,\n      },\n    }));\n  };\n\n  const handleClickImport = useCallback(() => {\n    if (importInputFileRef.current) {\n      importInputFileRef.current.click();\n    }\n  }, []);\n\n  const handleChangeImport = useCallback(e => {\n    const reader = new FileReader();\n    reader.readAsText(e.target.files[0]);\n\n    reader.onload = e => {\n      try {\n        setThemeForm(JSON.parse(e.target.result))\n      } catch (e) {\n        console.warn('Couldn\\'t read theme file.', e.message);\n      }\n    }\n  }, []);\n\n  return (\n    <form className={classNames(className, styles.ThemeForm)}>\n      <Accordion\n        defaultIsOpen\n        head=\"Shared styles\"\n        style={{\n          borderBottomWidth: '0',\n          borderRadius: '0',\n        }}\n      >\n        <Control\n          id=\"mdSize\"\n          onChange={handleChangeMdSize}\n          type=\"number\"\n          value={`${mdSize}`}\n        />\n        <Control\n          id=\"roundness\"\n          onChange={handleChangeRoundness}\n          type=\"number\"\n          min=\"0\"\n          max=\"10\"\n          step=\"1\"\n          value={`${roundness}`}\n        />\n      </Accordion>\n      <Accordion\n        defaultIsOpen\n        head=\"Colors\"\n        style={{\n          borderBottomWidth: '0',\n          borderRadius: '0',\n        }}\n      >\n        <section>\n          <h4>Neutral colors</h4>\n          {safeBaseColors.white && (\n            <Control\n              id=\"white\"\n              label=\"white\"\n              onChange={event => debouncedHandleChangeBaseColorHex({ value: event.target.value, key: 'white' })}\n              type=\"color\"\n              value={safeBaseColors.white}\n            />\n          )}\n          {safeBaseColors.black && (\n            <Control\n              id=\"black\"\n              label=\"black\"\n              onChange={event => debouncedHandleChangeBaseColorHex({ value: event.target.value, key: 'black' })}\n              type=\"color\"\n              value={safeBaseColors.black}\n            />\n          )}\n          {themeForm.colors.default && (\n            <div className={styles.swatches}>\n              {\n                Object.entries(themeForm.colors.default)\n                .sort(([variantKeyA ,hexA], [variantKeyB ,hexB]) => variantKeyB.charCodeAt(0) + getLuminance(hexB) - variantKeyA.charCodeAt(0) - getLuminance(hexA))\n                .filter(([variantKey]) => variantKey !== 'base')\n                .map(([variantKey, hex], i) => (\n                  <Swatch\n                    key={variantKey}\n                    className={styles.swatch}\n                    color={\n                      getLuminance(hex) > 0.5 ?\n                        themeForm.colors.default['dark-bg'] :\n                        themeForm.colors.default['light-bg']\n                    }\n                    backgroundColor={hex}\n                  >\n                    {variantKey}\n                  </Swatch>\n                ))\n              }\n            </div>\n          )}\n        </section>\n        <section>\n          <h4>Semantic colors</h4>\n          {Object.entries(themeForm.colors).filter(([key, value]) => key !== 'default').map(([key, value], i) => {\n            return (\n              <div key={key}>\n                <Control\n                  id={`semanticColor-${key}`}\n                  key={key}\n                  label={key}\n                  onChange={event => debouncedHandleChangeBaseColorHex({ value: event.target.value, key })}\n                  onDelete={key !== 'primary' ? event => handleDeleteBaseColor({ key }) : undefined}\n                  type=\"color\"\n                  value={`${value.base}`}\n                />\n                {themeForm.colors[key] && (\n                  <div className={styles.swatches}>\n                    {\n                      Object.entries(themeForm.colors[key])\n                      .sort(([variantKeyA ,hexA], [variantKeyB ,hexB]) => variantKeyB.charCodeAt(0) + getLuminance(hexB) - variantKeyA.charCodeAt(0) - getLuminance(hexA))\n                      .filter(([variantKey]) => variantKey !== 'base')\n                      .map(([variantKey, hex], i) => (\n                        <Swatch\n                          key={variantKey}\n                          className={styles.swatch}\n                          color={\n                            getLuminance(hex) > 0.5 ?\n                              themeForm.colors[key]['dark-bg'] :\n                              themeForm.colors[key]['light-bg']\n                          }\n                          backgroundColor={hex}\n                        >\n                          {variantKey}\n                        </Swatch>\n                      ))\n                    }\n                  </div>\n                )}\n              </div>\n              );\n          })}\n          <div>\n            <Button\n              onClick={() => setIsAddingBaseColor(true)}\n              type=\"button\"\n            >\n              Add another color\n            </Button>\n            {isAddingBaseColor && (\n              <>\n                <Control\n                  id=\"_newBaseColorName\"\n                  onChange={event => setNewBaseColorName(event.target.value)}\n                  type=\"text\"\n                  value={newBaseColorName}\n                />\n                <Control\n                  id=\"_newBaseColor\"\n                  label=\"Color\"\n                  onChange={event => debouncedHandleChangeBaseColorHex({ value: event.target.value, key: '_new' })}\n                  type=\"color\"\n                  value={newBaseColor}\n                />\n                <Button\n                  disabled={Object.keys(themeForm.baseColors).includes(newBaseColorName)}\n                  onClick={handleClickAddBaseColor}\n                  type=\"button\"\n                >\n                  Confirm\n                </Button>\n                {' '}\n                <Button\n                  onClick={() => setIsAddingBaseColor(false)}\n                  outline\n                  type=\"button\"\n                >\n                  Cancel\n                </Button>\n              </>\n            )}\n          </div>\n        </section>\n      </Accordion>\n      <Accordion\n        defaultIsOpen\n        head=\"Shared styles\"\n        style={{\n          borderBottomWidth: '0',\n          borderRadius: '0',\n        }}\n      >\n        <Control\n          id=\"fontSizesCount\"\n          onChange={handleChangeFontSizesCount}\n          type=\"number\"\n          value={`${fontSizesCount}`}\n        />\n        <section>\n          <h4>Font sizes</h4>\n          {Object.entries(fontSizes).map(([key, value]) => (\n            <Control\n              id={`fontSize-${key}`}\n              key={key}\n              label={key}\n              onChange={event => handleChangeFontSize({ event, key })}\n              type=\"number\"\n              value={`${value}`}\n            />\n          ))}\n        </section>\n      </Accordion>\n      <Card style={{ borderRadius: '0' }}>\n        <Card.Head variant=\"default\">\n          <div className={styles.actions}>\n            <Button\n              outline\n              onClick={handleClickRevert}\n              type=\"button\"\n            >\n              Revert\n            </Button>\n            {' '}\n            <Button\n              onClick={handleClickApply}\n              type=\"button\"\n              variant=\"primary\"\n            >\n              Apply\n            </Button>\n            <br />\n            <br />\n            <Button\n              download=\"theme.json\"\n              href={`data:text/json;charset=utf-8,${encodeURIComponent(JSON.stringify(themeForm))}`}\n              outline\n              size=\"sm\"\n              style={{\n                display: 'inline-block',\n              }}\n              tag=\"a\"\n            >\n              Export JSON\n            </Button>\n            {' '}\n            <input\n              onChange={handleChangeImport}\n              ref={importInputFileRef}\n              style={{\n                fontSize: '0',\n                height: '0',\n                left: '-100vw',\n                opacity: '0',\n                position: 'absolute',\n                top: '-100vh',\n                width: '0',\n                zIndex: '-1',\n              }}\n              tabIndex=\"-1\"\n              type=\"file\"\n            />\n            <Button\n              onClick={handleClickImport}\n              outline\n              size=\"sm\"\n              type=\"button\"\n            >\n              Import JSON ...\n            </Button>\n          </div>\n        </Card.Head>\n      </Card>\n    </form>\n  );\n}\n\nThemeForm.propTypes = {\n  className: PropTypes.string,\n};\n\nThemeForm.defaultProps = {\n  className: '',\n};\n\n\nexport default ThemeForm;\n"]},"metadata":{},"sourceType":"module"}