{"ast":null,"code":"var _jsxFileName = \"/Users/pixelbandito/Code/pixelbandito/themetron-3/workspaces/themed-ui/src/Font/Heading/Heading.js\";\nimport React, { useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport styled from 'styled-components';\nimport { tagPropType } from '../../prop-types';\nimport Font, { getFontStyle } from '../Font';\nimport styles from './Heading.module.css';\nexport const getHeadingFontStyle = ({\n  color = 'default',\n  size = 'md',\n  weight = 'normal',\n  level = 1,\n  theme\n}) => {\n  const levels = {\n    1: {\n      contrast: '3',\n      size: 'xl',\n      weight: 'normal'\n    },\n    2: {\n      contrast: '3',\n      size: 'lg',\n      weight: 'normal'\n    },\n    3: {\n      contrast: '3',\n      size: 'md',\n      weight: 'bold'\n    },\n    4: {\n      contrast: '2',\n      size: 'sm',\n      weight: 'bold'\n    }\n  };\n  return { ...getFontStyle({ ...levels[`${level}`],\n      theme\n    })\n  };\n};\n\nconst Heading = ({\n  className,\n  level,\n  tag: CustomTag,\n  ...passedProps\n}) => {\n  const Tag = useMemo(() => {\n    if (CustomTag) {\n      return CustomTag;\n    }\n\n    return `h${level}`;\n  }, [CustomTag, level]);\n  return /*#__PURE__*/React.createElement(Font, Object.assign({}, passedProps, {\n    className: classNames(className, styles.Heading),\n    tag: Tag,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }\n  }));\n};\n\nHeading.propTypes = {\n  className: PropTypes.string,\n  level: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  tag: tagPropType\n};\nHeading.defaultProps = {\n  className: '',\n  level: 1,\n  tag: null\n};\nconst StyledHeading = styled(Heading)(({\n  level,\n  theme\n}) => getHeadingFontStyle({\n  level,\n  theme\n}));\nexport const H1 = props => /*#__PURE__*/React.createElement(StyledHeading, Object.assign({}, props, {\n  level: 1,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 28\n  }\n}));\nexport const H2 = props => /*#__PURE__*/React.createElement(StyledHeading, Object.assign({}, props, {\n  level: 2,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 28\n  }\n}));\nexport const H3 = props => /*#__PURE__*/React.createElement(StyledHeading, Object.assign({}, props, {\n  level: 3,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 28\n  }\n}));\nexport const H4 = props => /*#__PURE__*/React.createElement(StyledHeading, Object.assign({}, props, {\n  level: 4,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 28\n  }\n}));\nexport default StyledHeading;","map":{"version":3,"sources":["/Users/pixelbandito/Code/pixelbandito/themetron-3/workspaces/themed-ui/src/Font/Heading/Heading.js"],"names":["React","useMemo","PropTypes","classNames","styled","tagPropType","Font","getFontStyle","styles","getHeadingFontStyle","color","size","weight","level","theme","levels","contrast","Heading","className","tag","CustomTag","passedProps","Tag","propTypes","string","oneOfType","number","defaultProps","StyledHeading","H1","props","H2","H3","H4"],"mappings":"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","sourcesContent":["import React, { useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport styled from 'styled-components';\n\nimport { tagPropType } from '../../prop-types';\nimport Font, { getFontStyle } from '../Font';\nimport styles from './Heading.module.css';\n\nexport const getHeadingFontStyle = ({\n  color = 'default',\n  size = 'md',\n  weight = 'normal',\n  level = 1,\n  theme,\n}) => {\n  const levels = {\n    1: {\n      contrast: '3',\n      size: 'xl',\n      weight: 'normal',\n    },\n    2: {\n      contrast: '3',\n      size: 'lg',\n      weight: 'normal',\n    },\n    3: {\n      contrast: '3',\n      size: 'md',\n      weight: 'bold',\n    },\n    4: {\n      contrast: '2',\n      size: 'sm',\n      weight: 'bold',\n    },\n  };\n\n  return {\n    ...getFontStyle({\n      ...levels[`${level}`],\n      theme,\n    }),\n  };\n};\n\nconst Heading = ({\n  className,\n  level,\n  tag: CustomTag,\n  ...passedProps\n}) => {\n  const Tag = useMemo(() => {\n    if (CustomTag) {\n      return CustomTag;\n    }\n\n    return `h${level}`;\n  }, [CustomTag, level]);\n\n  return (\n    <Font\n      {...passedProps}\n      className={classNames(className, styles.Heading)}\n      tag={Tag}\n    />\n  );\n};\n\nHeading.propTypes = {\n  className: PropTypes.string,\n  level: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  tag: tagPropType,\n};\n\nHeading.defaultProps = {\n  className: '',\n  level: 1,\n  tag: null,\n};\n\nconst StyledHeading = styled(Heading)(\n  ({\n    level,\n    theme,\n  }) => getHeadingFontStyle({\n    level,\n    theme,\n  })\n);\n\nexport const H1 = props => <StyledHeading {...props} level={1} />;\nexport const H2 = props => <StyledHeading {...props} level={2} />;\nexport const H3 = props => <StyledHeading {...props} level={3} />;\nexport const H4 = props => <StyledHeading {...props} level={4} />;\n\nexport default StyledHeading;\n"]},"metadata":{},"sourceType":"module"}