{"ast":null,"code":"var _jsxFileName = \"/Users/pixelbandito/Code/pixelbandito/themetron-3/workspaces/themed-ui/src/GridOverlay/GridOverlay.js\";\nimport React, { useCallback, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Mousetrap from 'mousetrap';\nimport styles from './GridOverlay.module.css';\n\nconst GridOverlay = () => {\n  const [isVisible, setIsVisible] = useState(false);\n  const toggleIsVisible = useCallback(() => {\n    setIsVisible(!isVisible);\n  }, [isVisible]);\n  useEffect(() => {\n    Mousetrap.bind('.', toggleIsVisible);\n    return () => {\n      Mousetrap.unbind('.', toggleIsVisible);\n    };\n  }, [toggleIsVisible]);\n\n  if (!isVisible) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.GridOverlay,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  });\n};\n\nGridOverlay.propTypes = {\n  className: PropTypes.string\n};\nGridOverlay.defaultProps = {\n  className: ''\n};\nexport default GridOverlay;","map":{"version":3,"sources":["/Users/pixelbandito/Code/pixelbandito/themetron-3/workspaces/themed-ui/src/GridOverlay/GridOverlay.js"],"names":["React","useCallback","useEffect","useState","PropTypes","Mousetrap","styles","GridOverlay","isVisible","setIsVisible","toggleIsVisible","bind","unbind","propTypes","className","string","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,SAA7B,EAAwCC,QAAxC,QAAwD,OAAxD;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,SAAP,MAAsB,WAAtB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;;AAGA,MAAMC,WAAW,GAAG,MAAM;AACxB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,KAAD,CAA1C;AAEA,QAAMO,eAAe,GAAGT,WAAW,CAAC,MAAM;AACxCQ,IAAAA,YAAY,CAAC,CAACD,SAAF,CAAZ;AACD,GAFkC,EAEhC,CAACA,SAAD,CAFgC,CAAnC;AAIAN,EAAAA,SAAS,CAAC,MAAM;AACdG,IAAAA,SAAS,CAACM,IAAV,CAAe,GAAf,EAAoBD,eAApB;AAEA,WAAO,MAAM;AACXL,MAAAA,SAAS,CAACO,MAAV,CAAiB,GAAjB,EAAsBF,eAAtB;AACD,KAFD;AAGD,GANQ,EAMN,CAACA,eAAD,CANM,CAAT;;AAQA,MAAI,CAACF,SAAL,EAAgB;AACd,WAAO,IAAP;AACD;;AAED,sBACE;AAAK,IAAA,SAAS,EAAEF,MAAM,CAACC,WAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAGD,CAtBD;;AAwBAA,WAAW,CAACM,SAAZ,GAAwB;AACtBC,EAAAA,SAAS,EAAEV,SAAS,CAACW;AADC,CAAxB;AAIAR,WAAW,CAACS,YAAZ,GAA2B;AACzBF,EAAAA,SAAS,EAAE;AADc,CAA3B;AAIA,eAAeP,WAAf","sourcesContent":["import React, { useCallback, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Mousetrap from 'mousetrap';\nimport styles from './GridOverlay.module.css';\n\n\nconst GridOverlay = () => {\n  const [isVisible, setIsVisible] = useState(false);\n\n  const toggleIsVisible = useCallback(() => {\n    setIsVisible(!isVisible);\n  }, [isVisible]);\n\n  useEffect(() => {\n    Mousetrap.bind('.', toggleIsVisible);\n\n    return () => {\n      Mousetrap.unbind('.', toggleIsVisible);\n    };\n  }, [toggleIsVisible]);\n\n  if (!isVisible) {\n    return null;\n  }\n\n  return (\n    <div className={styles.GridOverlay} />\n  );\n};\n\nGridOverlay.propTypes = {\n  className: PropTypes.string,\n};\n\nGridOverlay.defaultProps = {\n  className: '',\n};\n\nexport default GridOverlay;\n"]},"metadata":{},"sourceType":"module"}