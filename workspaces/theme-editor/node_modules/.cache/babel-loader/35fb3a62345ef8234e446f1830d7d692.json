{"ast":null,"code":"var _jsxFileName = \"/Users/pixelbandito/Code/pixelbandito/themetron-3/workspaces/theme-editor/src/Card/Card.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport styled from 'styled-components';\nimport { margin } from 'styled-system';\nimport { getModeStyles } from '../component-utils';\nimport styles from './Card.module.css';\nexport const getCardStyles = ({\n  variant = 'default',\n  theme\n}) => {\n  var _theme$shared;\n\n  const darkModeStyle = {\n    background: theme.baseColors.black,\n    borderColor: theme.colors[variant]['light-1']\n  };\n  const lightModeStyle = {\n    background: theme.baseColors.white,\n    borderColor: theme.colors[variant]['dark-1']\n  };\n  return {\n    borderRadius: `${theme.shared.roundness * 2}px`,\n    ...getModeStyles({\n      darkModeStyle,\n      lightModeStyle,\n      mode: theme === null || theme === void 0 ? void 0 : (_theme$shared = theme.shared) === null || _theme$shared === void 0 ? void 0 : _theme$shared.mode\n    })\n  };\n};\nexport const getCardHeadStyles = ({\n  variant,\n  theme\n}) => {\n  var _theme$colors$variant, _theme$colors$variant2, _theme$colors$variant3, _theme$colors$variant4, _theme$shared2;\n\n  const lightModeStyle = {\n    background: ((_theme$colors$variant = theme.colors[variant]) === null || _theme$colors$variant === void 0 ? void 0 : _theme$colors$variant['light-bg']) || 'transparent',\n    borderColor: ((_theme$colors$variant2 = theme.colors[variant]) === null || _theme$colors$variant2 === void 0 ? void 0 : _theme$colors$variant2['dark-1']) || 'transparent'\n  };\n  const darkModeStyle = {\n    background: ((_theme$colors$variant3 = theme.colors[variant]) === null || _theme$colors$variant3 === void 0 ? void 0 : _theme$colors$variant3['dark-bg']) || 'transparent',\n    borderColor: ((_theme$colors$variant4 = theme.colors[variant]) === null || _theme$colors$variant4 === void 0 ? void 0 : _theme$colors$variant4['light-1']) || 'transparent'\n  };\n  return {\n    borderRadius: `${theme.shared.roundness * 2}px ${theme.shared.roundness * 2}px 0 0`,\n    padding: `${theme.space.sm}px ${theme.space.md}px`,\n    ...getModeStyles({\n      darkModeStyle,\n      lightModeStyle,\n      mode: theme === null || theme === void 0 ? void 0 : (_theme$shared2 = theme.shared) === null || _theme$shared2 === void 0 ? void 0 : _theme$shared2.mode\n    })\n  };\n};\nexport const getCardBodyStyles = ({\n  theme\n}) => {\n  var _theme$shared3;\n\n  const darkModeStyle = {\n    background: theme.baseColors.black\n  };\n  const lightModeStyle = {\n    background: theme.baseColors.white\n  };\n  return {\n    padding: `${theme.space.md}px`,\n    ...getModeStyles({\n      darkModeStyle,\n      lightModeStyle,\n      mode: theme === null || theme === void 0 ? void 0 : (_theme$shared3 = theme.shared) === null || _theme$shared3 === void 0 ? void 0 : _theme$shared3.mode\n    })\n  };\n};\nexport const getCardFootStyles = ({\n  variant,\n  theme\n}) => {\n  var _theme$colors$variant5, _theme$colors$variant6, _theme$colors$variant7, _theme$colors$variant8, _theme$shared4;\n\n  const darkModeStyle = {\n    background: ((_theme$colors$variant5 = theme.colors[variant]) === null || _theme$colors$variant5 === void 0 ? void 0 : _theme$colors$variant5['dark-bg']) || 'transparent',\n    borderColor: ((_theme$colors$variant6 = theme.colors[variant]) === null || _theme$colors$variant6 === void 0 ? void 0 : _theme$colors$variant6['light-1']) || 'transparent'\n  };\n  const lightModeStyle = {\n    background: ((_theme$colors$variant7 = theme.colors[variant]) === null || _theme$colors$variant7 === void 0 ? void 0 : _theme$colors$variant7['light-bg']) || 'transparent',\n    borderColor: ((_theme$colors$variant8 = theme.colors[variant]) === null || _theme$colors$variant8 === void 0 ? void 0 : _theme$colors$variant8['dark-1']) || 'transparent'\n  };\n  return {\n    borderRadius: `0 0 ${theme.shared.roundness * 2}px ${theme.shared.roundness * 2}px`,\n    padding: `${theme.space.sm}px ${theme.space.md}px`,\n    ...getModeStyles({\n      darkModeStyle,\n      lightModeStyle,\n      mode: theme === null || theme === void 0 ? void 0 : (_theme$shared4 = theme.shared) === null || _theme$shared4 === void 0 ? void 0 : _theme$shared4.mode\n    })\n  };\n};\nconst Card = React.forwardRef(({\n  className,\n  ...passedProps\n}, forwardedRef) => /*#__PURE__*/React.createElement(\"div\", Object.assign({\n  className: classNames(className, styles.Card),\n  ref: forwardedRef\n}, passedProps, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 3\n  }\n})));\nCard.propTypes = {\n  className: PropTypes.string\n};\nCard.defaultProps = {\n  className: ''\n};\nconst StyledCard = styled(Card)(props => getCardStyles(props), margin);\nexport const CardHead = ({\n  className,\n  ...passedProps\n}) => /*#__PURE__*/React.createElement(\"div\", Object.assign({\n  className: classNames(className, styles.Head)\n}, passedProps, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 3\n  }\n}));\nCardHead.propTypes = {\n  className: PropTypes.string\n};\nCardHead.defaultProps = {\n  className: ''\n};\nconst StyledCardHead = styled(CardHead)(({\n  variant,\n  theme\n}) => getCardHeadStyles({\n  variant,\n  theme\n}));\nexport const CardBody = React.forwardRef(({\n  className,\n  ...passedProps\n}, forwardRef) => /*#__PURE__*/React.createElement(\"div\", Object.assign({\n  className: classNames(className, styles.Body),\n  ref: forwardRef\n}, passedProps, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 160,\n    columnNumber: 3\n  }\n})));\nCardBody.propTypes = {\n  className: PropTypes.string\n};\nCardBody.defaultProps = {\n  className: ''\n};\nconst StyledCardBody = styled(CardBody)(({\n  variant,\n  theme\n}) => getCardBodyStyles({\n  variant,\n  theme\n}));\nexport const CardFoot = ({\n  className,\n  ...passedProps\n}) => /*#__PURE__*/React.createElement(\"div\", Object.assign({\n  className: classNames(className, styles.Foot)\n}, passedProps, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 189,\n    columnNumber: 3\n  }\n}));\nCardFoot.propTypes = {\n  className: PropTypes.string\n};\nCardFoot.defaultProps = {\n  className: ''\n};\nconst StyledCardFoot = styled(CardFoot)(({\n  variant,\n  theme\n}) => getCardFootStyles({\n  variant,\n  theme\n}));\nStyledCard.Head = StyledCardHead;\nStyledCard.Body = StyledCardBody;\nStyledCard.Foot = StyledCardFoot;\nexport default StyledCard;","map":{"version":3,"sources":["/Users/pixelbandito/Code/pixelbandito/themetron-3/workspaces/theme-editor/src/Card/Card.js"],"names":["React","PropTypes","classNames","styled","margin","getModeStyles","styles","getCardStyles","variant","theme","darkModeStyle","background","baseColors","black","borderColor","colors","lightModeStyle","white","borderRadius","shared","roundness","mode","getCardHeadStyles","padding","space","sm","md","getCardBodyStyles","getCardFootStyles","Card","forwardRef","className","passedProps","forwardedRef","propTypes","string","defaultProps","StyledCard","props","CardHead","Head","StyledCardHead","CardBody","Body","StyledCardBody","CardFoot","Foot","StyledCardFoot"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport styled from 'styled-components';\nimport { margin } from 'styled-system'\nimport { getModeStyles } from '../component-utils';\nimport styles from './Card.module.css';\n\nexport const getCardStyles = ({\n  variant = 'default',\n  theme,\n}) => {\n  const darkModeStyle = {\n    background: theme.baseColors.black,\n    borderColor: theme.colors[variant]['light-1'],\n  };\n\n  const lightModeStyle = {\n    background: theme.baseColors.white,\n    borderColor: theme.colors[variant]['dark-1'],\n  };\n\n  return {\n    borderRadius: `${theme.shared.roundness * 2}px`,\n    ...getModeStyles({\n      darkModeStyle,\n      lightModeStyle,\n      mode: theme?.shared?.mode,\n    }),\n  };\n};\n\nexport const getCardHeadStyles = ({\n  variant,\n  theme,\n}) => {\n  const lightModeStyle = {\n    background: theme.colors[variant]?.['light-bg'] || 'transparent',\n    borderColor: theme.colors[variant]?.['dark-1'] || 'transparent',\n  };\n\n  const darkModeStyle = {\n    background: theme.colors[variant]?.['dark-bg'] || 'transparent',\n    borderColor: theme.colors[variant]?.['light-1'] || 'transparent',\n  };\n\n  return {\n    borderRadius: `${theme.shared.roundness * 2}px ${theme.shared.roundness * 2}px 0 0`,\n    padding: `${theme.space.sm}px ${theme.space.md}px`,\n    ...getModeStyles({\n      darkModeStyle,\n      lightModeStyle,\n      mode: theme?.shared?.mode,\n    }),\n  };\n};\n\nexport const getCardBodyStyles = ({\n  theme,\n}) => {\n  const darkModeStyle = {\n    background: theme.baseColors.black,\n  };\n\n  const lightModeStyle = {\n    background: theme.baseColors.white,\n  };\n\n  return {\n    padding: `${theme.space.md}px`,\n    ...getModeStyles({\n      darkModeStyle,\n      lightModeStyle,\n      mode: theme?.shared?.mode,\n    }),\n  };\n};\n\nexport const getCardFootStyles = ({\n  variant,\n  theme,\n}) => {\n  const darkModeStyle = {\n    background: theme.colors[variant]?.['dark-bg'] || 'transparent',\n    borderColor: theme.colors[variant]?.['light-1'] || 'transparent',\n  };\n\n  const lightModeStyle = {\n    background: theme.colors[variant]?.['light-bg'] || 'transparent',\n    borderColor: theme.colors[variant]?.['dark-1'] || 'transparent',\n  };\n\n  return {\n    borderRadius: `0 0 ${theme.shared.roundness * 2}px ${theme.shared.roundness * 2}px`,\n    padding: `${theme.space.sm}px ${theme.space.md}px`,\n    ...getModeStyles({\n      darkModeStyle,\n      lightModeStyle,\n      mode: theme?.shared?.mode,\n    }),\n  };\n};\n\nconst Card = React.forwardRef(({\n  className,\n  ...passedProps\n}, forwardedRef) => (\n  <div\n    className={classNames(className, styles.Card)}\n    ref={forwardedRef}\n    {...passedProps}\n  />\n));\n\nCard.propTypes = {\n  className: PropTypes.string,\n};\n\nCard.defaultProps = {\n  className: '',\n};\n\nconst StyledCard = styled(Card)(\n  props => getCardStyles(props),\n  margin,\n);\n\nexport const CardHead = ({\n  className,\n  ...passedProps\n}) => (\n  <div\n    className={classNames(className, styles.Head)}\n    {...passedProps}\n  />\n);\n\nCardHead.propTypes = {\n  className: PropTypes.string,\n};\n\nCardHead.defaultProps = {\n  className: '',\n};\n\nconst StyledCardHead = styled(CardHead)(\n  ({\n    variant,\n    theme,\n  }) => getCardHeadStyles({\n    variant,\n    theme,\n  }),\n);\n\nexport const CardBody = React.forwardRef(({\n  className,\n  ...passedProps\n}, forwardRef) => (\n  <div\n    className={classNames(className, styles.Body)}\n    ref={forwardRef}\n    {...passedProps}\n  />\n));\n\nCardBody.propTypes = {\n  className: PropTypes.string,\n};\n\nCardBody.defaultProps = {\n  className: '',\n};\n\nconst StyledCardBody = styled(CardBody)(\n  ({\n    variant,\n    theme,\n  }) => getCardBodyStyles({\n    variant,\n    theme,\n  }),\n);\n\nexport const CardFoot = ({\n  className,\n  ...passedProps\n}) => (\n  <div\n    className={classNames(className, styles.Foot)}\n    {...passedProps}\n  />\n);\n\nCardFoot.propTypes = {\n  className: PropTypes.string,\n};\n\nCardFoot.defaultProps = {\n  className: '',\n};\n\nconst StyledCardFoot = styled(CardFoot)(\n  ({\n    variant,\n    theme,\n  }) => getCardFootStyles({\n    variant,\n    theme,\n  }),\n);\n\nStyledCard.Head = StyledCardHead;\nStyledCard.Body = StyledCardBody;\nStyledCard.Foot = StyledCardFoot;\n\nexport default StyledCard;\n"]},"metadata":{},"sourceType":"module"}