{"ast":null,"code":"var _jsxFileName = \"/Users/pixelbandito/Code/pixelbandito/themetron-3/workspaces/theme-editor/src/Examples/Examples.js\";\nimport React, { useContext, useMemo, useState } from 'react';\nimport styled, { ThemeContext } from 'styled-components';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport Accordion from '@pixelbandito/themed-ui/Accordion';\nimport Button from '../Button';\nimport Card from '../Card';\nimport Font, { Em, H1, H2, H3, H4, P, Small, Strong } from '../Font';\nimport { A } from '../Link';\nimport styles from './Examples.module.css';\n\nconst Examples = ({\n  className\n}) => {\n  const theme = useContext(ThemeContext);\n  const [buttonVariantIndex, setButtonVariantIndex] = useState(0);\n  const [cardVariantIndex, setCardVariantIndex] = useState(0);\n  const availableVariants = useMemo(() => Object.keys(theme.baseColors).filter(key => !['black', 'white'].includes(key)), [theme.baseColors]);\n  const availableCardVariants = useMemo(() => [...availableVariants, undefined], [availableVariants]);\n  const cardVariant = availableCardVariants[cardVariantIndex];\n\n  const handleIncrementCardVariantIndex = () => {\n    setCardVariantIndex(prevButtonVariantIndex => (prevButtonVariantIndex + 1) % availableCardVariants.length);\n  };\n\n  const availableButtonVariants = useMemo(() => Object.keys(theme.buttons.variants), [theme.buttons.variants]);\n  const buttonVariant = availableButtonVariants[buttonVariantIndex];\n\n  const handleIncrementButtonVariantIndex = () => {\n    setButtonVariantIndex(prevButtonVariantIndex => (prevButtonVariantIndex + 1) % availableButtonVariants.length);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classNames(className, styles.Examples),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(A, {\n    href: \"#heading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, \"Link\"), /*#__PURE__*/React.createElement(H1, {\n    id: \"heading-1\",\n    mb: \"md\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, \"Heading 1\"), /*#__PURE__*/React.createElement(H2, {\n    id: \"heading-2\",\n    mb: \"md\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, \"Heading 2\"), /*#__PURE__*/React.createElement(H3, {\n    id: \"heading-3\",\n    mb: \"md\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, \"Heading 3\"), /*#__PURE__*/React.createElement(H4, {\n    id: \"heading-4\",\n    mb: \"md\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, \"Heading 4\"), /*#__PURE__*/React.createElement(Button, {\n    mb: \"md\",\n    mr: \"md\",\n    onClick: handleIncrementButtonVariantIndex,\n    size: \"sm\",\n    variant: buttonVariant,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, \"Button (\", buttonVariant, \")\"), ' ', /*#__PURE__*/React.createElement(Button, {\n    mb: \"md\",\n    mr: \"md\",\n    onClick: handleIncrementButtonVariantIndex,\n    variant: buttonVariant,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, \"Button (\", buttonVariant, \")\"), ' ', /*#__PURE__*/React.createElement(Button, {\n    mb: \"md\",\n    mr: \"md\",\n    onClick: handleIncrementButtonVariantIndex,\n    size: \"lg\",\n    variant: buttonVariant,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }, \"Button (\", buttonVariant, \")\"), ' ', /*#__PURE__*/React.createElement(\"input\", {\n    value: \"Input\",\n    onChange: () => {},\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(P, {\n    mb: \"md\",\n    mt: \"md\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }\n  }, \"This paragraph has \", /*#__PURE__*/React.createElement(Strong, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 28\n    }\n  }, \"strong\"), \", \", /*#__PURE__*/React.createElement(Em, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 53\n    }\n  }, \"emphasized\"), \", and \", /*#__PURE__*/React.createElement(Small, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 78\n    }\n  }, \"small\"), \" text in it.\"), /*#__PURE__*/React.createElement(P, {\n    mb: \"md\",\n    mt: \"md\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Font, {\n    contrast: \"1\",\n    tag: \"span\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }\n  }, \"High contrast text!\"), ' ', /*#__PURE__*/React.createElement(Font, {\n    contrast: \"2\",\n    tag: \"span\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }\n  }, \"Medium contrast text!\"), ' ', /*#__PURE__*/React.createElement(Font, {\n    contrast: \"3\",\n    tag: \"span\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }\n  }, \"Lower contrast text!\")), /*#__PURE__*/React.createElement(Font, {\n    tag: \"div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(A, {\n    href: \"#heading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  }, \"Link\"), /*#__PURE__*/React.createElement(Card, {\n    mb: \"md\",\n    mt: \"md\",\n    onClick: handleIncrementCardVariantIndex,\n    variant: cardVariant,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card.Head, {\n    variant: cardVariant,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 11\n    }\n  }, \"Card head \", cardVariant && /*#__PURE__*/React.createElement(React.Fragment, null, \"(\", cardVariant, \")\")), /*#__PURE__*/React.createElement(Card.Body, {\n    variant: cardVariant,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 11\n    }\n  }, \"Card body\"), /*#__PURE__*/React.createElement(Card.Foot, {\n    variant: cardVariant,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 11\n    }\n  }, \"Card foot\")), /*#__PURE__*/React.createElement(Accordion, {\n    mb: \"md\",\n    mt: \"md\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }\n  }, \"Accordion contents\")));\n};\n\nExamples.propTypes = {\n  className: PropTypes.string\n};\nExamples.defaultProps = {\n  className: ''\n};\nconst StyledExamples = styled(Examples)(({\n  theme\n}) => ({\n  backgroundColor: theme.shared.mode === 'dark' && theme.colors.default['dark-bg'] || theme.colors.default['light-bg'],\n  padding: theme.space.lg,\n  '@media (prefers-color-scheme: dark)': !theme.shared.mode && {\n    backgroundColor: theme.colors.default['dark-bg']\n  },\n  '@media (prefers-color-scheme: light)': !theme.shared.mode && {\n    backgroundColor: theme.colors.default['light-bg']\n  }\n}));\nexport default StyledExamples;","map":{"version":3,"sources":["/Users/pixelbandito/Code/pixelbandito/themetron-3/workspaces/theme-editor/src/Examples/Examples.js"],"names":["React","useContext","useMemo","useState","styled","ThemeContext","classNames","PropTypes","Accordion","Button","Card","Font","Em","H1","H2","H3","H4","P","Small","Strong","A","styles","Examples","className","theme","buttonVariantIndex","setButtonVariantIndex","cardVariantIndex","setCardVariantIndex","availableVariants","Object","keys","baseColors","filter","key","includes","availableCardVariants","undefined","cardVariant","handleIncrementCardVariantIndex","prevButtonVariantIndex","length","availableButtonVariants","buttons","variants","buttonVariant","handleIncrementButtonVariantIndex","propTypes","string","defaultProps","StyledExamples","backgroundColor","shared","mode","colors","default","padding","space","lg"],"mappings":"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","sourcesContent":["import React, { useContext, useMemo, useState } from 'react';\nimport styled, { ThemeContext } from 'styled-components';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\n\nimport Accordion from '@pixelbandito/themed-ui/Accordion';\nimport Button from '../Button';\nimport Card from '../Card';\nimport Font, { Em, H1, H2, H3, H4, P, Small, Strong } from '../Font';\nimport { A } from '../Link';\nimport styles from './Examples.module.css';\n\nconst Examples = ({ className }) => {\n  const theme = useContext(ThemeContext);\n  const [buttonVariantIndex, setButtonVariantIndex] = useState(0);\n  const [cardVariantIndex, setCardVariantIndex] = useState(0);\n\n  const availableVariants = useMemo(\n    () => Object.keys(theme.baseColors).filter(key => !['black', 'white'].includes(key)),\n    [theme.baseColors],\n  );\n\n  const availableCardVariants = useMemo(() => [...availableVariants, undefined], [availableVariants]);\n\n  const cardVariant = availableCardVariants[cardVariantIndex];\n\n  const handleIncrementCardVariantIndex = () => {\n    setCardVariantIndex(prevButtonVariantIndex => (prevButtonVariantIndex + 1) % availableCardVariants.length);\n  }\n\n  const availableButtonVariants = useMemo(\n    () => Object.keys(theme.buttons.variants),\n    [theme.buttons.variants],\n  );\n\n  const buttonVariant = availableButtonVariants[buttonVariantIndex];\n\n  const handleIncrementButtonVariantIndex = () => {\n    setButtonVariantIndex(prevButtonVariantIndex => (prevButtonVariantIndex + 1) % availableButtonVariants.length);\n  }\n\n  return (\n    <div className={classNames(className, styles.Examples)}>\n      <A href=\"#heading\">Link</A>\n      <H1\n        id=\"heading-1\"\n        mb=\"md\"\n      >\n        Heading 1\n      </H1>\n      <H2\n        id=\"heading-2\"\n        mb=\"md\"\n      >\n        Heading 2\n      </H2>\n      <H3\n        id=\"heading-3\"\n        mb=\"md\"\n      >\n        Heading 3\n      </H3>\n      <H4\n        id=\"heading-4\"\n        mb=\"md\"\n      >\n        Heading 4\n      </H4>\n      <Button\n        mb=\"md\"\n        mr=\"md\"\n        onClick={handleIncrementButtonVariantIndex}\n        size=\"sm\"\n        variant={buttonVariant}\n      >\n        Button ({buttonVariant})\n      </Button>\n      {' '}\n      <Button\n        mb=\"md\"\n        mr=\"md\"\n        onClick={handleIncrementButtonVariantIndex}\n        variant={buttonVariant}\n      >\n        Button ({buttonVariant})\n      </Button>\n      {' '}\n      <Button\n        mb=\"md\"\n        mr=\"md\"\n        onClick={handleIncrementButtonVariantIndex}\n        size=\"lg\"\n        variant={buttonVariant}\n      >\n        Button ({buttonVariant})\n      </Button>\n      {' '}\n      <input value=\"Input\" onChange={() => {}}></input>\n      <P\n        mb=\"md\"\n        mt=\"md\"\n      >\n        This paragraph has <Strong>strong</Strong>, <Em>emphasized</Em>, and <Small>small</Small> text in it.\n      </P>\n      <P\n        mb=\"md\"\n        mt=\"md\"\n      >\n        <Font contrast=\"1\" tag=\"span\">High contrast text!</Font>{' '}\n        <Font contrast=\"2\" tag=\"span\">Medium contrast text!</Font>{' '}\n        <Font contrast=\"3\" tag=\"span\">Lower contrast text!</Font>\n      </P>\n      <Font tag=\"div\">\n        <A href=\"#heading\">Link</A>\n        <Card\n          mb=\"md\"\n          mt=\"md\"\n          onClick={handleIncrementCardVariantIndex}\n          variant={cardVariant}\n        >\n          <Card.Head variant={cardVariant}>\n            Card head {cardVariant && (<>({cardVariant})</>)}\n          </Card.Head>\n          <Card.Body variant={cardVariant}>\n            Card body\n          </Card.Body>\n          <Card.Foot variant={cardVariant}>\n            Card foot\n          </Card.Foot>\n        </Card>\n        <Accordion\n          mb=\"md\"\n          mt=\"md\"\n        >\n          Accordion contents\n        </Accordion>\n      </Font>\n    </div>\n  );\n};\n\nExamples.propTypes = {\n  className: PropTypes.string,\n};\n\nExamples.defaultProps = {\n  className: '',\n};\n\nconst StyledExamples = styled(Examples)(\n  ({\n    theme,\n  }) => ({\n    backgroundColor: (theme.shared.mode === 'dark' && theme.colors.default['dark-bg']) || theme.colors.default['light-bg'] ,\n    padding: theme.space.lg,\n    '@media (prefers-color-scheme: dark)': !theme.shared.mode && {\n      backgroundColor: theme.colors.default['dark-bg'],\n    },\n    '@media (prefers-color-scheme: light)': !theme.shared.mode && {\n      backgroundColor: theme.colors.default['light-bg'],\n    },\n  })\n);\n\nexport default StyledExamples;\n"]},"metadata":{},"sourceType":"module"}