{"version":3,"sources":["App.module.css","ThemeForm/ThemeForm.module.css","ThemeForm/Control/Control.module.css","Swatch/Swatch.module.css","Examples/Examples.module.css","GridOverlay/GridOverlay.module.css","../../src/utils/colors.js","../../src/utils/fonts.js","../../src/component-utils.js","../../src/theme-utils.mjs","../../src/theme.mjs","../../src/Card/Card.js","../../src/Accordion/Accordion.js","../../src/prop-types.js","../../src/Font/Font.js","../../src/Font/Heading/Heading.js","../../src/Button/Button.js","../../src/Input/Input.js","../../src/Link/Link.js","Swatch/Swatch.js","Swatch/index.js","ThemeForm/utils.js","ThemeForm/Control/Control.js","ThemeForm/Control/index.js","ThemeForm/ThemeForm.js","ThemeForm/index.js","Examples/Examples.js","Examples/index.js","GridOverlay/GridOverlay.js","GridOverlay/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","getContrastRatio","hexB","luminanceA","luminanceB","getLuminance","hexA","sort","toFixed","getNextLuminanceByContrastRatio","contrastRatio","luminance","getPrevLuminanceByContrastRatio","rgb2","colorConvert","hex","rgb","map","channel","i","c","Math","pow","setColorByContrastWithHsl","targetLuminance","attempt","baseHex","targetContrastRatio","originalContrastRatio","direction","maxAttempts","nextColor","setColorByLuminanceWithHsl","initHsl","jumpSize","prevHsl","hsl","safeInitHsl","setHsl","l","max","min","h2","h","s2","s","l2","getHexFromHexOrName","safeValue","keyword","color","toLowerCase","e","substr","window","pxbColors","getFontFromGoogleFontApiResponse","apiResponse","apiUrl","push","family","replace","variants","indexOf","subsets","fallback","category","name","source","join","getModeStyles","mode","lightModeStyle","darkModeStyle","@media (prefers-color-scheme: light)","@media (prefers-color-scheme: dark)","getInheritedBaseColor","baseColors","initMaxAttempts","prevUnsafeColor","resolveCssColors","unsafeColor","Object","keys","length","getColors","contrastRatios","entries","reduce","prevResult","key","result","white","black","base","forEach","getButtons","fonts","space","filter","includes","default","keyColor",":hover",":focus",":active",":disabled","borderWidth","roundness","shine","sizes","sm","fontSize","paddingH","paddingV","xs","md","lg","getMinLineHeight","size","idealSize","floor","ceil","px","abs","ratio","getSizeLabelFromIndex","sizeIndex","smSizeLabels","lgSizeLabels","spacings","compact","cozy","relaxed","loose","getSizes","offset","spacing","count","customSizes","lgCount","mdSize","smCount","label","Error","Array","fill","baseSize","primary","colors","shared","elevation","getShared","xl","weights","normal","bold","theme","stage","version","baseFonts","buttons","getCardBodyStyles","background","borderRadius","padding","Card","React","passedProps","classNames","className","styles","forwardedRef","PropTypes","string","StyledCard","styled","props","variant","borderColor","getCardStyles","CardHead","StyledCardHead","getCardHeadStyles","CardBody","forwardRef","StyledCardBody","CardFoot","StyledCardFoot","getCardFootStyles","UnstyledAccordion","speed","head","useState","useContext","customHead","isOpen","enter","enterActive","exit","exitActive","exitDone","in","timeout","duration","onClick","setIsOpen","prev","style","transition","mountOnEnter","onEnter","node","parseInt","Number","percentClosed","nextHeight","nextDuration","setDuration","setHeight","setTransition","onEntered","currentHeight","onExit","onExiting","unmountOnExit","height","children","defaultIsOpen","StyledAccordion","tagPropType","$$typeof","render","func","VariantContext","createContext","getFontStyle","contrast","variantKey","weight","lineHeightRatio","font","fontFamilies","fontFamily","fontWeight","lineHeight","useGoogleFontLink","document","link","getGoogleFontLink","Font","tag","WithFontVariant","WrappedComponent","Wrapper","variantContext","variantProp","value","StyledFont","P","Small","Strong","Em","Heading","Tag","useMemo","CustomTag","level","StyledHeading","1","2","3","4","getHeadingFontStyle","H1","H2","H3","H4","Button","ref","outline","StyledButton","getVariantColors","variantStyles","backgroundColorKey","backgroundColor","colorKey","lineHeightPx","modeStyles","borderStyle","paddingBottom","paddingLeft","paddingRight","paddingTop","outlineStyle","outlineColor","boxShadow","Input","StyledInput","getColor","baseColor","lightModeFontStyle","darkModeFontStyle","console","inputStyle","A","Swatch","defaultProps","getNumberOrDont","number","isNaN","MyFontPicker","fontPicker","apiKey","process","activeFontFamily","Control","id","onChange","onDelete","type","FontPicker","htmlFor","delete","input","ThemeForm","initTheme","onChangeTheme","onApplyTheme","setRoundness","themeForm","setThemeForm","importInputFileRef","useRef","useEffect","handleClickApply","useCallback","handleClickRevert","handleClickImport","current","click","handleChangeImport","reader","FileReader","readAsText","target","files","onload","JSON","parse","warn","message","prevThemeForm","isAddingBaseColor","setIsAddingBaseColor","newBaseColorName","setNewBaseColorName","safeBaseColors","handleDeleteBaseColor","nextBaseColors","handleChangeBaseColorHex","debouncedHandleChangeBaseColorHex","debounce","isAddingBaseFont","setIsAddingBaseFont","newBaseFontName","setNewBaseFontName","handleChangeFont","handleDeleteFont","nextBaseFonts","setSpacing","handleChangeSpacing","nextSpacing","borderBottomWidth","nextRoundness","step","event","swatches","variantKeyA","variantKeyB","charCodeAt","swatch","undefined","disabled","Head","actions","download","href","encodeURIComponent","stringify","display","left","opacity","position","top","width","zIndex","tabIndex","Examples","ThemeContext","buttonVariantIndex","setButtonVariantIndex","cardVariantIndex","setCardVariantIndex","fontVariantIndex","setFontVariantIndex","inputValue","setInputValue","availableColorVariants","availableCardVariants","cardVariant","availableButtonVariants","buttonVariant","handleIncrementButtonVariantIndex","prevButtonVariantIndex","availableFontVariants","fontVariant","mb","mr","log","prevFontVariantIndex","mt","Body","Foot","GridOverlay","isVisible","setIsVisible","toggleIsVisible","Mousetrap","bind","unbind","App","defaultTheme","setTheme","themePreview","setThemePreview","sidebarIsExpanded","setSidebarIsExpanded","handleChangeThemePreview","handleApplyThemePreview","withSidebarExpanded","sidebar","form","sideBarToggleStripe","sideBarToggleButton","example","Boolean","location","hostname","match","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.043ab5ad.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__16ZpL\",\"withSidebarExpanded\":\"App_withSidebarExpanded__39jRM\",\"sidebar\":\"App_sidebar__1l9Om\",\"form\":\"App_form__30Y9M\",\"example\":\"App_example__1C_qW\",\"sideBarToggleStripe\":\"App_sideBarToggleStripe__3bW0U\",\"sideBarToggleButton\":\"App_sideBarToggleButton__8_aRn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ThemeForm\":\"ThemeForm_ThemeForm__SOs96\",\"swatches\":\"ThemeForm_swatches__3cWYc\",\"swatch\":\"ThemeForm_swatch__dduV2\",\"actions\":\"ThemeForm_actions__2ZooL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Control\":\"Control_Control__3EPTo\",\"label\":\"Control_label__3Ujpe\",\"delete\":\"Control_delete__25-H-\",\"input\":\"Control_input__2uiDw\",\"fontPicker\":\"Control_fontPicker__3aEAG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Swatch\":\"Swatch_Swatch__Hae-f\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Example\":\"Examples_Example__OpCB9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"GridOverlay\":\"GridOverlay_GridOverlay__38eQu\"};","import colorConvert from 'color-convert';\n\nexport const getContrastRatio = ({ hexA, hexB, luminanceA, luminanceB }) => {\n  luminanceA = luminanceA || luminanceA === 0 ? luminanceA : getLuminance(hexA);\n  luminanceB = luminanceB || luminanceB === 0 ? luminanceB : getLuminance(hexB);\n  const [darker, lighter] = [luminanceA, luminanceB].sort();\n  const contrastRatio = ((lighter + 0.05) / (darker + 0.05)).toFixed(2);\n  return contrastRatio;\n};\n\nexport const getNextLuminanceByContrastRatio = ({ luminance, contrastRatio }) =>\n  luminance * contrastRatio + contrastRatio / 20 - 1 / 20;\n\nexport const getPrevLuminanceByContrastRatio = ({ luminance, contrastRatio }) =>\n  (luminance + 1 / 20) / contrastRatio - 1 / 20;\n\nexport const getLuminance = hex => {\n  const rgb = colorConvert.hex.rgb(hex);\n\n  let rgb2 = rgb.map((channel, i) => {\n    let c = channel / 255;\n\n    if (c <= 0.03928) {\n      return c / 12.92;\n    } else {\n      return Math.pow((c + 0.055) / 1.055, 2.4);\n    }\n  });\n\n  const luminance = (0.2126 * rgb2[0] + 0.7152 * rgb2[1] + 0.0722 * rgb2[2]);\n  return luminance;\n};\n\nexport const setColorByLuminanceWithHsl = ({\n  attempt = 0,\n  hex,\n  initHsl,\n  luminance: targetLuminance,\n  maxAttempts = 10,\n}) => {\n  const luminance = getLuminance(hex);\n\n  if (luminance === targetLuminance || attempt >= maxAttempts) {\n    return hex;\n  }\n\n  const darken = luminance > targetLuminance;\n  const jumpSize = (darken ? -100 : 100) / Math.pow(2, attempt + 1);\n  let prevHsl = colorConvert.hex.hsl(hex);\n  let safeInitHsl = initHsl !== undefined ? initHsl : prevHsl;\n\n  const hsl = setHsl({\n    hsl: safeInitHsl,\n    l: Math.max(0, Math.min(prevHsl[2] + jumpSize, 100)),\n  });\n\n  if (`#${colorConvert.hsl.hex(hsl)}` === hex) {\n    return hex;\n  }\n\n  return setColorByLuminanceWithHsl({\n    attempt: attempt + 1,\n    hex: `#${colorConvert.hsl.hex(hsl)}`,\n    initHsl: safeInitHsl,\n    luminance: targetLuminance,\n    maxAttempts,\n  });\n};\n\nexport const setColorByContrastWithHsl = ({\n  attempt = 0,\n  baseHex,\n  contrastRatio: targetContrastRatio,\n  originalContrastRatio,\n  direction,\n  hex,\n  maxAttempts = 10,\n}) => {\n  let targetLuminance;\n  originalContrastRatio = originalContrastRatio || targetContrastRatio;\n\n  if (!direction) {\n    targetLuminance = getLuminance(baseHex) > 0.5 ?\n      getPrevLuminanceByContrastRatio({\n        contrastRatio: targetContrastRatio,\n        luminance: getLuminance(baseHex),\n      }) :\n      getNextLuminanceByContrastRatio({\n        contrastRatio: targetContrastRatio,\n        luminance: getLuminance(baseHex),\n      });\n  } else if (direction === 'asc') {\n    targetLuminance = getNextLuminanceByContrastRatio({\n      contrastRatio: targetContrastRatio,\n      luminance: getLuminance(baseHex),\n    });\n  } else if (direction === 'desc') {\n    targetLuminance = getPrevLuminanceByContrastRatio({\n      contrastRatio: targetContrastRatio,\n      luminance: getLuminance(baseHex),\n    })\n  }\n\n  const nextColor = setColorByLuminanceWithHsl({\n    hex,\n    luminance: targetLuminance,\n    maxAttempts,\n  });\n\n  if (getContrastRatio({ hexA: nextColor, hexB: baseHex }) >= originalContrastRatio || attempt > maxAttempts) {\n    return nextColor;\n  }\n\n  return setColorByContrastWithHsl({\n    attempt: attempt + 1,\n    baseHex,\n    contrastRatio: targetContrastRatio + 0.05,\n    originalContrastRatio,\n    direction,\n    hex,\n    maxAttempts,\n  });\n};\n\nexport const setHsl = ({ hsl: [h, s, l], h: h2, s: s2, l: l2 }) => ([\n  typeof h2 === 'number' ? h2 : h,\n  typeof s2 === 'number' ? s2 : s,\n  typeof l2 === 'number' ? l2 : l,\n]);\n\nexport const getHexFromHexOrName = color => {\n  let safeValue;\n\n  try {\n    safeValue = colorConvert.keyword.hex(color).toLowerCase();\n  } catch(e) {\n    safeValue = color[0] === '#' ? color.substr(1) : color;\n  }\n\n  return `#${safeValue}` || '#000000';\n}\n\nwindow.pxbColors = {\n  colorConvert,\n  getContrastRatio,\n  getHexFromHexOrName,\n  getLuminance,\n  setColorByContrastWithHsl,\n  setHsl,\n};\n\nexport default {\n  getContrastRatio,\n  getHexFromHexOrName,\n  getLuminance,\n  setColorByContrastWithHsl,\n  setHsl,\n};\n","export const getFontFromGoogleFontApiResponse = ({ apiResponse }) => {\n  const apiUrl = [];\n  apiUrl.push('https://fonts.googleapis.com/css2?family=');\n  apiUrl.push(apiResponse.family.replace(/ /g, '+'));\n\n  if ((apiResponse?.variants ?? []).indexOf('italic') >= 0) {\n    apiUrl.push(':');\n    apiUrl.push('italic');\n  }\n\n  if ((apiResponse?.subsets ?? []).indexOf('greek') >= 0) {\n    apiUrl.push('&subset=');\n    apiUrl.push('greek');\n  }\n\n  return {\n    fallback: apiResponse.category,\n    name: apiResponse.family,\n    source: apiUrl.join(''),\n  };\n};\n\nexport default {\n  getFontFromGoogleFontApiResponse,\n};\n","export const getModeStyles = ({ mode, lightModeStyle, darkModeStyle }) => ({\n  ...(mode === 'dark' ? darkModeStyle : lightModeStyle),\n  '@media (prefers-color-scheme: light)': !mode && {\n    ...lightModeStyle,\n  },\n  '@media (prefers-color-scheme: dark)': !mode && {\n    ...darkModeStyle,\n  },\n});\n\nexport default {\n  getModeStyles,\n};\n","import { getHexFromHexOrName, setColorByContrastWithHsl } from './utils/colors';\n\nexport const getInheritedBaseColor = ({\n  attempt = 0,\n  baseColors,\n  maxAttempts: initMaxAttempts,\n  prevUnsafeColor,\n  resolveCssColors = true,\n  unsafeColor,\n}) => {\n  let maxAttempts = initMaxAttempts;\n\n  if (initMaxAttempts === undefined) {\n    maxAttempts = Object.keys(baseColors).length;\n  }\n\n  if (attempt > maxAttempts) {\n    return unsafeColor;\n  }\n\n  if (!baseColors[unsafeColor]) {\n    return resolveCssColors ? unsafeColor : prevUnsafeColor;\n  }\n\n  return getInheritedBaseColor({\n    attempt: attempt + 1,\n    baseColors,\n    maxAttempts,\n    prevUnsafeColor: unsafeColor,\n    resolveCssColors,\n    unsafeColor: baseColors[unsafeColor],\n  });\n};\n\nexport const getColors = ({ baseColors }) => {\n  const bgStep = 1.1;\n  const contrastRatios = [7, 4.5, 3];\n\n  const colors = Object.entries(baseColors).reduce((prevResult, [key, unsafeColor]) => {\n    const result = { ...prevResult };\n    let color = getInheritedBaseColor({ baseColors, unsafeColor });\n    color = getHexFromHexOrName(color);\n    const white = getHexFromHexOrName(baseColors.white);\n    const black = getHexFromHexOrName(baseColors.black);\n\n    if (['white', 'black'].indexOf(key) >= 0) {\n      return result;\n    }\n\n    // Default is a special range from white to black,\n    // but with user configured options for white and black\n    if (key === 'default') {\n      color = black;\n    }\n\n    result[key] = {};\n\n    result[key].base = color;\n\n    result[key]['light-bg'] = setColorByContrastWithHsl({\n      hex: color,\n      baseHex: white,\n      contrastRatio: bgStep,\n    });\n\n    contrastRatios.forEach((contrastRatio, i) => {\n      // Large text\n      result[key][`light-${i + 1}`] = setColorByContrastWithHsl({\n        hex: color,\n        baseHex: result[key]['light-bg'],\n        contrastRatio,\n        direction: 'desc',\n      });\n    });\n\n    result[key]['dark-bg'] = setColorByContrastWithHsl({\n      hex: color,\n      baseHex: black,\n      contrastRatio: bgStep,\n    });\n\n    contrastRatios.forEach((contrastRatio, i) => {\n      // Large text\n      result[key][`dark-${i + 1}`] = setColorByContrastWithHsl({\n        hex: color,\n        baseHex: result[key]['dark-bg'],\n        contrastRatio,\n        direction: 'asc',\n      });\n    });\n\n    return result;\n  }, {});\n\n  return colors;\n};\n\nexport const getButtons = ({\n  baseColors,\n  fonts,\n  space,\n}) => {\n  const variants = Object.keys(baseColors)\n    .filter(key => !['black', 'white'].includes(key))\n    .reduce((result, key) => ({\n      ...result,\n      [key]: {\n        default: {\n          keyColor: key,\n        },\n        ':hover': {\n          keyColor: key,\n        },\n        ':focus': {\n          keyColor: key,\n        },\n        ':active': {\n          keyColor: key,\n        },\n        ':disabled': {\n          keyColor: 'default',\n        },\n      },\n    }), {});\n\n  return ({\n    borderWidth: 1,\n    roundness: 0.2,\n    shine: 1, // Very shiny: glass, shiny: plastic, slightly shiny: paper, 0: flat\n    sizes: {\n      sm: {\n        fontSize: fonts.sizes.sm,\n        paddingH: space.sm,\n        paddingV: space.xs,\n      },\n      md: {\n        fontSize: fonts.sizes.md,\n        paddingH: space.md,\n        paddingV: space.sm,\n      },\n      lg: {\n        fontSize: fonts.sizes.lg,\n        paddingH: space.md,\n        paddingV: space.sm,\n      },\n    },\n    variants,\n  });\n};\n\nexport const getMinLineHeight = ({ size, space }) => {\n  const idealSize = size * 1.4;\n  const floor = Math.floor(idealSize / space.xs) * space.xs;\n  const ceil = Math.ceil(idealSize / space.xs) * space.xs;\n  const px = Math.abs(idealSize - floor) <= Math.abs(idealSize - ceil) ? floor : ceil;\n  const ratio = px / size;\n\n  return {\n    px,\n    ratio,\n  };\n};\n\nexport const getShared = ({ elevation = 1, roundness = 3, shine = 0 }) => ({\n  elevation,\n  mode: undefined, // 'light', 'dark', undefined\n  roundness,\n  shine,\n});\n\nexport const getSizeLabelFromIndex = (sizeIndex) => {\n  const smSizeLabels = ['sm', 'xs'];\n  const lgSizeLabels = ['lg', 'xl'];\n  const baseSizeLabel = 'md';\n\n  if (sizeIndex < 0) {\n    if (-1 * sizeIndex <= smSizeLabels.length) {\n      return smSizeLabels[-1 * sizeIndex - 1];\n    }\n\n    return `${-1 * sizeIndex - 1}${smSizeLabels[smSizeLabels.length - 1]}`;\n  }\n\n  if (sizeIndex > 0) {\n    if (sizeIndex <= lgSizeLabels.length) {\n      return lgSizeLabels[sizeIndex - 1];\n    }\n\n    return `${sizeIndex - 1}${lgSizeLabels[lgSizeLabels.length - 1]}`;\n  }\n\n  return baseSizeLabel;\n};\n\nexport const spacings = {\n  compact: 2 * 4,\n  cozy: 3 * 4,\n  default: 4 * 4,\n  relaxed: 5 * 4,\n  loose: 6 * 4,\n};\n\n/*\n  TODO: Make these objects easier to read, make compact have smaller spreads?\n  Maybe make sizes go from -N to N, so if you have smaller than small or\n  larger than large, it just limits you?\n*/\nexport const getSizes = ({\n  spacing = 'default',\n  count,\n  customSizes = {},\n  lgCount = 0,\n  mdSize: customMdSize = null,\n  smCount = 0,\n}) => {\n  let mdSize = customMdSize;\n\n  if (spacings[spacing]) {\n    mdSize = spacings[spacing];\n  }\n\n  let offset;\n\n  let sizes = [{\n    label: 'md',\n    size: mdSize,\n  }];\n\n  if (count) {\n    if (count < 1) {\n      throw new Error('Count must be at least 1');\n    }\n\n    offset = Math.floor(count / 2);\n    sizes = new Array(count).fill(null).map((size, i) => i - offset);\n  } else if (lgCount >= 0 && smCount >= 0) {\n    offset = smCount;\n    sizes = new Array(1 + lgCount + smCount).fill(null).map((size, i) => i - offset);\n  } else {\n    throw new Error('You must define `count` _or_ `lgCount`/`smCount`');\n  }\n\n  sizes = sizes.map((sizeIndex) => {\n    const size = {\n      label: getSizeLabelFromIndex(sizeIndex),\n      size: mdSize * (2 ** sizeIndex),\n    };\n\n    return size;\n  });\n\n  return {\n    ...sizes.reduce((result, size) => ({\n      ...result,\n      [size.label]: size.size,\n    }), {}),\n    ...customSizes,\n  };\n};\n","import { version } from '../package.json';\n\nimport {\n  getButtons,\n  getColors,\n  getShared,\n  getSizes,\n} from './theme-utils.mjs';\n\nconst baseSize = 4;\n\nconst space = getSizes({ count: 5, mdSize: baseSize * 4 });\n\nexport const baseColors = {\n  white: 'white',\n  black: '#16161d',\n  default: 'black',\n  primary: 'blue',\n  // success: 'green',\n  // info: 'lightblue',\n  // warning: 'yellow',\n  // danger: 'red',\n};\n\nconst colors = getColors({ baseColors });\n\nconst shared = getShared({ colors });\n\nconst baseFonts = {\n  default: {\n    fallback: 'sans-serif',\n    name: null,\n    source: null,\n  },\n};\n\nconst fonts = {\n  sizes: {\n    xs: 10,\n    sm: 12,\n    md: 16,\n    lg: 24,\n    xl: 32,\n  },\n  weights: {\n    normal: 400,\n    bold: 700,\n  },\n};\n\nconst buttons = getButtons({\n  baseColors,\n  colors,\n  fonts,\n  space,\n});\n\n/*\n  Dark mode?\n  - on/off\n\n  Roundness applies to button and card corners.\n  - Should you be able to separate them?\n\n  Button surfaces should be able to look\n  - glass-shiny (old iOS)\n  - softly shaded (plastic?)\n  - totally flat (paper?)\n  - soft around the edges (neuomorphic?)\n\n  Button shapes should be able to look\n  - Totally pill shaped\n  - Slightly rounded\n\n  Buttons should be able to elevate:\n  - Not at all - no shadows\n  - float above the background (distant, large shadows)\n\n  Neumorphism\n  - Emboss\n  - Float\n  - None\n\n  Button style schemes\n  - link style - no border, no background\n  - Standard, semantic color background, inverted foreground\n  - Pastel, i.e. monochomatic with tinted background, intense foreground\n\n  Floating panels should have\n  - Roundness\n  - Elevation\n\n  And a different material palette\n  - Edged for visibility\n  - Edged for 3D realism\n*/\n\nexport const stage0 = {\n  stage: 0,\n  version,\n  baseColors,\n  shared,\n};\n\nconst theme = {\n  stage: 1,\n  version,\n  baseColors,\n  baseFonts,\n  buttons,\n  colors,\n  fonts,\n  shared,\n  space,\n};\n\nexport default theme;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport styled from 'styled-components';\nimport { margin } from 'styled-system';\nimport { getModeStyles } from '@pixelbandito/theme';\nimport styles from './Card.module.css';\n\nexport const getCardStyles = ({\n  variant = 'default',\n  theme,\n}) => {\n  const darkModeStyle = {\n    background: theme.baseColors.black,\n    borderColor: theme.colors[variant]['light-1'],\n  };\n\n  const lightModeStyle = {\n    background: theme.baseColors.white,\n    borderColor: theme.colors[variant]['dark-1'],\n  };\n\n  return {\n    borderRadius: `${theme.shared.roundness * 2}px`,\n    ...getModeStyles({\n      darkModeStyle,\n      lightModeStyle,\n      mode: theme?.shared?.mode,\n    }),\n  };\n};\n\nexport const getCardHeadStyles = ({\n  variant,\n  theme,\n}) => {\n  const lightModeStyle = {\n    background: theme.colors[variant]?.['light-bg'] || 'transparent',\n    borderColor: theme.colors[variant]?.['dark-1'] || 'transparent',\n  };\n\n  const darkModeStyle = {\n    background: theme.colors[variant]?.['dark-bg'] || 'transparent',\n    borderColor: theme.colors[variant]?.['light-1'] || 'transparent',\n  };\n\n  return {\n    borderRadius: `${theme.shared.roundness * 2}px`,\n    padding: `${theme.space.sm}px ${theme.space.md}px`,\n    ...getModeStyles({\n      darkModeStyle,\n      lightModeStyle,\n      mode: theme?.shared?.mode,\n    }),\n  };\n};\n\nexport const getCardBodyStyles = ({\n  theme,\n}) => {\n  const darkModeStyle = {\n    background: theme.baseColors.black,\n  };\n\n  const lightModeStyle = {\n    background: theme.baseColors.white,\n  };\n\n  return {\n    borderRadius: `${theme.shared.roundness * 2}px`,\n    padding: `${theme.space.md}px`,\n    ...getModeStyles({\n      darkModeStyle,\n      lightModeStyle,\n      mode: theme?.shared?.mode,\n    }),\n  };\n};\n\nexport const getCardFootStyles = ({\n  variant,\n  theme,\n}) => {\n  const darkModeStyle = {\n    background: theme.colors[variant]?.['dark-bg'] || 'transparent',\n    borderColor: theme.colors[variant]?.['light-1'] || 'transparent',\n  };\n\n  const lightModeStyle = {\n    background: theme.colors[variant]?.['light-bg'] || 'transparent',\n    borderColor: theme.colors[variant]?.['dark-1'] || 'transparent',\n  };\n\n  return {\n    borderRadius: `${theme.shared.roundness * 2}px`,\n    padding: `${theme.space.sm}px ${theme.space.md}px`,\n    ...getModeStyles({\n      darkModeStyle,\n      lightModeStyle,\n      mode: theme?.shared?.mode,\n    }),\n  };\n};\n\nconst Card = React.forwardRef(({\n  className,\n  ...passedProps\n}, forwardedRef) => (\n  <div\n    className={classNames(className, styles.Card)}\n    ref={forwardedRef}\n    {...passedProps}\n  />\n));\n\nCard.propTypes = {\n  className: PropTypes.string,\n};\n\nCard.defaultProps = {\n  className: '',\n};\n\nconst StyledCard = styled(Card)(\n  props => getCardStyles(props),\n  margin,\n);\n\nexport const CardHead = ({\n  className,\n  ...passedProps\n}) => (\n  <div\n    className={classNames(className, styles.Head)}\n    {...passedProps}\n  />\n);\n\nCardHead.propTypes = {\n  className: PropTypes.string,\n};\n\nCardHead.defaultProps = {\n  className: '',\n};\n\nconst StyledCardHead = styled(CardHead)(\n  ({\n    variant,\n    theme,\n  }) => getCardHeadStyles({\n    variant,\n    theme,\n  }),\n);\n\nexport const CardBody = React.forwardRef(({\n  className,\n  ...passedProps\n}, forwardRef) => (\n  <div\n    className={classNames(className, styles.Body)}\n    ref={forwardRef}\n    {...passedProps}\n  />\n));\n\nCardBody.propTypes = {\n  className: PropTypes.string,\n};\n\nCardBody.defaultProps = {\n  className: '',\n};\n\nconst StyledCardBody = styled(CardBody)(\n  ({\n    variant,\n    theme,\n  }) => getCardBodyStyles({\n    variant,\n    theme,\n  }),\n);\n\nexport const CardFoot = ({\n  className,\n  ...passedProps\n}) => (\n  <div\n    className={classNames(className, styles.Foot)}\n    {...passedProps}\n  />\n);\n\nCardFoot.propTypes = {\n  className: PropTypes.string,\n};\n\nCardFoot.defaultProps = {\n  className: '',\n};\n\nconst StyledCardFoot = styled(CardFoot)(\n  ({\n    variant,\n    theme,\n  }) => getCardFootStyles({\n    variant,\n    theme,\n  }),\n);\n\nStyledCard.Head = StyledCardHead;\nStyledCard.Body = StyledCardBody;\nStyledCard.Foot = StyledCardFoot;\n\nexport default StyledCard;\n","import React, {\n  // <> shorthard doesn't work without importing Fragment\n  // eslint-disable-next-line no-unused-vars\n  Fragment,\n  useContext,\n  useState,\n} from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport styled, { ThemeContext } from 'styled-components';\nimport styles from './Accordion.module.css';\nimport Card, { getCardBodyStyles } from '../Card';\n\nexport const UnstyledAccordion = ({\n  children,\n  className,\n  defaultIsOpen,\n  speed = 1,\n  head: customHead,\n  variant,\n  ...passedProps\n}) => {\n  const [isOpen, setIsOpen] = useState(defaultIsOpen);\n  const [duration, setDuration] = useState(1000 / speed);\n  const [height, setHeight] = useState();\n  const [transition, setTransition] = useState();\n  const theme = useContext(ThemeContext);\n  const head = customHead || (isOpen ? 'Show less' : 'Show more');\n\n  const handleOnEnter = (node) => {\n    // We have to compensate for padding, because we're using border-box\n    let { padding = 0 } = getCardBodyStyles({ variant, theme });\n    padding = parseInt(padding, 10);\n    padding = !Number.isNaN(padding) ? padding : 0;\n    // Padding compensation is dependent on how far we've animated in\n    const percentClosed = 1 - node.offsetHeight / node.scrollHeight;\n    const nextHeight = node.scrollHeight + padding * 2 * percentClosed;\n    const currentHeight = node.offsetHeight + padding * 2 * percentClosed;\n    const nextDuration = (nextHeight - currentHeight) / speed;\n    setDuration(nextDuration);\n    setHeight(`${nextHeight}px`);\n    setTransition(`\n      ${nextDuration}ms ease-in-out height,\n      ${nextDuration}ms ease-in-out padding-bottom,\n      ${nextDuration}ms ease-in-out padding-top\n    `);\n  };\n\n  const handleOnEntered = (node) => {\n    let { padding = 0 } = getCardBodyStyles({ variant, theme });\n    padding = parseInt(padding, 10);\n    padding = !Number.isNaN(padding) ? padding : 0;\n    const currentHeight = node.offsetHeight + padding * 2;\n    const nextDuration = currentHeight / speed;\n    setDuration(nextDuration);\n    setHeight(undefined);\n  };\n\n  const handleOnExit = (node) => {\n    let { padding = 0 } = getCardBodyStyles({ variant, theme });\n    padding = parseInt(padding, 10);\n    padding = !Number.isNaN(padding) ? padding : 0;\n    const percentClosed = 1 - node.offsetHeight / node.scrollHeight;\n    const currentHeight = node.offsetHeight + padding * 2 * percentClosed;\n    const nextDuration = currentHeight / speed;\n    setDuration(nextDuration);\n    setHeight(`${currentHeight}px`);\n    setTransition(`\n      ${nextDuration}ms ease-in-out height,\n      ${nextDuration}ms ease-in-out padding-bottom,\n      ${nextDuration}ms ease-in-out padding-top\n    `);\n  };\n\n  const handleOnExiting = () => {\n    setHeight(0);\n  };\n\n  return (\n    <Card\n      {...passedProps}\n      className={classNames(className, styles.Accordion)}\n      variant={variant}\n    >\n      <CSSTransition\n        classNames={{\n          enter: styles.enter,\n          enterActive: styles.enterActive,\n          exit: styles.exit,\n          exitActive: styles.exitActive,\n          exitDone: styles.exitDone,\n        }}\n        in={isOpen}\n        timeout={duration}\n      >\n        <Card.Head\n          className={classNames(styles.head, {\n            [styles.isOpen]: isOpen,\n            [styles.isClosed]: !isOpen,\n          })}\n          onClick={() => setIsOpen(prev => !prev)}\n          variant={variant}\n          style={{\n            transition: `${duration}ms ease-in-out border-width`,\n          }}\n        >\n          {head}\n        </Card.Head>\n      </CSSTransition>\n      <CSSTransition\n        classNames={{\n          enter: styles.enter,\n          enterActive: styles.enterActive,\n          exit: styles.exit,\n          exitActive: styles.exitActive,\n          exitDone: styles.exitDone,\n        }}\n        in={isOpen}\n        mountOnEnter\n        onEnter={handleOnEnter}\n        onEntered={handleOnEntered}\n        onExit={handleOnExit}\n        onExiting={handleOnExiting}\n        timeout={duration}\n        unmountOnExit\n      >\n        <Card.Body\n          className={styles.body}\n          style={{\n            transition,\n            height,\n          }}\n          variant={variant}\n        >\n          {children}\n        </Card.Body>\n      </CSSTransition>\n    </Card>\n  );\n};\n\nUnstyledAccordion.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  defaultIsOpen: PropTypes.bool,\n  head: PropTypes.node,\n  speed: PropTypes.number,\n  variant: PropTypes.string,\n};\n\nUnstyledAccordion.defaultProps = {\n  children: null,\n  className: '',\n  defaultIsOpen: false,\n  head: null,\n  speed: 1,\n  variant: 'default',\n};\n\nconst StyledAccordion = styled(UnstyledAccordion)(\n  ({\n    theme,\n  }) => ({\n    color: theme.color,\n  }),\n);\n\nexport default StyledAccordion;\n","import PropTypes from 'prop-types';\n\nexport const tagPropType = PropTypes.oneOfType([\n  PropTypes.func,\n  PropTypes.string,\n  PropTypes.shape({ $$typeof: PropTypes.symbol, render: PropTypes.func }),\n  PropTypes.arrayOf(PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.string,\n    PropTypes.shape({ $$typeof: PropTypes.symbol, render: PropTypes.func }),\n  ])),\n]);\n\nexport default {\n  tagPropType,\n};\n","// eslint-disable-next-line no-unused-vars\nimport React, { createContext, Fragment, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport styled, { ThemeContext } from 'styled-components';\nimport { margin } from 'styled-system';\nimport { getModeStyles, getMinLineHeight } from '@pixelbandito/theme';\nimport { tagPropType } from '../prop-types';\nimport styles from './Font.module.css';\n\nexport const VariantContext = createContext();\n\nexport const getFontStyle = ({\n  color = 'default',\n  contrast = '2',\n  size = 'md',\n  theme,\n  variant: variantKey = 'default',\n  weight = 'normal',\n}) => {\n  const {\n    ratio: lineHeightRatio,\n  } = getMinLineHeight({\n    size: theme.fonts.sizes[size],\n    space: {\n      ...theme.space,\n      xs: theme.space.sm,\n    },\n  });\n\n  const darkModeStyle = { color: theme.colors[color][`dark-${contrast}`] };\n  const lightModeStyle = { color: theme.colors[color][`light-${contrast}`] };\n  const font = theme.baseFonts[variantKey] || theme.baseFonts.default;\n\n  const fontFamilies = [\n    ...(font.name ? [`\"${font.name}\"`] : []),\n    font.fallback || 'sans-serif',\n  ];\n\n  return ({\n    fontFamily: fontFamilies.join(', '),\n    fontSize: theme.fonts.sizes[size],\n    fontWeight: theme.fonts.weights[weight],\n    lineHeight: lineHeightRatio,\n    ...getModeStyles({\n      darkModeStyle,\n      lightModeStyle,\n      mode: theme?.shared?.mode,\n    }),\n  });\n};\n\nconst getGoogleFontLink = ({ font }) => {\n  const link = document.createElement('link');\n  link.id = `pxb-${font.name.replace(/ /g, '_')}`;\n  link.ref = 'stylesheet';\n  link.href = font.source;\n  return link;\n};\n\nconst useGoogleFontLink = (variantKey) => {\n  const theme = useContext(ThemeContext);\n  const variant = theme.baseFonts[variantKey] || theme.baseFonts.default;\n\n  if (variant.name && variant.source) {\n    if (document.querySelector(`#pxb-${variant.name.replace(/ /g, '_')}`) === null) {\n      const link = getGoogleFontLink({ font: variant });\n      document.head.append(link);\n    }\n  }\n};\n\nconst Font = ({\n  className,\n  tag: CustomTag,\n  variant,\n  ...passedProps\n}) => {\n  useGoogleFontLink(variant);\n\n  return (\n    <CustomTag\n      {...passedProps}\n      className={classNames(className, styles.Font)}\n    />\n  );\n};\n\nFont.propTypes = {\n  className: PropTypes.string,\n  tag: tagPropType,\n  variant: PropTypes.string,\n};\n\nFont.defaultProps = {\n  className: '',\n  tag: 'div',\n  variant: 'default',\n};\n\nexport const WithFontVariant = (WrappedComponent) => {\n  const Wrapper = ({\n    variant: variantProp,\n    ...passedProps\n  }) => {\n    const variantContext = useContext(VariantContext);\n\n    if (variantProp && variantProp !== variantContext) {\n      return (\n        <VariantContext.Provider value={variantProp}>\n          <WrappedComponent\n            {...passedProps}\n            variant={variantProp}\n          />\n        </VariantContext.Provider>\n      );\n    }\n\n    return (\n      <WrappedComponent\n        {...passedProps}\n        variant={variantContext}\n      />\n    );\n  };\n\n  Wrapper.propTypes = {\n    variant: PropTypes.string,\n  };\n\n  Wrapper.defaultProps = {\n    variant: null,\n  };\n\n  Wrapper.displayName = `WithFontVariant(${WrappedComponent})`;\n\n  return Wrapper;\n};\n\nconst StyledFont = WithFontVariant(styled(Font)(\n  props => getFontStyle(props),\n  margin,\n));\n\nexport const P = props => (\n  <StyledFont\n    className={styles.P}\n    tag=\"p\"\n    {...props}\n  />\n);\n\nexport const Small = props => (\n  <StyledFont\n    size=\"sm\"\n    tag=\"small\"\n    {...props}\n  />\n);\n\nexport const Strong = props => (\n  <StyledFont\n    tag=\"strong\"\n    weight=\"bold\"\n    {...props}\n  />\n);\n\nexport const Em = props => (\n  <StyledFont\n    tag=\"em\"\n    {...props}\n  />\n);\n\nexport const U = props => (\n  <StyledFont\n    tag=\"u\"\n    {...props}\n  />\n);\n\nexport const I = props => (\n  <StyledFont\n    tag=\"i\"\n    {...props}\n  />\n);\n\nexport const B = props => (\n  <StyledFont\n    tag=\"b\"\n    weight=\"bold\"\n    {...props}\n  />\n);\n\nexport default StyledFont;\n","import React, { useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport styled from 'styled-components';\n\nimport { tagPropType } from '../../prop-types';\nimport Font, { getFontStyle, WithFontVariant } from '../Font';\nimport styles from './Heading.module.css';\n\nexport const getHeadingFontStyle = ({\n  level = 1,\n  ...props\n}) => {\n  const levels = {\n    1: {\n      contrast: '3',\n      size: 'xl',\n      weight: 'normal',\n    },\n    2: {\n      contrast: '3',\n      size: 'lg',\n      weight: 'normal',\n    },\n    3: {\n      contrast: '3',\n      size: 'md',\n      weight: 'bold',\n    },\n    4: {\n      contrast: '2',\n      size: 'sm',\n      weight: 'bold',\n    },\n  };\n\n  return {\n    ...getFontStyle({\n      ...levels[`${level}`],\n      ...props,\n    }),\n  };\n};\n\nconst Heading = ({\n  className,\n  level,\n  tag: CustomTag,\n  ...passedProps\n}) => {\n  const Tag = useMemo(() => {\n    if (CustomTag) {\n      return CustomTag;\n    }\n\n    return `h${level}`;\n  }, [CustomTag, level]);\n\n  return (\n    <Font\n      {...passedProps}\n      className={classNames(className, styles.Heading)}\n      tag={Tag}\n    />\n  );\n};\n\nHeading.propTypes = {\n  className: PropTypes.string,\n  level: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  tag: tagPropType,\n};\n\nHeading.defaultProps = {\n  className: '',\n  level: 1,\n  tag: null,\n};\n\nconst StyledHeading = WithFontVariant(styled(Heading)(\n  props => getHeadingFontStyle(props),\n));\n\nexport const H1 = props => <StyledHeading {...props} level={1} />;\nexport const H2 = props => <StyledHeading {...props} level={2} />;\nexport const H3 = props => <StyledHeading {...props} level={3} />;\nexport const H4 = props => <StyledHeading {...props} level={4} />;\n\nexport default StyledHeading;\n","import React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport styled from 'styled-components';\nimport { margin } from 'styled-system';\nimport { getMinLineHeight } from '@pixelbandito/theme';\n\nimport { getFontStyle } from '../Font';\nimport { tagPropType } from '../prop-types';\nimport styles from './Button.module.css';\n\nexport const getButtonStyle = ({\n  outline = false,\n  size = 'md',\n  theme,\n  variant: variantKey = 'default',\n}) => {\n  const {\n    buttons,\n    colors,\n    shared,\n    space,\n  } = theme;\n\n  const {\n    borderWidth,\n    sizes,\n    variants,\n  } = buttons;\n\n  const variant = { ...variants[variantKey] };\n\n  const getVariantColors = ({\n    contrast,\n    mode,\n    outline: variantOutline,\n    styles: variantStyles,\n  }) => {\n    const backgroundColorKey = variantStyles.keyColor || 'default';\n    const backgroundColor = colors[backgroundColorKey] || backgroundColorKey;\n    const colorKey = variantStyles.color || (mode === 'dark' ? 'black' : 'white');\n    const color = colors[colorKey] || colorKey;\n\n    if (variantOutline) {\n      return {\n        color: backgroundColor?.[`${mode}-${contrast}`] ?? backgroundColor,\n        backgroundColor: 'transparent',\n        borderColor: backgroundColor?.[`${mode}-${contrast}`] ?? backgroundColor,\n      };\n    }\n\n    return {\n      backgroundColor: backgroundColor?.[`${mode}-${contrast}`] ?? backgroundColor,\n      color: color?.[`${mode}-bg`] ?? colorKey,\n      borderColor: backgroundColor?.[`${mode}-${contrast}`] ?? backgroundColor,\n    };\n  };\n\n  const {\n    fontSize,\n    paddingH,\n    paddingV,\n  } = sizes[size];\n\n  const {\n    ratio: lineHeightRatio,\n    px: lineHeightPx,\n  } = getMinLineHeight({\n    size: fontSize,\n    space,\n  });\n\n  const lightModeStyle = {\n    default: {\n      ...getFontStyle({\n        color: variantKey, // Button variants map to color ways\n        size,\n        theme: {\n          ...theme,\n          shared: {\n            ...theme.shared,\n            mode: 'dark',\n          },\n        },\n      }),\n      ...getVariantColors({\n        contrast: '1',\n        mode: 'light',\n        outline,\n        styles: variant.default,\n      }),\n    },\n    ':hover': {\n      ...getVariantColors({\n        contrast: '2',\n        mode: 'light',\n        outline,\n        styles: variant[':hover'],\n      }),\n    },\n    ':focus': {\n      ...getVariantColors({\n        contrast: '2',\n        mode: 'light',\n        outline,\n        styles: variant[':focus'],\n      }),\n    },\n    ':active': {\n      ...getVariantColors({\n        contrast: '2',\n        mode: 'light',\n        outline,\n        styles: variant[':active'],\n      }),\n    },\n    ':disabled': {\n      ...getVariantColors({\n        contrast: '3',\n        mode: 'light',\n        outline,\n        styles: variant[':disabled'],\n      }),\n    },\n  };\n\n  const darkModeStyle = {\n    default: {\n      ...getFontStyle({\n        color: variantKey, // Button variants map to color ways\n        size,\n        theme: {\n          ...theme,\n          shared: {\n            ...theme.shared,\n            mode: 'dark',\n          },\n        },\n      }),\n      ...getVariantColors({\n        contrast: '1',\n        mode: 'dark',\n        outline,\n        styles: variant.default,\n      }),\n    },\n    ':hover': {\n      ...getVariantColors({\n        contrast: '2',\n        mode: 'dark',\n        outline,\n        styles: variant[':hover'],\n      }),\n    },\n    ':focus': {\n      ...getVariantColors({\n        contrast: '2',\n        mode: 'dark',\n        outline,\n        styles: variant[':focus'],\n      }),\n    },\n    ':active': {\n      ...getVariantColors({\n        contrast: '2',\n        mode: 'dark',\n        outline,\n        styles: variant[':active'],\n      }),\n    },\n    ':disabled': {\n      ...getVariantColors({\n        contrast: '3',\n        mode: 'dark',\n        outline,\n        styles: variant[':disabled'],\n      }),\n    },\n  };\n\n  const modeStyles = (shared.mode === 'dark' && darkModeStyle) || lightModeStyle;\n\n  return ({\n    borderWidth,\n    borderStyle: 'solid',\n    borderRadius: (theme.shared.roundness * (lineHeightPx / 2 + paddingV)) / 10,\n    paddingBottom: paddingV - borderWidth,\n    paddingLeft: paddingH - borderWidth,\n    paddingRight: paddingH - borderWidth,\n    paddingTop: paddingV - borderWidth,\n    fontSize,\n    lineHeight: lineHeightRatio,\n    transition: 'background-color 0.2s linear, border-color 0.2s linear, color 0.2s linear',\n    ...modeStyles.default,\n    ':hover': {\n      ...modeStyles[':hover'],\n    },\n    ':focus': {\n      outlineStyle: 'none',\n      outlineColor: modeStyles.default.borderColor,\n      boxShadow: `0 0 0 1px ${modeStyles.default.borderColor}, 0 0 4px 0px ${modeStyles[':focus'].borderColor}`,\n      ...modeStyles[':focus'],\n    },\n    ':active': {\n      ...modeStyles[':active'],\n    },\n    ':disabled': {\n      ...modeStyles[':disabled'],\n    },\n    '@media (prefers-color-scheme: light)': shared.mode === undefined && {\n      ...lightModeStyle,\n    },\n    '@media (prefers-color-scheme: dark)': shared.mode === undefined && {\n      ...darkModeStyle,\n    },\n  });\n};\n\nconst Button = forwardRef(({\n  className,\n  outline,\n  tag: Tag,\n  ...passedProps\n}, ref) => (\n  <Tag\n    {...passedProps}\n    className={classNames(className, styles.Button)}\n    ref={ref}\n  />\n));\n\nButton.propTypes = {\n  className: PropTypes.string,\n  outline: PropTypes.bool,\n  tag: tagPropType,\n};\n\nButton.defaultProps = {\n  className: '',\n  outline: false,\n  tag: 'button',\n};\n\nconst StyledButton = styled(Button)(\n  getButtonStyle,\n  margin,\n);\n\nexport default StyledButton;\n","import React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport styled from 'styled-components';\nimport { margin } from 'styled-system';\nimport { getMinLineHeight } from '@pixelbandito/theme';\n\nimport { getFontStyle } from '../Font';\nimport styles from './Input.module.css';\n\nexport const getInputStyle = ({\n  size = 'md',\n  theme,\n} = {}) => {\n  const {\n    buttons,\n    colors,\n    shared,\n    space,\n  } = theme;\n\n  const {\n    borderWidth,\n    sizes,\n  } = buttons;\n\n  const {\n    fontSize,\n    paddingH,\n    paddingV,\n  } = sizes[size];\n\n  const {\n    ratio: lineHeightRatio,\n    px: lineHeightPx,\n  } = getMinLineHeight({\n    size: fontSize,\n    space,\n  });\n\n  const getColor = ({\n    baseColor = 'default',\n    contrast = 1,\n    mode = 'light',\n  }) => colors?.[baseColor]?.[`${mode}-${contrast}`] ?? colors?.[baseColor].base ?? baseColor;\n\n  const lightModeFontStyle = getFontStyle({\n    size,\n    theme: {\n      ...theme,\n      shared: {\n        ...theme.shared,\n        mode: 'light',\n      },\n    },\n  });\n\n  delete lightModeFontStyle['@media (prefers-color-scheme: dark)'];\n  delete lightModeFontStyle['@media (prefers-color-scheme: light)'];\n\n  const lightModeStyle = {\n    ...lightModeFontStyle,\n    backgroundColor: 'white',\n    borderColor: getColor({ contrast: 2 }),\n    color: getColor({}),\n    ':hover': {\n      borderColor: getColor({ contrast: 1 }),\n    },\n    ':focus': {\n      borderColor: getColor({\n        baseColor: 'primary',\n        contrast: 1,\n      }),\n      boxShadow: `0 0 0 1px ${getColor({\n        baseColor: 'primary',\n        contrast: 3,\n      })}, 0 0 4px 0px ${getColor({\n        baseColor: 'primary',\n        contrast: 3,\n      })}`,\n    },\n    ':active': {\n      backgroundColor: getColor({ contrast: 'bg' }),\n    },\n    ':invalid': {\n      borderColor:\n        (colors.warn && getColor({ baseColor: 'warn', contrast: 2 }))\n        || (colors.warning && getColor({ baseColor: 'warning', contrast: 2 }))\n        || (colors.danger && getColor({ baseColor: 'danger', contrast: 2 }))\n        || (colors.error && getColor({ baseColor: 'error', contrast: 2 }))\n        || getColor({ contrast: 1 }),\n    },\n    ':disabled': {\n      backgroundColor: getColor({ contrast: 'bg' }),\n      borderColor: getColor({ contrast: 3 }),\n      color: getColor({ contrast: 3 }),\n    },\n  };\n\n  const darkModeFontStyle = getFontStyle({\n    size,\n    theme: {\n      ...theme,\n      shared: {\n        ...theme.shared,\n        mode: 'dark',\n      },\n    },\n  });\n\n  delete darkModeFontStyle['@media (prefers-color-scheme: dark)'];\n  delete darkModeFontStyle['@media (prefers-color-scheme: light)'];\n\n  const darkModeStyle = {\n    ...darkModeFontStyle,\n    backgroundColor: 'black',\n    borderColor: getColor({\n      contrast: 2,\n      mode: 'dark',\n    }),\n    color: getColor({ mode: 'dark' }),\n    ':hover': {\n      borderColor: getColor({\n        contrast: 1,\n        mode: 'dark',\n      }),\n    },\n    ':focus': {\n      borderColor: getColor({\n        baseColor: 'primary',\n        contrast: 1,\n        mode: 'dark',\n      }),\n      boxShadow: `0 0 0 1px ${getColor({\n        baseColor: 'primary',\n        contrast: 2,\n        mode: 'dark',\n      })}, 0 0 4px 0px ${getColor({\n        baseColor: 'primary',\n        contrast: 3,\n        mode: 'dark',\n      })}`,\n    },\n    ':active': {\n      backgroundColor: getColor({\n        contrast: 'bg',\n        mode: 'dark',\n      }),\n    },\n    ':invalid': {\n      borderColor:\n        (colors.warn && getColor({ baseColor: 'warn', contrast: 2, mode: 'dark' }))\n        || (colors.warning && getColor({ baseColor: 'warning', contrast: 2, mode: 'dark' }))\n        || (colors.danger && getColor({ baseColor: 'danger', contrast: 2, mode: 'dark' }))\n        || (colors.error && getColor({ baseColor: 'error', contrast: 2, mode: 'dark' }))\n        || getColor({ contrast: 1, mode: 'dark' }),\n    },\n    ':disabled': {\n      backgroundColor: getColor({\n        contrast: 'bg',\n        mode: 'dark',\n      }),\n      borderColor: getColor({\n        contrast: 3,\n        mode: 'dark',\n      }),\n      color: getColor({\n        contrast: 3,\n        mode: 'dark',\n      }),\n    },\n  };\n\n  console.log({\n    lightModeFontStyle,\n    darkModeFontStyle,\n  });\n\n  const modeStyles = (shared.mode === 'dark' && darkModeStyle) || lightModeStyle;\n\n  const inputStyle = {\n    ...modeStyles,\n    borderWidth,\n    borderStyle: 'solid',\n    borderRadius: (theme.shared.roundness * (lineHeightPx / 2 + paddingV)) / 10,\n    paddingBottom: paddingV - borderWidth,\n    paddingLeft: paddingH - borderWidth,\n    paddingRight: paddingH - borderWidth,\n    paddingTop: paddingV - borderWidth,\n    fontSize,\n    lineHeight: lineHeightRatio,\n    transition: 'background-color 0.2s linear, border-color 0.2s linear, color 0.2s linear',\n    ':focus': {\n      outlineStyle: 'none',\n      outlineColor: modeStyles.borderColor,\n      boxShadow: `0 0 0 1px ${modeStyles.borderColor}, 0 0 4px 0px ${modeStyles[':focus'].borderColor}`,\n      ...modeStyles[':focus'],\n    },\n    '@media (prefers-color-scheme: light)': shared.mode === undefined && {\n      ...lightModeStyle,\n    },\n    '@media (prefers-color-scheme: dark)': shared.mode === undefined && {\n      ...darkModeStyle,\n    },\n  };\n\n  console.log(shared.mode);\n\n  if (shared.mode === undefined) {\n    console.log({\n      ...darkModeStyle,\n    });\n  }\n\n  return inputStyle;\n};\n\nconst Input = forwardRef(({\n  className,\n  ...passedProps\n}, ref) => (\n  <input\n    {...passedProps}\n    className={classNames(className, styles.Input)}\n    ref={ref}\n  />\n));\n\nInput.propTypes = {\n  className: PropTypes.string,\n};\n\nInput.defaultProps = {\n  className: '',\n};\n\nconst StyledInput = styled(Input)(\n  getInputStyle,\n  margin,\n);\n\nexport default StyledInput;\n","import React from 'react';\nimport Font from '../Font';\n\nconst Link = props => (\n  <Font\n    tag=\"a\"\n    color=\"primary\"\n    {...props}\n  />\n);\n\nexport const A = Link;\n\nexport default Link;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport styles from './Swatch.module.css';\n\nconst Swatch = ({\n  backgroundColor,\n  className,\n  color,\n  ...passedProps\n}) => (\n  <div\n    {...passedProps}\n    className={classNames(styles.Swatch, className)}\n    style={{\n      backgroundColor,\n      color,\n    }}\n  />\n);\n\nSwatch.propTypes = {\n  backgroundColor: PropTypes.string,\n  className: PropTypes.string,\n  color: PropTypes.string,\n};\n\nSwatch.defaultProps = {\n  backgroundColor: '#fff',\n  className: '',\n  color: '#000',\n};\n\nexport default Swatch;\n","import Swatch from './Swatch';\n\nexport default Swatch;\n","export const getHexOrDont = string => string;\n\nexport const getJsonOrDont = (string) => {\n  let json;\n\n  try {\n    json = JSON.parse(string);\n  } catch(e) {\n    json =  {};\n  }\n\n  return json;\n};\n\nexport const getNumberOrDont = (string) => {\n  let number;\n\n  try {\n    number = parseInt(string, 10);\n\n    if (isNaN(number)) {\n      throw new Error('not a number');\n    }\n  } catch(e) {\n    number = null;\n  }\n\n  return number\n};\n\nexport default {\n  getHexOrDont,\n  getJsonOrDont,\n  getNumberOrDont,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport FontPicker from 'font-picker-react';\nimport { Button, tagPropType } from '@pixelbandito/themed-ui';\nimport styles from './Control.module.css';\n\nconst MyFontPicker = ({ className, value, ...props }) => (\n  <div className={classNames(className, styles.fontPicker)}>\n    <FontPicker\n      apiKey={process.env.REACT_APP_GOOGLE_FONTS_API_KEY}\n      activeFontFamily={value}\n      {...props}\n    />\n  </div>\n);\n\nconst Control = ({\n  children,\n  className,\n  id,\n  label,\n  onChange,\n  onDelete,\n  tag: CustomTag,\n  type,\n  value,\n  ...passedProps\n}) => {\n  let Tag = CustomTag;\n\n  if (Tag === FontPicker) {\n    Tag = MyFontPicker;\n  }\n\n  return (\n    <div\n      {...passedProps}\n      className={classNames(className, styles.Control)}\n    >\n      <label\n        className={styles.label}\n        htmlFor={id}\n      >\n        {label || id}\n      </label>\n      {' '}\n      {onDelete && (\n        <Button\n          className={styles.delete}\n          onClick={onDelete}\n          outline\n          size=\"sm\"\n        >\n          Ⓧ\n        </Button>\n      )}\n      <Tag\n        className={styles.input}\n        id={id}\n        onChange={onChange}\n        type={type}\n        value={value}\n      >\n        {children}\n      </Tag>\n    </div>\n  );\n};\n\nControl.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  id: PropTypes.string.isRequired,\n  label: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n  onDelete: PropTypes.func,\n  tag: tagPropType,\n  type: PropTypes.string,\n  value: PropTypes.string.isRequired,\n};\n\nControl.defaultProps = {\n  children: null,\n  className: '',\n  label: '',\n  tag: 'input',\n  type: 'text',\n};\n\nexport default Control;\n","import Control from './Control';\n\nexport default Control;\n","import React, { useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport colorConvert from 'color-convert';\nimport FontPicker from 'font-picker-react';\nimport { debounce } from 'lodash-es';\n\nimport {\n  getButtons,\n  getColors,\n  getFontFromGoogleFontApiResponse,\n  getInheritedBaseColor,\n  getLuminance,\n  getSizes,\n  spacings,\n} from '@pixelbandito/theme';\n\nimport {\n  Accordion,\n  Button,\n  Card,\n  Font,\n} from '@pixelbandito/themed-ui';\n\nimport Swatch from '../Swatch';\nimport { getHexOrDont, getNumberOrDont } from './utils';\nimport Control from './Control';\nimport styles from './ThemeForm.module.css';\n\nconst ThemeForm = ({\n  className,\n  theme: initTheme,\n  onChangeTheme,\n  onApplyTheme,\n}) => {\n  const [roundness, setRoundness] = useState(initTheme.shared.roundness);\n  const [themeForm, setThemeForm] = useState(initTheme);\n  const importInputFileRef = useRef();\n\n  // High-level form syncing\n  useEffect(() => {\n    onChangeTheme(themeForm);\n  }, [onChangeTheme, themeForm]);\n\n  const handleClickApply = useCallback(() => {\n    onApplyTheme(themeForm);\n  }, [onApplyTheme, themeForm]);\n\n  const handleClickRevert = useCallback(() => {\n    setThemeForm(initTheme);\n  }, [initTheme]);\n\n  // Import json\n  const handleClickImport = useCallback(() => {\n    if (importInputFileRef.current) {\n      importInputFileRef.current.click();\n    }\n  }, []);\n\n  const handleChangeImport = useCallback(e => {\n    const reader = new FileReader();\n    reader.readAsText(e.target.files[0]);\n\n    reader.onload = e => {\n      try {\n        setThemeForm(JSON.parse(e.target.result))\n      } catch (e) {\n        console.warn('Couldn\\'t read theme file.', e.message);\n      }\n    }\n  }, []);\n\n  // High-level button theme syncing\n  useEffect(() => {\n    setThemeForm(prevThemeForm => ({\n      ...prevThemeForm,\n      buttons: getButtons({\n        ...prevThemeForm,\n      }),\n    }));\n  }, [themeForm.colors,  themeForm.fonts, themeForm.shared.roundness,  themeForm.space]);\n\n  // COLORS\n  const [isAddingBaseColor, setIsAddingBaseColor] = useState(false);\n  const [newBaseColorName, setNewBaseColorName] = useState('');\n\n  const safeBaseColors = useMemo(() => {\n    const baseColors =  Object.entries(themeForm.baseColors).reduce((result, [key, value]) => {\n      // When base colors inherit from each other, this resolves to a hex code or css color name\n      let safeValue = getInheritedBaseColor({\n        baseColors: themeForm.baseColors,\n        unsafeColor: value,\n      });\n\n      try {\n        safeValue = colorConvert.keyword.hex(safeValue).toLowerCase();\n      } catch(e) {\n        safeValue = safeValue[0] === '#' ? safeValue.substr(1) : value;\n      }\n\n      return {\n        ...result,\n        [key]: `#${safeValue}`,\n      }\n    }, {});\n\n    return baseColors;\n  }, [themeForm.baseColors]);\n\n  const handleDeleteBaseColor = useCallback(({ key }) => {\n    setThemeForm(prevThemeForm => {\n      const nextBaseColors = { ...prevThemeForm.baseColors };\n      delete nextBaseColors[key];\n\n      return ({\n        ...prevThemeForm,\n        baseColors: nextBaseColors,\n      });\n    });\n  }, []);\n\n  const handleChangeBaseColorHex = useCallback(({ value, key }) => {\n    setThemeForm(prevThemeForm => ({\n      ...prevThemeForm,\n      baseColors: {\n        ...prevThemeForm.baseColors,\n        [key]: getHexOrDont(value)\n      },\n    }));\n  }, []);\n\n  useEffect(() => {\n    setThemeForm(prevThemeForm => ({\n      ...prevThemeForm,\n      colors: getColors({\n        ...prevThemeForm,\n      }),\n    }));\n  }, [safeBaseColors]);\n\n  const debouncedHandleChangeBaseColorHex = debounce(handleChangeBaseColorHex, 100);\n\n  const handleClickAddBaseColor = (event) => {\n    if (!newBaseColorName) {\n      return;\n    }\n\n    setThemeForm(prevThemeForm => ({\n      ...prevThemeForm,\n      baseColors: {\n        ...prevThemeForm.baseColors,\n        [newBaseColorName.replace(' ', '_')]: prevThemeForm.baseColors.default,\n      },\n    }));\n\n    setIsAddingBaseColor(false);\n    setNewBaseColorName('');\n  }\n\n  // SHARED\n\n  // FONTS\n  const [isAddingBaseFont, setIsAddingBaseFont] = useState(false);\n  const [newBaseFontName, setNewBaseFontName] = useState('');\n\n  const handleChangeFont = useCallback(({ key, value: apiResponse }) => {\n    const font = getFontFromGoogleFontApiResponse({ apiResponse });\n\n    setThemeForm(prevThemeForm => ({\n      ...prevThemeForm,\n      baseFonts: {\n        ...prevThemeForm.baseFonts,\n        [key]: font,\n      },\n    }));\n  }, []);\n\n  const handleDeleteFont = useCallback(({ key }) => {\n    setThemeForm(prevThemeForm => {\n      const nextBaseFonts = { ...prevThemeForm.baseFonts };\n      delete nextBaseFonts[key];\n\n      return ({\n        ...prevThemeForm,\n        baseFonts: nextBaseFonts,\n      });\n    });\n  }, []);\n\n  const handleClickAddBaseFont = (event) => {\n    if (!newBaseFontName) {\n      return;\n    }\n\n    setThemeForm(prevThemeForm => ({\n      ...prevThemeForm,\n      baseFonts: {\n        ...prevThemeForm.baseFonts,\n        [newBaseFontName.replace(' ', '_')]: {\n          ...prevThemeForm.baseFonts.default,\n        },\n      },\n    }));\n\n    setIsAddingBaseFont(false);\n    setNewBaseFontName('');\n  }\n\n  // SPACING\n  const [spacing, setSpacing] = useState(\n    Object\n      .entries(spacings)\n      .filter(([key, value]) => value === initTheme.space?.md)\n      .map(([key, value]) => key)[0]\n    ?? Object.keys(spacings)[Math.floor(Object.keys(spacings).length / 2)]\n  );\n\n  const handleChangeSpacing = useCallback(e => {\n    const nextSpacing = e.target.value;\n    setSpacing(nextSpacing);\n\n    setThemeForm(prevThemeForm => ({\n      ...prevThemeForm,\n      shared: {\n        ...prevThemeForm.shared,\n        spacing: nextSpacing,\n      },\n    }));\n\n    setThemeForm(prevThemeForm => ({\n      ...prevThemeForm,\n      space: getSizes({\n        count: 5,\n        spacing: nextSpacing,\n      }),\n    }));\n  }, []);\n\n  // Roundness\n  const roundnessMax = 10;\n  const roundnessMin = 0;\n\n  const handleChangeRoundness = e => {\n    let nextRoundness = getNumberOrDont(e.target.value)\n    nextRoundness = Math.min(nextRoundness, roundnessMax);\n    nextRoundness = Math.max(nextRoundness, roundnessMin);\n\n    setRoundness(nextRoundness);\n\n    setThemeForm(prevThemeForm => ({\n      ...prevThemeForm,\n      shared: {\n        ...prevThemeForm.shared,\n        roundness: nextRoundness,\n      },\n    }));\n  };\n\n  // RENDER\n\n  return (\n    <Font>\n      <form className={classNames(className, styles.ThemeForm)}>\n        <Accordion\n          defaultIsOpen\n          head=\"Shared styles\"\n          style={{\n            borderBottomWidth: '0',\n            borderRadius: '0',\n          }}\n        >\n          <Control\n            id=\"spacing\"\n            onChange={handleChangeSpacing}\n            tag=\"select\"\n            value={spacing}\n          >\n            {Object.keys(spacings).map(key => (\n              <option\n                key={key}\n                value={key}\n              >\n                {key}\n              </option>\n            ))}\n          </Control>\n          <Control\n            id=\"roundness\"\n            onChange={handleChangeRoundness}\n            type=\"number\"\n            min=\"0\"\n            max=\"10\"\n            step=\"1\"\n            value={`${roundness}`}\n          />\n        </Accordion>\n        <Accordion\n          defaultIsOpen\n          head=\"Colors\"\n          style={{\n            borderBottomWidth: '0',\n            borderRadius: '0',\n          }}\n        >\n          <section>\n            <h4>Neutral colors</h4>\n            {safeBaseColors.white && (\n              <Control\n                id=\"white\"\n                label=\"white\"\n                onChange={event => debouncedHandleChangeBaseColorHex({ value: event.target.value, key: 'white' })}\n                type=\"color\"\n                value={safeBaseColors.white}\n              />\n            )}\n            {safeBaseColors.black && (\n              <Control\n                id=\"black\"\n                label=\"black\"\n                onChange={event => debouncedHandleChangeBaseColorHex({ value: event.target.value, key: 'black' })}\n                type=\"color\"\n                value={safeBaseColors.black}\n              />\n            )}\n            {themeForm.colors.default && (\n              <div className={styles.swatches}>\n                {\n                  Object.entries(themeForm.colors.default)\n                  .sort(([variantKeyA ,hexA], [variantKeyB ,hexB]) => variantKeyB.charCodeAt(0) + getLuminance(hexB) - variantKeyA.charCodeAt(0) - getLuminance(hexA))\n                  .filter(([variantKey]) => variantKey !== 'base')\n                  .map(([variantKey, hex], i) => (\n                    <Swatch\n                      key={variantKey}\n                      className={styles.swatch}\n                      color={\n                        getLuminance(hex) > 0.5 ?\n                          themeForm.colors.default['dark-bg'] :\n                          themeForm.colors.default['light-bg']\n                      }\n                      backgroundColor={hex}\n                    >\n                      {variantKey}\n                    </Swatch>\n                  ))\n                }\n              </div>\n            )}\n          </section>\n          <section>\n            <h4>Semantic colors</h4>\n            {Object.entries(themeForm.colors).filter(([key, value]) => key !== 'default').map(([key, value], i) => {\n              return (\n                <div key={key}>\n                  <Control\n                    id={`semanticColor-${key}`}\n                    key={key}\n                    label={key}\n                    onChange={event => debouncedHandleChangeBaseColorHex({ value: event.target.value, key })}\n                    onDelete={key !== 'primary' ? event => handleDeleteBaseColor({ key }) : undefined}\n                    type=\"color\"\n                    value={`${value.base}`}\n                  />\n                  {themeForm.colors[key] && (\n                    <div className={styles.swatches}>\n                      {\n                        Object.entries(themeForm.colors[key])\n                        .sort(([variantKeyA ,hexA], [variantKeyB ,hexB]) => variantKeyB.charCodeAt(0) + getLuminance(hexB) - variantKeyA.charCodeAt(0) - getLuminance(hexA))\n                        .filter(([variantKey]) => variantKey !== 'base')\n                        .map(([variantKey, hex], i) => (\n                          <Swatch\n                            key={variantKey}\n                            className={styles.swatch}\n                            color={\n                              getLuminance(hex) > 0.5 ?\n                                themeForm.colors[key]['dark-bg'] :\n                                themeForm.colors[key]['light-bg']\n                            }\n                            backgroundColor={hex}\n                          >\n                            {variantKey}\n                          </Swatch>\n                        ))\n                      }\n                    </div>\n                  )}\n                </div>\n                );\n            })}\n            <div>\n              <Button\n                onClick={() => setIsAddingBaseColor(true)}\n                type=\"button\"\n              >\n                Add another color\n              </Button>\n              {isAddingBaseColor && (\n                <>\n                  <Control\n                    id=\"_newBaseColorName\"\n                    onChange={event => setNewBaseColorName(event.target.value)}\n                    type=\"text\"\n                    value={newBaseColorName}\n                  />\n                  <Button\n                    disabled={Object.keys(themeForm.baseColors).includes(newBaseColorName)}\n                    onClick={handleClickAddBaseColor}\n                    type=\"button\"\n                  >\n                    Confirm\n                  </Button>\n                  {' '}\n                  <Button\n                    onClick={() => setIsAddingBaseColor(false)}\n                    outline\n                    type=\"button\"\n                  >\n                    Cancel\n                  </Button>\n                </>\n              )}\n            </div>\n          </section>\n        </Accordion>\n        <Accordion\n          defaultIsOpen\n          head=\"Fonts\"\n          style={{\n            borderBottomWidth: '0',\n            borderRadius: '0',\n          }}\n        >\n          <section>\n            {Object.entries(themeForm.baseFonts).map(([key, value], i) => {\n              return (\n                <div key={key}>\n                  <Control\n                    id={key}\n                    label={key}\n                    onChange={value => handleChangeFont({ key, value })}\n                    onDelete={key !== 'default' ? event => handleDeleteFont({ key }) : undefined}\n                    tag={FontPicker}\n                    value={value.name ?? ''}\n                  />\n                </div>\n              );\n            })}\n            <Button\n              onClick={() => setIsAddingBaseFont(true)}\n              type=\"button\"\n            >\n              Add another font\n            </Button>\n            {isAddingBaseFont && (\n              <>\n                <Control\n                  id=\"_newBaseFontName\"\n                  onChange={event => setNewBaseFontName(event.target.value)}\n                  type=\"text\"\n                  value={newBaseFontName}\n                />\n                <Button\n                  disabled={Object.keys(themeForm.baseFonts).includes(newBaseFontName)}\n                  onClick={handleClickAddBaseFont}\n                  type=\"button\"\n                >\n                  Confirm\n                </Button>\n                {' '}\n                <Button\n                  onClick={() => setIsAddingBaseFont(false)}\n                  outline\n                  type=\"button\"\n                >\n                  Cancel\n                </Button>\n              </>\n            )}\n          </section>\n        </Accordion>\n        <Card style={{ borderRadius: '0' }}>\n          <Card.Head variant=\"default\">\n            <div className={styles.actions}>\n              <Button\n                onClick={handleClickRevert}\n                type=\"button\"\n                level=\"secondary\"\n              >\n                Revert\n              </Button>\n              {' '}\n              <Button\n                onClick={handleClickApply}\n                type=\"button\"\n                variant=\"primary\"\n              >\n                Apply\n              </Button>\n              <br />\n              <br />\n              <Button\n                download=\"theme.json\"\n                href={`data:text/json;charset=utf-8,${encodeURIComponent(JSON.stringify(themeForm))}`}\n                size=\"sm\"\n                style={{\n                  display: 'inline-block',\n                }}\n                tag=\"a\"\n              >\n                Export JSON\n              </Button>\n              {' '}\n              <input\n                onChange={handleChangeImport}\n                ref={importInputFileRef}\n                style={{\n                  fontSize: '0',\n                  height: '0',\n                  left: '-100vw',\n                  opacity: '0',\n                  position: 'absolute',\n                  top: '-100vh',\n                  width: '0',\n                  zIndex: '-1',\n                }}\n                tabIndex=\"-1\"\n                type=\"file\"\n              />\n              <Button\n                onClick={handleClickImport}\n                size=\"sm\"\n                type=\"button\"\n              >\n                Import JSON ...\n              </Button>\n            </div>\n          </Card.Head>\n        </Card>\n      </form>\n    </Font>\n  );\n}\n\nThemeForm.propTypes = {\n  className: PropTypes.string,\n};\n\nThemeForm.defaultProps = {\n  className: '',\n};\n\n\nexport default ThemeForm;\n","import ThemeForm from './ThemeForm';\n\nexport default ThemeForm;\n","import React, { useContext, useMemo, useState } from 'react';\nimport styled, { ThemeContext } from 'styled-components';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\n\nimport {\n  A,\n  Accordion,\n  Button,\n  Card,\n  Font,\n  Em,\n  H1,\n  H2,\n  H3,\n  H4,\n  Input,\n  P,\n  Small,\n  Strong,\n} from '@pixelbandito/themed-ui';\n\nimport styles from './Examples.module.css';\n\nconst Examples = ({ className }) => {\n  const theme = useContext(ThemeContext);\n  const [buttonVariantIndex, setButtonVariantIndex] = useState(0);\n  const [cardVariantIndex, setCardVariantIndex] = useState(0);\n  const [fontVariantIndex, setFontVariantIndex] = useState(0);\n  const [inputValue, setInputValue] = useState('');\n\n  const availableColorVariants = useMemo(\n    () => Object.keys(theme.baseColors).filter(key => !['black', 'white'].includes(key)),\n    [theme.baseColors],\n  );\n\n  const availableCardVariants = useMemo(() => [...availableColorVariants, undefined], [availableColorVariants]);\n  const cardVariant = availableCardVariants[cardVariantIndex];\n\n  const handleIncrementCardVariantIndex = () => {\n    setCardVariantIndex(prevButtonVariantIndex => (prevButtonVariantIndex + 1) % availableCardVariants.length);\n  }\n\n  const availableButtonVariants = useMemo(\n    () => Object.keys(theme.buttons.variants),\n    [theme.buttons.variants],\n  );\n\n  const buttonVariant = availableButtonVariants[buttonVariantIndex];\n\n  const handleIncrementButtonVariantIndex = () => {\n    setButtonVariantIndex(prevButtonVariantIndex => (prevButtonVariantIndex + 1) % availableButtonVariants.length);\n  }\n\n  const availableFontVariants = useMemo(() => Object.keys(theme.baseFonts), [theme.baseFonts]);\n  const fontVariant = availableFontVariants[fontVariantIndex];\n\n  const handleIncrementFontVariantIndex = () => {\n    console.log('Doing it', fontVariantIndex, fontVariant);\n    setFontVariantIndex(prevFontVariantIndex => (prevFontVariantIndex + 1) % availableFontVariants.length);\n  }\n\n  return (\n    <div className={classNames(className, styles.Examples)}>\n      <Font tag=\"div\">\n        <H1\n          id=\"heading-1\"\n          mb=\"md\"\n        >\n          Heading 1\n        </H1>\n        <H2\n          id=\"heading-2\"\n          mb=\"md\"\n        >\n          Heading 2\n        </H2>\n        <H3\n          id=\"heading-3\"\n          mb=\"md\"\n        >\n          Heading 3\n        </H3>\n        <H4\n          id=\"heading-4\"\n          mb=\"md\"\n        >\n          Heading 4\n        </H4>\n        <Button\n          mb=\"md\"\n          mr=\"md\"\n          onClick={handleIncrementButtonVariantIndex}\n          size=\"sm\"\n          variant={buttonVariant}\n        >\n          Button ({buttonVariant})\n        </Button>\n        {' '}\n        <Button\n          mb=\"md\"\n          mr=\"md\"\n          onClick={handleIncrementButtonVariantIndex}\n          variant={buttonVariant}\n        >\n          Button ({buttonVariant})\n        </Button>\n        {' '}\n        <Button\n          mb=\"md\"\n          mr=\"md\"\n          onClick={handleIncrementButtonVariantIndex}\n          size=\"lg\"\n          variant={buttonVariant}\n        >\n          Button ({buttonVariant})\n        </Button>\n        {' '}\n        <Input value={inputValue} onChange={e => setInputValue(e.target.value)}></Input>\n        <Font\n          onClick={handleIncrementFontVariantIndex}\n          tag=\"div\"\n          variant={fontVariant}\n        >\n          <H1\n            mb=\"md\"\n          >\n            Fonts ({fontVariant})\n          </H1>\n          <P\n            mb=\"md\"\n            mt=\"md\"\n          >\n            This paragraph has{' '}\n            <Strong>strong</Strong>,{' '}\n            <Em>emphasized</Em>, and{' '}\n            <Small>small</Small> text in it.{' '}\n          </P>\n          <P\n            mb=\"md\"\n            mt=\"md\"\n          >\n            <Font contrast=\"1\" tag=\"span\">High contrast text!</Font>{' '}\n            <Font contrast=\"2\" tag=\"span\">Medium contrast text!</Font>{' '}\n            <Font contrast=\"3\" tag=\"span\">Lower contrast text!</Font>\n          </P>\n          <A href=\"#heading\">Link</A>\n        </Font>\n        <Card\n          mb=\"md\"\n          mt=\"md\"\n          onClick={handleIncrementCardVariantIndex}\n          variant={cardVariant}\n        >\n          <Card.Head variant={cardVariant}>\n            Card head {cardVariant && (<>({cardVariant})</>)}\n          </Card.Head>\n          <Card.Body variant={cardVariant}>\n            Card body\n          </Card.Body>\n          <Card.Foot variant={cardVariant}>\n            Card foot\n          </Card.Foot>\n        </Card>\n        <Accordion\n          mb=\"md\"\n          mt=\"md\"\n        >\n          Accordion contents\n        </Accordion>\n      </Font>\n    </div>\n  );\n};\n\nExamples.propTypes = {\n  className: PropTypes.string,\n};\n\nExamples.defaultProps = {\n  className: '',\n};\n\nconst StyledExamples = styled(Examples)(\n  ({\n    theme,\n  }) => ({\n    backgroundColor: (theme.shared.mode === 'dark' && theme.colors.default['dark-bg']) || theme.colors.default['light-bg'] ,\n    padding: theme.space.lg,\n    '@media (prefers-color-scheme: dark)': !theme.shared.mode && {\n      backgroundColor: theme.colors.default['dark-bg'],\n    },\n    '@media (prefers-color-scheme: light)': !theme.shared.mode && {\n      backgroundColor: theme.colors.default['light-bg'],\n    },\n  })\n);\n\nexport default StyledExamples;\n","import Examples from './Examples';\n\nexport default Examples;\n","import React, { useCallback, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Mousetrap from 'mousetrap';\nimport styles from './GridOverlay.module.css';\n\n\nconst GridOverlay = () => {\n  const [isVisible, setIsVisible] = useState(false);\n\n  const toggleIsVisible = useCallback(() => {\n    setIsVisible(!isVisible);\n  }, [isVisible]);\n\n  useEffect(() => {\n    Mousetrap.bind('.', toggleIsVisible);\n\n    return () => {\n      Mousetrap.unbind('.', toggleIsVisible);\n    };\n  }, [toggleIsVisible]);\n\n  if (!isVisible) {\n    return null;\n  }\n\n  return (\n    <div className={styles.GridOverlay} />\n  );\n};\n\nGridOverlay.propTypes = {\n  className: PropTypes.string,\n};\n\nGridOverlay.defaultProps = {\n  className: '',\n};\n\nexport default GridOverlay;\n","import GridOverlay from './GridOverlay';\n\nexport default GridOverlay;\n","import React, { useCallback, useState } from 'react';\nimport { ThemeProvider } from 'styled-components'\nimport classNames from 'classnames';\n\nimport { defaultTheme } from '@pixelbandito/theme';\n\nimport './App.css';\nimport styles from './App.module.css';\nimport ThemeForm from './ThemeForm';\nimport Examples from './Examples';\nimport GridOverlay from './GridOverlay';\n\nfunction App() {\n  const [theme, setTheme] = useState(defaultTheme);\n  const [themePreview, setThemePreview] = useState(theme);\n  const [sidebarIsExpanded, setSidebarIsExpanded] = useState(true);\n\n  const handleChangeThemePreview = useCallback((theme) => {\n    setThemePreview(theme);\n  }, []);\n\n  const handleApplyThemePreview = useCallback((theme) => {\n    setTheme(themePreview);\n  }, [themePreview]);\n\n  return (\n    <ThemeProvider theme={theme}>\n      <div className={classNames('App', styles.App, {\n        [styles.withSidebarExpanded]: sidebarIsExpanded,\n      })}>\n        <div className={styles.sidebar}>\n          <div className={styles.form}>\n            <ThemeForm\n              theme={theme}\n              onChangeTheme={handleChangeThemePreview}\n              onApplyTheme={handleApplyThemePreview}\n            />\n          </div>\n          <button\n            className={styles.sideBarToggleStripe}\n            onClick={() => setSidebarIsExpanded(prev => !prev)}\n            type=\"button\"\n            style={{\n              backgroundColor: theme.colors.default['dark-1'],\n            }}\n          />\n          <button\n            className={styles.sideBarToggleButton}\n            onClick={() => setSidebarIsExpanded(prev => !prev)}\n            type=\"button\"\n            style={{\n              borderColor: theme.colors.default['dark-1'],\n              color: theme.colors.default['dark-3']\n            }}\n          >\n            ↔\n          </button>\n        </div>\n        <div className={styles.example}>\n          <div>\n            <ThemeProvider theme={themePreview} >\n              <Examples />\n            </ThemeProvider>\n            <ThemeProvider theme={{\n                ...themePreview,\n                shared: {\n                  ...themePreview.shared,\n                  mode: 'dark',\n                },\n              }} >\n              <Examples />\n            </ThemeProvider>\n            <ThemeProvider theme={{\n                ...themePreview,\n                shared: {\n                  ...themePreview.shared,\n                  mode: 'light',\n                },\n              }} >\n              <Examples />\n            </ThemeProvider>\n          </div>\n        </div>\n      </div>\n      <GridOverlay />\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport '@pixelbandito/themed-ui/dist/index.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}