{"version":3,"sources":["App.module.css","ThemeForm/ThemeForm.module.css","ThemeForm/Control/Control.module.css","Swatch/Swatch.module.css","Examples/Examples.module.css","GridOverlay/GridOverlay.module.css","../../src/utils/colors.js","../../src/component-utils.js","../../src/theme-utils.mjs","../../src/theme.mjs","../../src/Card/Card.js","../../src/Accordion/Accordion.js","../../src/prop-types.js","../../src/Button/Button.js","../../src/Font/Font.js","../../src/Font/Heading/Heading.js","../../src/Link/Link.js","Swatch/Swatch.js","Swatch/index.js","ThemeForm/utils.js","ThemeForm/Control/Control.js","ThemeForm/Control/index.js","ThemeForm/ThemeForm.js","ThemeForm/index.js","Examples/Examples.js","Examples/index.js","GridOverlay/GridOverlay.js","GridOverlay/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","getContrastRatio","hexB","luminanceA","luminanceB","getLuminance","hexA","sort","toFixed","getNextLuminanceByContrastRatio","contrastRatio","luminance","getPrevLuminanceByContrastRatio","rgb2","colorConvert","hex","rgb","map","channel","i","c","Math","pow","setColorByContrastWithHsl","targetLuminance","attempt","baseHex","targetContrastRatio","originalContrastRatio","direction","maxAttempts","nextColor","setColorByLuminanceWithHsl","initHsl","jumpSize","prevHsl","hsl","safeInitHsl","setHsl","l","max","min","h2","h","s2","s","l2","getHexFromHexOrName","safeValue","keyword","color","toLowerCase","e","substr","window","pxbColors","getModeStyles","mode","lightModeStyle","darkModeStyle","@media (prefers-color-scheme: light)","@media (prefers-color-scheme: dark)","getInheritedBaseColor","baseColors","initMaxAttempts","prevUnsafeColor","resolveCssColors","unsafeColor","Object","keys","length","getColors","contrastRatios","entries","reduce","prevResult","key","result","white","black","indexOf","base","forEach","getButtons","fonts","space","variants","filter","includes","default","keyColor",":hover",":focus",":active",":disabled","borderWidth","roundness","shine","sizes","sm","fontSize","paddingH","paddingV","xs","md","lg","getMinLineHeight","size","idealSize","floor","ceil","px","abs","ratio","getSizeLabelFromIndex","sizeIndex","smSizeLabels","lgSizeLabels","getSizes","offset","count","customSizes","lgCount","mdSize","smCount","label","Error","Array","fill","baseSize","primary","colors","shared","elevation","getShared","sansSerif","serif","xl","weights","normal","bold","theme","buttons","Card","React","passedProps","classNames","className","styles","forwardedRef","PropTypes","string","StyledCard","styled","props","variant","background","borderColor","borderRadius","getCardStyles","CardHead","StyledCardHead","padding","getCardHeadStyles","CardBody","forwardRef","StyledCardBody","getCardBodyStyles","CardFoot","StyledCardFoot","getCardFootStyles","Accordion","head","useState","cardRef","useRef","customHead","isOpen","useEffect","setExpandedHeight","transitionStyles","exiting","borderBottomWidth","exited","in","timeout","state","onClick","setIsOpen","prevIsOpen","style","ref","boxSizing","maxHeight","paddingBottom","paddingTop","undefined","children","defaultIsOpen","StyledAccordion","tagPropType","$$typeof","render","func","Button","tag","StyledButton","outline","variantKey","getVariantColors","variantStyles","backgroundColorKey","backgroundColor","colorKey","lineHeightPx","contrast","modeStyles","borderStyle","paddingLeft","paddingRight","lineHeight","transition","outlineStyle","outlineColor","boxShadow","getButttonStyle","getFontStyle","family","weight","lineHeightRatio","fontFamily","fontWeight","Font","StyledFont","P","Small","Strong","Em","Heading","Tag","useMemo","CustomTag","level","StyledHeading","1","2","3","4","getHeadingFontStyle","H1","H2","H3","H4","A","Swatch","defaultProps","getNumberOrDont","number","parseInt","isNaN","Control","id","onChange","onDelete","type","value","htmlFor","delete","input","ThemeForm","initTheme","onChangeTheme","onApplyTheme","setMdSize","setRoundness","themeForm","setThemeForm","isAddingBaseColor","setIsAddingBaseColor","newBaseColor","setNewBaseColor","newBaseColorName","setNewBaseColorName","importInputFileRef","prevThemeForm","handleClickApply","useCallback","handleClickRevert","safeBaseColors","handleDeleteBaseColor","nextBaseColors","handleChangeBaseColorHex","debouncedHandleChangeBaseColorHex","debounce","fontSizesCount","setFontSizesCount","fontSizes","setFontSizes","handleChangeFontSize","event","nextSizes","target","handleChangeFontSizesCount","nextFontSizesCount","sizeKey","values","handleClickImport","current","click","handleChangeImport","reader","FileReader","readAsText","files","onload","JSON","parse","console","warn","message","nextMdSize","nextRoundness","step","swatches","variantKeyA","variantKeyB","charCodeAt","swatch","disabled","replace","Head","actions","download","href","encodeURIComponent","stringify","display","height","left","opacity","position","top","width","zIndex","tabIndex","Examples","useContext","ThemeContext","buttonVariantIndex","setButtonVariantIndex","cardVariantIndex","setCardVariantIndex","availableVariants","availableCardVariants","cardVariant","availableButtonVariants","buttonVariant","handleIncrementButtonVariantIndex","prevButtonVariantIndex","mb","mr","mt","Body","Foot","GridOverlay","isVisible","setIsVisible","toggleIsVisible","Mousetrap","bind","unbind","App","defaultTheme","setTheme","themePreview","setThemePreview","sidebarIsExpanded","setSidebarIsExpanded","handleChangeThemePreview","handleApplyThemePreview","withSidebarExpanded","sidebar","form","sideBarToggleStripe","prev","sideBarToggleButton","example","Boolean","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.7b36c5ef.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__16ZpL\",\"withSidebarExpanded\":\"App_withSidebarExpanded__39jRM\",\"sidebar\":\"App_sidebar__1l9Om\",\"form\":\"App_form__30Y9M\",\"example\":\"App_example__1C_qW\",\"sideBarToggleStripe\":\"App_sideBarToggleStripe__3bW0U\",\"sideBarToggleButton\":\"App_sideBarToggleButton__8_aRn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ThemeForm\":\"ThemeForm_ThemeForm__SOs96\",\"swatches\":\"ThemeForm_swatches__3cWYc\",\"swatch\":\"ThemeForm_swatch__dduV2\",\"actions\":\"ThemeForm_actions__2ZooL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Control\":\"Control_Control__3EPTo\",\"label\":\"Control_label__3Ujpe\",\"delete\":\"Control_delete__25-H-\",\"input\":\"Control_input__2uiDw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Swatch\":\"Swatch_Swatch__Hae-f\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Example\":\"Examples_Example__OpCB9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"GridOverlay\":\"GridOverlay_GridOverlay__38eQu\"};","import colorConvert from 'color-convert';\n\nexport const getContrastRatio = ({ hexA, hexB, luminanceA, luminanceB }) => {\n  luminanceA = luminanceA || luminanceA === 0 ? luminanceA : getLuminance(hexA);\n  luminanceB = luminanceB || luminanceB === 0 ? luminanceB : getLuminance(hexB);\n  const [darker, lighter] = [luminanceA, luminanceB].sort();\n  const contrastRatio = ((lighter + 0.05) / (darker + 0.05)).toFixed(2);\n  return contrastRatio;\n};\n\nexport const getNextLuminanceByContrastRatio = ({ luminance, contrastRatio }) =>\n  luminance * contrastRatio + contrastRatio / 20 - 1 / 20;\n\nexport const getPrevLuminanceByContrastRatio = ({ luminance, contrastRatio }) =>\n  (luminance + 1 / 20) / contrastRatio - 1 / 20;\n\nexport const getLuminance = hex => {\n  const rgb = colorConvert.hex.rgb(hex);\n\n  let rgb2 = rgb.map((channel, i) => {\n    let c = channel / 255;\n\n    if (c <= 0.03928) {\n      return c / 12.92;\n    } else {\n      return Math.pow((c + 0.055) / 1.055, 2.4);\n    }\n  });\n\n  const luminance = (0.2126 * rgb2[0] + 0.7152 * rgb2[1] + 0.0722 * rgb2[2]);\n  return luminance;\n};\n\nexport const setColorByLuminanceWithHsl = ({\n  attempt = 0,\n  hex,\n  initHsl,\n  luminance: targetLuminance,\n  maxAttempts = 10,\n}) => {\n  const luminance = getLuminance(hex);\n\n  if (luminance === targetLuminance || attempt >= maxAttempts) {\n    return hex;\n  }\n\n  const darken = luminance > targetLuminance;\n  const jumpSize = (darken ? -100 : 100) / Math.pow(2, attempt + 1);\n  let prevHsl = colorConvert.hex.hsl(hex);\n  let safeInitHsl = initHsl !== undefined ? initHsl : prevHsl;\n\n  const hsl = setHsl({\n    hsl: safeInitHsl,\n    l: Math.max(0, Math.min(prevHsl[2] + jumpSize, 100)),\n  });\n\n  if (`#${colorConvert.hsl.hex(hsl)}` === hex) {\n    return hex;\n  }\n\n  return setColorByLuminanceWithHsl({\n    attempt: attempt + 1,\n    hex: `#${colorConvert.hsl.hex(hsl)}`,\n    initHsl: safeInitHsl,\n    luminance: targetLuminance,\n    maxAttempts,\n  });\n};\n\nexport const setColorByContrastWithHsl = ({\n  attempt = 0,\n  baseHex,\n  contrastRatio: targetContrastRatio,\n  originalContrastRatio,\n  direction,\n  hex,\n  maxAttempts = 10,\n}) => {\n  let targetLuminance;\n  originalContrastRatio = originalContrastRatio || targetContrastRatio;\n\n  if (!direction) {\n    targetLuminance = getLuminance(baseHex) > 0.5 ?\n      getPrevLuminanceByContrastRatio({\n        contrastRatio: targetContrastRatio,\n        luminance: getLuminance(baseHex),\n      }) :\n      getNextLuminanceByContrastRatio({\n        contrastRatio: targetContrastRatio,\n        luminance: getLuminance(baseHex),\n      });\n  } else if (direction === 'asc') {\n    targetLuminance = getNextLuminanceByContrastRatio({\n      contrastRatio: targetContrastRatio,\n      luminance: getLuminance(baseHex),\n    });\n  } else if (direction === 'desc') {\n    targetLuminance = getPrevLuminanceByContrastRatio({\n      contrastRatio: targetContrastRatio,\n      luminance: getLuminance(baseHex),\n    })\n  }\n\n  const nextColor = setColorByLuminanceWithHsl({\n    hex,\n    luminance: targetLuminance,\n    maxAttempts,\n  });\n\n  if (getContrastRatio({ hexA: nextColor, hexB: baseHex }) >= originalContrastRatio || attempt > maxAttempts) {\n    return nextColor;\n  }\n\n  return setColorByContrastWithHsl({\n    attempt: attempt + 1,\n    baseHex,\n    contrastRatio: targetContrastRatio + 0.05,\n    originalContrastRatio,\n    direction,\n    hex,\n    maxAttempts,\n  });\n};\n\nexport const setHsl = ({ hsl: [h, s, l], h: h2, s: s2, l: l2 }) => ([\n  typeof h2 === 'number' ? h2 : h,\n  typeof s2 === 'number' ? s2 : s,\n  typeof l2 === 'number' ? l2 : l,\n]);\n\nexport const getHexFromHexOrName = color => {\n  let safeValue;\n\n  try {\n    safeValue = colorConvert.keyword.hex(color).toLowerCase();\n  } catch(e) {\n    safeValue = color[0] === '#' ? color.substr(1) : color;\n  }\n\n  return `#${safeValue}` || '#000000';\n}\n\nwindow.pxbColors = {\n  colorConvert,\n  getContrastRatio,\n  getHexFromHexOrName,\n  getLuminance,\n  setColorByContrastWithHsl,\n  setHsl,\n};\n\nexport default {\n  getContrastRatio,\n  getHexFromHexOrName,\n  getLuminance,\n  setColorByContrastWithHsl,\n  setHsl,\n};\n","export const getModeStyles = ({ mode, lightModeStyle, darkModeStyle }) => ({\n  ...(mode === 'dark' ? darkModeStyle : lightModeStyle),\n  '@media (prefers-color-scheme: light)': !mode && {\n    ...lightModeStyle,\n  },\n  '@media (prefers-color-scheme: dark)': !mode && {\n    ...darkModeStyle,\n  },\n});\n\nexport default {\n  getModeStyles,\n};\n","import { getHexFromHexOrName, setColorByContrastWithHsl } from './utils/colors';\n\nexport const getInheritedBaseColor = ({\n  attempt = 0,\n  baseColors,\n  maxAttempts: initMaxAttempts,\n  prevUnsafeColor,\n  resolveCssColors = true,\n  unsafeColor,\n}) => {\n  let maxAttempts = initMaxAttempts;\n\n  if (initMaxAttempts === undefined) {\n    maxAttempts = Object.keys(baseColors).length;\n  }\n\n  if (attempt > maxAttempts) {\n    return unsafeColor;\n  }\n\n  if (!baseColors[unsafeColor]) {\n    return resolveCssColors ? unsafeColor : prevUnsafeColor;\n  }\n\n  return getInheritedBaseColor({\n    attempt: attempt + 1,\n    baseColors,\n    maxAttempts,\n    prevUnsafeColor: unsafeColor,\n    resolveCssColors,\n    unsafeColor: baseColors[unsafeColor],\n  });\n};\n\nexport const getColors = ({ baseColors }) => {\n  const bgStep = 1.1;\n  const contrastRatios = [7, 4.5, 3];\n\n  const colors = Object.entries(baseColors).reduce((prevResult, [key, unsafeColor]) => {\n    const result = { ...prevResult };\n    let color = getInheritedBaseColor({ baseColors, unsafeColor });\n    color = getHexFromHexOrName(color);\n    const white = getHexFromHexOrName(baseColors.white);\n    const black = getHexFromHexOrName(baseColors.black);\n\n    if (['white', 'black'].indexOf(key) >= 0) {\n      return result;\n    }\n\n    // Default is a special range from white to black,\n    // but with user configured options for white and black\n    if (key === 'default') {\n      color = black;\n    }\n\n    result[key] = {};\n\n    result[key].base = color;\n\n    result[key]['light-bg'] = setColorByContrastWithHsl({\n      hex: color,\n      baseHex: white,\n      contrastRatio: bgStep,\n    });\n\n    contrastRatios.forEach((contrastRatio, i) => {\n      // Large text\n      result[key][`light-${i + 1}`] = setColorByContrastWithHsl({\n        hex: color,\n        baseHex: result[key]['light-bg'],\n        contrastRatio,\n        direction: 'desc',\n      });\n    });\n\n    result[key]['dark-bg'] = setColorByContrastWithHsl({\n      hex: color,\n      baseHex: black,\n      contrastRatio: bgStep,\n    });\n\n    contrastRatios.forEach((contrastRatio, i) => {\n      // Large text\n      result[key][`dark-${i + 1}`] = setColorByContrastWithHsl({\n        hex: color,\n        baseHex: result[key]['dark-bg'],\n        contrastRatio,\n        direction: 'asc',\n      });\n    });\n\n    return result;\n  }, {});\n\n  return colors;\n};\n\nexport const getButtons = ({\n  baseColors,\n  fonts,\n  space,\n}) => {\n  const variants = Object.keys(baseColors)\n    .filter(key => !['black', 'white'].includes(key))\n    .reduce((result, key) => ({\n      ...result,\n      [key]: {\n        default: {\n          keyColor: key,\n        },\n        ':hover': {\n          keyColor: key,\n        },\n        ':focus': {\n          keyColor: key,\n        },\n        ':active': {\n          keyColor: key,\n        },\n        ':disabled': {\n          keyColor: 'neutral',\n        },\n      },\n    }), {});\n\n  return ({\n    borderWidth: 1,\n    roundness: 0.2,\n    shine: 1, // Very shiny: glass, shiny: plastic, slightly shiny: paper, 0: flat\n    sizes: {\n      sm: {\n        fontSize: fonts.sizes.sm,\n        paddingH: space.sm,\n        paddingV: space.xs,\n      },\n      md: {\n        fontSize: fonts.sizes.md,\n        paddingH: space.md,\n        paddingV: space.sm,\n      },\n      lg: {\n        fontSize: fonts.sizes.lg,\n        paddingH: space.md,\n        paddingV: space.sm,\n      },\n    },\n    variants,\n  });\n};\n\nexport const getMinLineHeight = ({ size, space }) => {\n  const idealSize = size * 1.4;\n  const floor = Math.floor(idealSize / space.xs) * space.xs;\n  const ceil = Math.ceil(idealSize / space.xs) * space.xs;\n  const px = Math.abs(idealSize - floor) <= Math.abs(idealSize - ceil) ? floor : ceil;\n  const ratio = px / size;\n\n  return {\n    px,\n    ratio,\n  };\n};\n\nexport const getShared = ({ elevation = 1, roundness = 3, shine = 0 }) => ({\n  elevation,\n  mode: undefined, // 'light', 'dark', undefined\n  roundness,\n  shine,\n});\n\nexport const getSizeLabelFromIndex = (sizeIndex) => {\n  const smSizeLabels = ['sm', 'xs'];\n  const lgSizeLabels = ['lg', 'xl'];\n  const baseSizeLabel = 'md';\n\n  if (sizeIndex < 0) {\n    if (-1 * sizeIndex <= smSizeLabels.length) {\n      return smSizeLabels[-1 * sizeIndex - 1];\n    }\n\n    return `${-1 * sizeIndex - 1}${smSizeLabels[smSizeLabels.length - 1]}`;\n  }\n\n  if (sizeIndex > 0) {\n    if (sizeIndex <= lgSizeLabels.length) {\n      return lgSizeLabels[sizeIndex - 1];\n    }\n\n    return `${sizeIndex - 1}${lgSizeLabels[lgSizeLabels.length - 1]}`;\n  }\n\n  return baseSizeLabel;\n};\n\nexport const getSizes = ({\n  count,\n  customSizes = {},\n  lgCount = 0,\n  mdSize = null,\n  smCount = 0,\n}) => {\n  let offset;\n\n  let sizes = [{\n    label: 'md',\n    size: mdSize,\n  }];\n\n  if (count) {\n    if (count < 1) {\n      throw new Error('Count must be at least 1');\n    }\n\n    offset = Math.floor(count / 2);\n    sizes = new Array(count).fill(null).map((size, i) => i - offset);\n  } else if (lgCount >= 0 && smCount >= 0) {\n    offset = smCount;\n    sizes = new Array(1 + lgCount + smCount).fill(null).map((size, i) => i - offset);\n  } else {\n    throw new Error('You must define `count` _or_ `lgCount`/`smCount`');\n  }\n\n  sizes = sizes.map((sizeIndex) => {\n    const size = {\n      label: getSizeLabelFromIndex(sizeIndex),\n      size: mdSize * (2 ** sizeIndex),\n    };\n\n    return size;\n  });\n\n  return {\n    ...sizes.reduce((result, size) => ({\n      ...result,\n      [size.label]: size.size,\n    }), {}),\n    ...customSizes,\n  };\n};\n\nexport default {\n  getSizes,\n};\n","import {\n  getButtons,\n  getColors,\n  getShared,\n  getSizes,\n} from './theme-utils.mjs';\n\nconst baseSize = 4;\n\nconst space = getSizes({ count: 5, mdSize: baseSize * 4 });\n\nexport const baseColors = {\n  white: 'white',\n  black: '#16161d',\n  default: 'black',\n  primary: 'blue',\n  // success: 'green',\n  // info: 'lightblue',\n  // warning: 'yellow',\n  // danger: 'red',\n};\n\nconst colors = getColors({ baseColors });\n\nconst shared = getShared({ colors });\n\nconst fonts = {\n  sansSerif: 'sans-serif',\n  serif: 'serif',\n  sizes: {\n    xs: 10,\n    sm: 12,\n    md: 16,\n    lg: 24,\n    xl: 32,\n  },\n  weights: {\n    normal: 400,\n    bold: 700,\n  },\n};\n\nconst buttons = getButtons({\n  baseColors,\n  colors,\n  fonts,\n  space,\n});\n\n/*\n  Dark mode?\n  - on/off\n\n  Roundness applies to button and card corners.\n  - Should you be able to separate them?\n\n  Button surfaces should be able to look\n  - glass-shiny (old iOS)\n  - softly shaded (plastic?)\n  - totally flat (paper?)\n  - soft around the edges (neuomorphic?)\n\n  Button shapes should be able to look\n  - Totally pill shaped\n  - Slightly rounded\n\n  Buttons should be able to elevate:\n  - Not at all - no shadows\n  - float above the background (distant, large shadows)\n\n  Neumorphism\n  - Emboss\n  - Float\n  - None\n\n  Button style schemes\n  - link style - no border, no background\n  - Standard, semantic color background, inverted foreground\n  - Pastel, i.e. monochomatic with tinted background, intense foreground\n\n  Floating panels should have\n  - Roundness\n  - Elevation\n\n  And a different material palette\n  - Edged for visibility\n  - Edged for 3D realism\n*/\n\nconst theme = {\n  baseColors,\n  buttons,\n  colors,\n  fonts,\n  shared,\n  space,\n};\n\nexport default theme;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport styled from 'styled-components';\nimport { margin } from 'styled-system';\nimport { getModeStyles } from '@pixelbandito/theme';\nimport styles from './Card.module.css';\n\nexport const getCardStyles = ({\n  variant = 'default',\n  theme,\n}) => {\n  const darkModeStyle = {\n    background: theme.baseColors.black,\n    borderColor: theme.colors[variant]['light-1'],\n  };\n\n  const lightModeStyle = {\n    background: theme.baseColors.white,\n    borderColor: theme.colors[variant]['dark-1'],\n  };\n\n  return {\n    borderRadius: `${theme.shared.roundness * 2}px`,\n    ...getModeStyles({\n      darkModeStyle,\n      lightModeStyle,\n      mode: theme?.shared?.mode,\n    }),\n  };\n};\n\nexport const getCardHeadStyles = ({\n  variant,\n  theme,\n}) => {\n  const lightModeStyle = {\n    background: theme.colors[variant]?.['light-bg'] || 'transparent',\n    borderColor: theme.colors[variant]?.['dark-1'] || 'transparent',\n  };\n\n  const darkModeStyle = {\n    background: theme.colors[variant]?.['dark-bg'] || 'transparent',\n    borderColor: theme.colors[variant]?.['light-1'] || 'transparent',\n  };\n\n  return {\n    borderRadius: `${theme.shared.roundness * 2}px ${theme.shared.roundness * 2}px 0 0`,\n    padding: `${theme.space.sm}px ${theme.space.md}px`,\n    ...getModeStyles({\n      darkModeStyle,\n      lightModeStyle,\n      mode: theme?.shared?.mode,\n    }),\n  };\n};\n\nexport const getCardBodyStyles = ({\n  theme,\n}) => {\n  const darkModeStyle = {\n    background: theme.baseColors.black,\n  };\n\n  const lightModeStyle = {\n    background: theme.baseColors.white,\n  };\n\n  return {\n    padding: `${theme.space.md}px`,\n    ...getModeStyles({\n      darkModeStyle,\n      lightModeStyle,\n      mode: theme?.shared?.mode,\n    }),\n  };\n};\n\nexport const getCardFootStyles = ({\n  variant,\n  theme,\n}) => {\n  const darkModeStyle = {\n    background: theme.colors[variant]?.['dark-bg'] || 'transparent',\n    borderColor: theme.colors[variant]?.['light-1'] || 'transparent',\n  };\n\n  const lightModeStyle = {\n    background: theme.colors[variant]?.['light-bg'] || 'transparent',\n    borderColor: theme.colors[variant]?.['dark-1'] || 'transparent',\n  };\n\n  return {\n    borderRadius: `0 0 ${theme.shared.roundness * 2}px ${theme.shared.roundness * 2}px`,\n    padding: `${theme.space.sm}px ${theme.space.md}px`,\n    ...getModeStyles({\n      darkModeStyle,\n      lightModeStyle,\n      mode: theme?.shared?.mode,\n    }),\n  };\n};\n\nconst Card = React.forwardRef(({\n  className,\n  ...passedProps\n}, forwardedRef) => (\n  <div\n    className={classNames(className, styles.Card)}\n    ref={forwardedRef}\n    {...passedProps}\n  />\n));\n\nCard.propTypes = {\n  className: PropTypes.string,\n};\n\nCard.defaultProps = {\n  className: '',\n};\n\nconst StyledCard = styled(Card)(\n  props => getCardStyles(props),\n  margin,\n);\n\nexport const CardHead = ({\n  className,\n  ...passedProps\n}) => (\n  <div\n    className={classNames(className, styles.Head)}\n    {...passedProps}\n  />\n);\n\nCardHead.propTypes = {\n  className: PropTypes.string,\n};\n\nCardHead.defaultProps = {\n  className: '',\n};\n\nconst StyledCardHead = styled(CardHead)(\n  ({\n    variant,\n    theme,\n  }) => getCardHeadStyles({\n    variant,\n    theme,\n  }),\n);\n\nexport const CardBody = React.forwardRef(({\n  className,\n  ...passedProps\n}, forwardRef) => (\n  <div\n    className={classNames(className, styles.Body)}\n    ref={forwardRef}\n    {...passedProps}\n  />\n));\n\nCardBody.propTypes = {\n  className: PropTypes.string,\n};\n\nCardBody.defaultProps = {\n  className: '',\n};\n\nconst StyledCardBody = styled(CardBody)(\n  ({\n    variant,\n    theme,\n  }) => getCardBodyStyles({\n    variant,\n    theme,\n  }),\n);\n\nexport const CardFoot = ({\n  className,\n  ...passedProps\n}) => (\n  <div\n    className={classNames(className, styles.Foot)}\n    {...passedProps}\n  />\n);\n\nCardFoot.propTypes = {\n  className: PropTypes.string,\n};\n\nCardFoot.defaultProps = {\n  className: '',\n};\n\nconst StyledCardFoot = styled(CardFoot)(\n  ({\n    variant,\n    theme,\n  }) => getCardFootStyles({\n    variant,\n    theme,\n  }),\n);\n\nStyledCard.Head = StyledCardHead;\nStyledCard.Body = StyledCardBody;\nStyledCard.Foot = StyledCardFoot;\n\nexport default StyledCard;\n","import React, {\n  // <> shorthard doesn't work without importing Fragment\n  // eslint-disable-next-line no-unused-vars\n  Fragment,\n  useEffect,\n  useRef,\n  useState,\n} from 'react';\nimport { Transition } from 'react-transition-group';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport styled from 'styled-components';\nimport styles from './Accordion.module.css';\nimport Card from '../Card';\n\nconst Accordion = ({\n  children,\n  className,\n  defaultIsOpen,\n  head: customHead,\n  variant,\n  ...passedProps\n}) => {\n  const [isOpen, setIsOpen] = useState(defaultIsOpen);\n  const [expandedHeight, setExpandedHeight] = useState();\n  const cardRef = useRef();\n  const head = customHead || (isOpen ? 'Show less' : 'Show more');\n\n  useEffect(() => {\n    if (isOpen && cardRef.current) {\n      setExpandedHeight(cardRef.current.scrollHeight);\n    }\n  }, [isOpen]);\n\n  const transitionStyles = {\n    exiting: { borderBottomWidth: 1 },\n    exited: { borderBottomWidth: 0 },\n  };\n\n  return (\n    <Card\n      {...passedProps}\n      className={classNames(className, styles.Accordion)}\n      variant={variant}\n    >\n      <Transition\n        in={isOpen}\n        timeout={200}\n      >\n        {state => (\n          <>\n            <Card.Head\n              variant={variant}\n              onClick={() => setIsOpen(prevIsOpen => !prevIsOpen)}\n              style={{\n                ...transitionStyles[state],\n              }}\n            >\n              {head}\n            </Card.Head>\n            <Card.Body\n              className={styles.body}\n              ref={cardRef}\n              style={{\n                boxSizing: 'content-box',\n                maxHeight: !isOpen ? '0px' : `${expandedHeight}px`,\n                paddingBottom: !isOpen ? '0px' : undefined,\n                paddingTop: !isOpen ? '0px' : undefined,\n              }}\n              variant={variant}\n            >\n              {children}\n            </Card.Body>\n          </>\n        )}\n      </Transition>\n    </Card>\n  );\n};\n\nAccordion.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  defaultIsOpen: PropTypes.bool,\n  head: PropTypes.node,\n  variant: PropTypes.string,\n};\n\nAccordion.defaultProps = {\n  children: null,\n  className: '',\n  defaultIsOpen: false,\n  head: null,\n  variant: 'default',\n};\n\nconst StyledAccordion = styled(Accordion)(\n  ({\n    theme,\n  }) => ({\n    color: theme.color,\n  }),\n);\n\nexport default StyledAccordion;\n","import PropTypes from 'prop-types';\n\nexport const tagPropType = PropTypes.oneOfType([\n  PropTypes.func,\n  PropTypes.string,\n  PropTypes.shape({ $$typeof: PropTypes.symbol, render: PropTypes.func }),\n  PropTypes.arrayOf(PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.string,\n    PropTypes.shape({ $$typeof: PropTypes.symbol, render: PropTypes.func }),\n  ]))\n]);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport styled from 'styled-components';\nimport { margin } from 'styled-system';\nimport { getMinLineHeight } from '@pixelbandito/theme';\n\nimport { tagPropType } from '../prop-types';\nimport styles from './Button.module.css';\n\nexport const getButttonStyle = ({\n  outline = false,\n  size = 'md',\n  theme,\n  variant: variantKey = 'default',\n}) => {\n  const {\n    buttons,\n    colors,\n    shared,\n    space,\n  } = theme;\n\n  const {\n    borderWidth,\n    sizes,\n    variants,\n  } = buttons;\n\n  const variant = { ...variants[variantKey] };\n\n  const getVariantColors = ({\n    contrast,\n    mode,\n    outline: variantOutline,\n    styles: variantStyles,\n  }) => {\n    const backgroundColorKey = variantStyles.keyColor || 'default';\n    const backgroundColor = colors[backgroundColorKey] || backgroundColorKey;\n    const colorKey = variantStyles.color || (mode === 'dark' ? 'black' : 'white');\n    const color = colors[colorKey] || colorKey;\n\n    if (variantOutline) {\n      return {\n        color: backgroundColor?.[`${mode}-${contrast}`] ?? backgroundColor,\n        backgroundColor: 'transparent',\n        borderColor: backgroundColor?.[`${mode}-${contrast}`] ?? backgroundColor,\n      };\n    }\n\n    return {\n      backgroundColor: backgroundColor?.[`${mode}-${contrast}`] ?? backgroundColor,\n      color: color?.[`${mode}-bg`] ?? colorKey,\n      borderColor: backgroundColor?.[`${mode}-${contrast}`] ?? backgroundColor,\n    };\n  };\n\n  const {\n    fontSize,\n    paddingH,\n    paddingV,\n  } = sizes[size];\n\n  const {\n    ratio: lineHeightRatio,\n    px: lineHeightPx,\n  } = getMinLineHeight({\n    size: fontSize,\n    space,\n  });\n\n  const lightModeStyle = {\n    default: {\n      ...getVariantColors({\n        contrast: '1',\n        mode: 'light',\n        outline,\n        styles: variant.default,\n      }),\n    },\n    ':hover': {\n      ...getVariantColors({\n        contrast: '2',\n        mode: 'light',\n        outline,\n        styles: variant[':hover'],\n      }),\n    },\n    ':focus': {\n      ...getVariantColors({\n        contrast: '2',\n        mode: 'light',\n        outline,\n        styles: variant[':focus'],\n      }),\n    },\n    ':active': {\n      ...getVariantColors({\n        contrast: '2',\n        mode: 'light',\n        outline,\n        styles: variant[':active'],\n      }),\n    },\n    ':disabled': {\n      color: getVariantColors({\n        contrast: '3',\n        mode: 'light',\n        outline,\n        styles: variant[':disabled'],\n      }),\n    },\n  };\n\n  const darkModeStyle = {\n    default: {\n      ...getVariantColors({\n        contrast: '1',\n        mode: 'dark',\n        outline,\n        styles: variant.default,\n      }),\n    },\n    ':hover': {\n      ...getVariantColors({\n        contrast: '2',\n        mode: 'dark',\n        outline,\n        styles: variant[':hover'],\n      }),\n    },\n    ':focus': {\n      ...getVariantColors({\n        contrast: '2',\n        mode: 'dark',\n        outline,\n        styles: variant[':focus'],\n      }),\n    },\n    ':active': {\n      ...getVariantColors({\n        contrast: '2',\n        mode: 'dark',\n        outline,\n        styles: variant[':active'],\n      }),\n    },\n    ':disabled': {\n      ...getVariantColors({\n        contrast: '3',\n        mode: 'dark',\n        outline,\n        styles: variant[':disabled'],\n      }),\n    },\n  };\n\n  const modeStyles = (shared.mode === 'dark' && darkModeStyle) || lightModeStyle;\n\n  return ({\n    borderWidth,\n    borderStyle: 'solid',\n    borderRadius: (theme.shared.roundness * (lineHeightPx / 2 + paddingV)) / 10,\n    paddingBottom: paddingV - borderWidth,\n    paddingLeft: paddingH - borderWidth,\n    paddingRight: paddingH - borderWidth,\n    paddingTop: paddingV - borderWidth,\n    fontSize,\n    lineHeight: lineHeightRatio,\n    transition: 'background-color 0.2s linear, border-color 0.2s linear, color 0.2s linear',\n    ...modeStyles.default,\n    ':hover': {\n      ...modeStyles[':hover'],\n    },\n    ':focus': {\n      outlineStyle: 'none',\n      outlineColor: modeStyles.default.borderColor,\n      boxShadow: `0 0 0 1px ${modeStyles.default.borderColor}, 0 0 4px 0px ${modeStyles[':focus'].borderColor}`,\n      ...modeStyles[':focus'],\n    },\n    ':active': {\n      ...modeStyles[':active'],\n    },\n    ':disabled': {\n      ...modeStyles[':disabled'],\n    },\n    '@media (prefers-color-scheme: light)': !shared.mode && {\n      ...lightModeStyle,\n    },\n    '@media (prefers-color-scheme: dark)': !shared.mode && {\n      ...darkModeStyle,\n    },\n  });\n};\n\nconst Button = ({\n  className,\n  tag: Tag,\n  ...passedProps\n}) => (\n  <Tag\n    {...passedProps}\n    className={classNames(className, styles.Button)}\n  />\n);\n\nButton.propTypes = {\n  className: PropTypes.string,\n  tag: tagPropType,\n};\n\nButton.defaultProps = {\n  className: '',\n  tag: 'button',\n};\n\nconst StyledButton = styled(Button)(\n  props => ({\n    ...getButttonStyle(props),\n  }),\n  margin,\n);\n\nexport default StyledButton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport styled from 'styled-components';\nimport { margin } from 'styled-system';\nimport { getModeStyles, getMinLineHeight } from '@pixelbandito/theme';\nimport { tagPropType } from '../prop-types';\nimport styles from './Font.module.css';\n\nexport const getFontStyle = ({\n  color = 'default',\n  contrast = '2',\n  family = 'sansSerif',\n  size = 'md',\n  weight = 'normal',\n  theme,\n}) => {\n  const {\n    ratio: lineHeightRatio,\n  } = getMinLineHeight({\n    size: theme.fonts.sizes[size],\n    space: {\n      ...theme.space,\n      xs: theme.space.sm,\n    },\n  });\n\n  const darkModeStyle = { color: theme.colors[color][`dark-${contrast}`] };\n  const lightModeStyle = { color: theme.colors[color][`light-${contrast}`] };\n\n  return ({\n    fontFamily: theme.fonts[family],\n    fontSize: theme.fonts.sizes[size],\n    fontWeight: theme.fonts.weights[weight],\n    lineHeight: lineHeightRatio,\n    ...getModeStyles({\n      darkModeStyle,\n      lightModeStyle,\n      mode: theme?.shared?.mode,\n    }),\n  });\n};\n\nconst Font = ({\n  className,\n  tag: CustomTag,\n  ...passedProps\n}) => (\n  <CustomTag\n    {...passedProps}\n    className={classNames(className, styles.Font)}\n  />\n);\n\nFont.propTypes = {\n  className: PropTypes.string,\n  tag: tagPropType,\n};\n\nFont.defaultProps = {\n  className: '',\n  tag: 'div',\n};\n\nconst StyledFont = styled(Font)(\n  props => getFontStyle(props),\n  margin,\n);\n\nexport const P = props => (\n  <StyledFont\n    className={styles.P}\n    tag=\"p\"\n    {...props}\n  />\n);\n\nexport const Small = props => (\n  <StyledFont\n    size=\"sm\"\n    tag=\"small\"\n    {...props}\n  />\n);\n\nexport const Strong = props => (\n  <StyledFont\n    tag=\"strong\"\n    weight=\"bold\"\n    {...props}\n  />\n);\n\nexport const Em = props => (\n  <StyledFont\n    tag=\"em\"\n    {...props}\n  />\n);\n\nexport const U = props => (\n  <StyledFont\n    tag=\"u\"\n    {...props}\n  />\n);\n\nexport const I = props => (\n  <StyledFont\n    tag=\"i\"\n    {...props}\n  />\n);\n\nexport const B = props => (\n  <StyledFont\n    tag=\"b\"\n    weight=\"bold\"\n    {...props}\n  />\n);\n\nexport default StyledFont;\n","import React, { useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport styled from 'styled-components';\n\nimport { tagPropType } from '../../prop-types';\nimport Font, { getFontStyle } from '../Font';\nimport styles from './Heading.module.css';\n\nexport const getHeadingFontStyle = ({\n  level = 1,\n  theme,\n}) => {\n  const levels = {\n    1: {\n      contrast: '3',\n      size: 'xl',\n      weight: 'normal',\n    },\n    2: {\n      contrast: '3',\n      size: 'lg',\n      weight: 'normal',\n    },\n    3: {\n      contrast: '3',\n      size: 'md',\n      weight: 'bold',\n    },\n    4: {\n      contrast: '2',\n      size: 'sm',\n      weight: 'bold',\n    },\n  };\n\n  return {\n    ...getFontStyle({\n      ...levels[`${level}`],\n      theme,\n    }),\n  };\n};\n\nconst Heading = ({\n  className,\n  level,\n  tag: CustomTag,\n  ...passedProps\n}) => {\n  const Tag = useMemo(() => {\n    if (CustomTag) {\n      return CustomTag;\n    }\n\n    return `h${level}`;\n  }, [CustomTag, level]);\n\n  return (\n    <Font\n      {...passedProps}\n      className={classNames(className, styles.Heading)}\n      tag={Tag}\n    />\n  );\n};\n\nHeading.propTypes = {\n  className: PropTypes.string,\n  level: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  tag: tagPropType,\n};\n\nHeading.defaultProps = {\n  className: '',\n  level: 1,\n  tag: null,\n};\n\nconst StyledHeading = styled(Heading)(\n  ({\n    level,\n    theme,\n  }) => getHeadingFontStyle({\n    level,\n    theme,\n  }),\n);\n\nexport const H1 = props => <StyledHeading {...props} level={1} />;\nexport const H2 = props => <StyledHeading {...props} level={2} />;\nexport const H3 = props => <StyledHeading {...props} level={3} />;\nexport const H4 = props => <StyledHeading {...props} level={4} />;\n\nexport default StyledHeading;\n","import React from 'react';\nimport Font from '../Font';\n\nconst Link = props => (\n  <Font\n    tag=\"a\"\n    color=\"primary\"\n    {...props}\n  />\n);\n\nexport const A = Link;\n\nexport default Link;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport styles from './Swatch.module.css';\n\nconst Swatch = ({\n  backgroundColor,\n  className,\n  color,\n  ...passedProps\n}) => (\n  <div\n    {...passedProps}\n    className={classNames(styles.Swatch, className)}\n    style={{\n      backgroundColor,\n      color,\n    }}\n  />\n);\n\nSwatch.propTypes = {\n  backgroundColor: PropTypes.string,\n  className: PropTypes.string,\n  color: PropTypes.string,\n};\n\nSwatch.defaultProps = {\n  backgroundColor: '#fff',\n  className: '',\n  color: '#000',\n};\n\nexport default Swatch;\n","import Swatch from './Swatch';\n\nexport default Swatch;\n","export const getHexOrDont = string => string;\n\nexport const getJsonOrDont = (string) => {\n  let json;\n\n  try {\n    json = JSON.parse(string);\n  } catch(e) {\n    json =  {};\n  }\n\n  return json;\n};\n\nexport const getNumberOrDont = (string) => {\n  let number;\n\n  try {\n    number = parseInt(string, 10);\n\n    if (isNaN(number)) {\n      throw new Error('not a number');\n    }\n  } catch(e) {\n    number = null;\n  }\n\n  return number\n};\n\nexport default {\n  getHexOrDont,\n  getJsonOrDont,\n  getNumberOrDont,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { Button } from '@pixelbandito/themed-ui';\nimport styles from './Control.module.css';\n\nconst Control = ({\n  className,\n  id,\n  label,\n  onChange,\n  onDelete,\n  type,\n  value,\n  ...passedProps\n}) => (\n  <div\n    {...passedProps}\n    className={classNames(className, styles.Control)}\n  >\n    <label\n      className={styles.label}\n      htmlFor={id}\n    >\n      {label || id}\n    </label>\n    {' '}\n    {onDelete && (\n      <Button\n        className={styles.delete}\n        onClick={onDelete}\n        outline\n        size=\"sm\"\n      >\n        Ⓧ\n      </Button>\n    )}\n    <input\n      className={styles.input}\n      id={id}\n      onChange={onChange}\n      type={type}\n      value={value}\n    />\n  </div>\n);\n\nControl.propTypes = {\n  className: PropTypes.string,\n  id: PropTypes.string.isRequired,\n  label: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n  onDelete: PropTypes.func,\n  type: PropTypes.string,\n  value: PropTypes.string.isRequired,\n};\n\nControl.defaultProps = {\n  className: '',\n  label: '',\n  type: 'text',\n};\n\nexport default Control;\n","import Control from './Control';\n\nexport default Control;\n","import React, { useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport colorConvert from 'color-convert';\nimport { debounce } from 'lodash-es';\n\nimport {\n  getButtons,\n  getColors,\n  getInheritedBaseColor,\n  getLuminance,\n  getSizes,\n} from '@pixelbandito/theme';\n\nimport {\n  Accordion,\n  Button,\n  Card,\n} from '@pixelbandito/themed-ui';\n\nimport Swatch from '../Swatch';\nimport { getHexOrDont, getNumberOrDont } from './utils';\nimport Control from './Control';\nimport styles from './ThemeForm.module.css';\n\nconst ThemeForm = ({\n  className,\n  theme: initTheme,\n  onChangeTheme,\n  onApplyTheme,\n}) => {\n  const [mdSize, setMdSize] = useState(initTheme.space.md);\n  const [roundness, setRoundness] = useState(initTheme.shared.roundness);\n  const [themeForm, setThemeForm] = useState(initTheme);\n  const [isAddingBaseColor, setIsAddingBaseColor] = useState(false);\n  const [newBaseColor, setNewBaseColor] = useState(initTheme.colors.default['light-1']);\n  const [newBaseColorName, setNewBaseColorName] = useState('');\n  const importInputFileRef = useRef();\n\n  useEffect(() => {\n    onChangeTheme(themeForm);\n  }, [onChangeTheme, themeForm]);\n\n  useEffect(() => {\n    setThemeForm(prevThemeForm => ({\n      ...prevThemeForm,\n      buttons: getButtons({\n        ...prevThemeForm,\n      }),\n    }));\n  }, [themeForm.colors,  themeForm.fonts, themeForm.shared.roundness,  themeForm.space]);\n\n  const handleClickApply = useCallback(() => {\n    onApplyTheme(themeForm);\n  }, [onApplyTheme, themeForm]);\n\n  const handleClickRevert = useCallback(() => {\n    setThemeForm(initTheme);\n  }, [initTheme]);\n\n  // COLORS\n  const safeBaseColors = useMemo(() => {\n    const baseColors =  Object.entries(themeForm.baseColors).reduce((result, [key, value]) => {\n      // When base colors inherit from each other, this resolves to a hex code or css color name\n      let safeValue = getInheritedBaseColor({\n        baseColors: themeForm.baseColors,\n        unsafeColor: value,\n      });\n\n      try {\n        safeValue = colorConvert.keyword.hex(safeValue).toLowerCase();\n      } catch(e) {\n        safeValue = safeValue[0] === '#' ? safeValue.substr(1) : value;\n      }\n\n      return {\n        ...result,\n        [key]: `#${safeValue}`,\n      }\n    }, {});\n\n    return baseColors;\n  }, [themeForm.baseColors]);\n\n  const handleDeleteBaseColor = useCallback(({ key }) => {\n    setThemeForm(prevThemeForm => {\n      const nextBaseColors = { ...prevThemeForm.baseColors };\n      delete nextBaseColors[key];\n\n      return ({\n        ...prevThemeForm,\n        baseColors: nextBaseColors,\n      });\n    });\n  }, []);\n\n  const handleChangeBaseColorHex = useCallback(({ value, key }) => {\n    if (key === '_new') {\n      setNewBaseColor(value);\n      return;\n    }\n\n    setThemeForm(prevThemeForm => ({\n      ...prevThemeForm,\n      baseColors: {\n        ...prevThemeForm.baseColors,\n        [key]: getHexOrDont(value)\n      },\n    }));\n  }, []);\n\n  useEffect(() => {\n    setThemeForm(prevThemeForm => ({\n      ...prevThemeForm,\n      colors: getColors({\n        ...prevThemeForm,\n      }),\n    }));\n  }, [safeBaseColors]);\n\n  const debouncedHandleChangeBaseColorHex = debounce(handleChangeBaseColorHex, 100);\n\n  const handleClickAddBaseColor = (event) => {\n    if (!newBaseColor || !newBaseColorName) {\n      return;\n    }\n\n    setIsAddingBaseColor(false);\n\n    setThemeForm(prevThemeForm => ({\n      ...prevThemeForm,\n      baseColors: {\n        ...prevThemeForm.baseColors,\n        [newBaseColorName.replace(' ', '_')]: getHexOrDont(newBaseColor),\n      },\n    }));\n\n    setNewBaseColorName('');\n  }\n\n  // FONTS\n\n  const [fontSizesCount, setFontSizesCount] = useState(Object.keys(initTheme.fonts.sizes).length);\n  const [fontSizes, setFontSizes] = useState(initTheme.fonts.sizes);\n\n  const handleChangeFontSize = useCallback(({ event, key }) => {\n    const nextSizes = {\n      ...fontSizes,\n      [key]: getNumberOrDont(event.target.value),\n    };\n\n    setFontSizes(nextSizes);\n\n    setThemeForm(prevThemeForm => ({\n      ...prevThemeForm,\n      fonts: {\n        ...themeForm.fonts,\n        sizes: nextSizes,\n      },\n    }));\n  }, [fontSizes, themeForm]);\n\n\n  const handleChangeFontSizesCount = useCallback(e => {\n    const nextFontSizesCount = getNumberOrDont(e.target.value);\n    let nextSizes = getSizes({ count: nextFontSizesCount });\n\n    nextSizes = Object.keys(nextSizes).reduce((result, sizeKey) => {\n      return {\n        ...result,\n        [sizeKey]: fontSizes[sizeKey] || Object.values(fontSizes)[0],\n      };\n    }, {});\n\n    setFontSizes(nextSizes);\n    setFontSizesCount(nextFontSizesCount);\n  }, [fontSizes]);\n\n  const handleChangeMdSize = e => {\n    const nextMdSize = getNumberOrDont(e.target.value);\n\n    setMdSize(nextMdSize);\n\n    setThemeForm(prevThemeForm => ({\n      ...prevThemeForm,\n      space: getSizes({\n        count: 5,\n        mdSize: nextMdSize,\n      }),\n    }));\n  };\n\n  const roundnessMax = 10;\n  const roundnessMin = 0;\n\n  const handleChangeRoundness = e => {\n    let nextRoundness = getNumberOrDont(e.target.value)\n    nextRoundness = Math.min(nextRoundness, roundnessMax);\n    nextRoundness = Math.max(nextRoundness, roundnessMin);\n\n    setRoundness(nextRoundness);\n\n    setThemeForm(prevThemeForm => ({\n      ...prevThemeForm,\n      shared: {\n        ...prevThemeForm.shared,\n        roundness: nextRoundness,\n      },\n    }));\n  };\n\n  const handleClickImport = useCallback(() => {\n    if (importInputFileRef.current) {\n      importInputFileRef.current.click();\n    }\n  }, []);\n\n  const handleChangeImport = useCallback(e => {\n    const reader = new FileReader();\n    reader.readAsText(e.target.files[0]);\n\n    reader.onload = e => {\n      try {\n        setThemeForm(JSON.parse(e.target.result))\n      } catch (e) {\n        console.warn('Couldn\\'t read theme file.', e.message);\n      }\n    }\n  }, []);\n\n  return (\n    <form className={classNames(className, styles.ThemeForm)}>\n      <Accordion\n        defaultIsOpen\n        head=\"Shared styles\"\n        style={{\n          borderBottomWidth: '0',\n          borderRadius: '0',\n        }}\n      >\n        <Control\n          id=\"mdSize\"\n          onChange={handleChangeMdSize}\n          type=\"number\"\n          value={`${mdSize}`}\n        />\n        <Control\n          id=\"roundness\"\n          onChange={handleChangeRoundness}\n          type=\"number\"\n          min=\"0\"\n          max=\"10\"\n          step=\"1\"\n          value={`${roundness}`}\n        />\n      </Accordion>\n      <Accordion\n        defaultIsOpen\n        head=\"Colors\"\n        style={{\n          borderBottomWidth: '0',\n          borderRadius: '0',\n        }}\n      >\n        <section>\n          <h4>Neutral colors</h4>\n          {safeBaseColors.white && (\n            <Control\n              id=\"white\"\n              label=\"white\"\n              onChange={event => debouncedHandleChangeBaseColorHex({ value: event.target.value, key: 'white' })}\n              type=\"color\"\n              value={safeBaseColors.white}\n            />\n          )}\n          {safeBaseColors.black && (\n            <Control\n              id=\"black\"\n              label=\"black\"\n              onChange={event => debouncedHandleChangeBaseColorHex({ value: event.target.value, key: 'black' })}\n              type=\"color\"\n              value={safeBaseColors.black}\n            />\n          )}\n          {themeForm.colors.default && (\n            <div className={styles.swatches}>\n              {\n                Object.entries(themeForm.colors.default)\n                .sort(([variantKeyA ,hexA], [variantKeyB ,hexB]) => variantKeyB.charCodeAt(0) + getLuminance(hexB) - variantKeyA.charCodeAt(0) - getLuminance(hexA))\n                .filter(([variantKey]) => variantKey !== 'base')\n                .map(([variantKey, hex], i) => (\n                  <Swatch\n                    key={variantKey}\n                    className={styles.swatch}\n                    color={\n                      getLuminance(hex) > 0.5 ?\n                        themeForm.colors.default['dark-bg'] :\n                        themeForm.colors.default['light-bg']\n                    }\n                    backgroundColor={hex}\n                  >\n                    {variantKey}\n                  </Swatch>\n                ))\n              }\n            </div>\n          )}\n        </section>\n        <section>\n          <h4>Semantic colors</h4>\n          {Object.entries(themeForm.colors).filter(([key, value]) => key !== 'default').map(([key, value], i) => {\n            return (\n              <div key={key}>\n                <Control\n                  id={`semanticColor-${key}`}\n                  key={key}\n                  label={key}\n                  onChange={event => debouncedHandleChangeBaseColorHex({ value: event.target.value, key })}\n                  onDelete={key !== 'primary' ? event => handleDeleteBaseColor({ key }) : undefined}\n                  type=\"color\"\n                  value={`${value.base}`}\n                />\n                {themeForm.colors[key] && (\n                  <div className={styles.swatches}>\n                    {\n                      Object.entries(themeForm.colors[key])\n                      .sort(([variantKeyA ,hexA], [variantKeyB ,hexB]) => variantKeyB.charCodeAt(0) + getLuminance(hexB) - variantKeyA.charCodeAt(0) - getLuminance(hexA))\n                      .filter(([variantKey]) => variantKey !== 'base')\n                      .map(([variantKey, hex], i) => (\n                        <Swatch\n                          key={variantKey}\n                          className={styles.swatch}\n                          color={\n                            getLuminance(hex) > 0.5 ?\n                              themeForm.colors[key]['dark-bg'] :\n                              themeForm.colors[key]['light-bg']\n                          }\n                          backgroundColor={hex}\n                        >\n                          {variantKey}\n                        </Swatch>\n                      ))\n                    }\n                  </div>\n                )}\n              </div>\n              );\n          })}\n          <div>\n            <Button\n              onClick={() => setIsAddingBaseColor(true)}\n              type=\"button\"\n            >\n              Add another color\n            </Button>\n            {isAddingBaseColor && (\n              <>\n                <Control\n                  id=\"_newBaseColorName\"\n                  onChange={event => setNewBaseColorName(event.target.value)}\n                  type=\"text\"\n                  value={newBaseColorName}\n                />\n                <Control\n                  id=\"_newBaseColor\"\n                  label=\"Color\"\n                  onChange={event => debouncedHandleChangeBaseColorHex({ value: event.target.value, key: '_new' })}\n                  type=\"color\"\n                  value={newBaseColor}\n                />\n                <Button\n                  disabled={Object.keys(themeForm.baseColors).includes(newBaseColorName)}\n                  onClick={handleClickAddBaseColor}\n                  type=\"button\"\n                >\n                  Confirm\n                </Button>\n                {' '}\n                <Button\n                  onClick={() => setIsAddingBaseColor(false)}\n                  outline\n                  type=\"button\"\n                >\n                  Cancel\n                </Button>\n              </>\n            )}\n          </div>\n        </section>\n      </Accordion>\n      <Accordion\n        defaultIsOpen\n        head=\"Shared styles\"\n        style={{\n          borderBottomWidth: '0',\n          borderRadius: '0',\n        }}\n      >\n        <Control\n          id=\"fontSizesCount\"\n          onChange={handleChangeFontSizesCount}\n          type=\"number\"\n          value={`${fontSizesCount}`}\n        />\n        <section>\n          <h4>Font sizes</h4>\n          {Object.entries(fontSizes).map(([key, value]) => (\n            <Control\n              id={`fontSize-${key}`}\n              key={key}\n              label={key}\n              onChange={event => handleChangeFontSize({ event, key })}\n              type=\"number\"\n              value={`${value}`}\n            />\n          ))}\n        </section>\n      </Accordion>\n      <Card style={{ borderRadius: '0' }}>\n        <Card.Head variant=\"default\">\n          <div className={styles.actions}>\n            <Button\n              outline\n              onClick={handleClickRevert}\n              type=\"button\"\n            >\n              Revert\n            </Button>\n            {' '}\n            <Button\n              onClick={handleClickApply}\n              type=\"button\"\n              variant=\"primary\"\n            >\n              Apply\n            </Button>\n            <br />\n            <br />\n            <Button\n              download=\"theme.json\"\n              href={`data:text/json;charset=utf-8,${encodeURIComponent(JSON.stringify(themeForm))}`}\n              outline\n              size=\"sm\"\n              style={{\n                display: 'inline-block',\n              }}\n              tag=\"a\"\n            >\n              Export JSON\n            </Button>\n            {' '}\n            <input\n              onChange={handleChangeImport}\n              ref={importInputFileRef}\n              style={{\n                fontSize: '0',\n                height: '0',\n                left: '-100vw',\n                opacity: '0',\n                position: 'absolute',\n                top: '-100vh',\n                width: '0',\n                zIndex: '-1',\n              }}\n              tabIndex=\"-1\"\n              type=\"file\"\n            />\n            <Button\n              onClick={handleClickImport}\n              outline\n              size=\"sm\"\n              type=\"button\"\n            >\n              Import JSON ...\n            </Button>\n          </div>\n        </Card.Head>\n      </Card>\n    </form>\n  );\n}\n\nThemeForm.propTypes = {\n  className: PropTypes.string,\n};\n\nThemeForm.defaultProps = {\n  className: '',\n};\n\n\nexport default ThemeForm;\n","import ThemeForm from './ThemeForm';\n\nexport default ThemeForm;\n","import React, { useContext, useMemo, useState } from 'react';\nimport styled, { ThemeContext } from 'styled-components';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\n\nimport {\n  A,\n  Accordion,\n  Button,\n  Card,\n  Font,\n  Em,\n  H1,\n  H2,\n  H3,\n  H4,\n  P,\n  Small,\n  Strong,\n} from '@pixelbandito/themed-ui';\n\nimport styles from './Examples.module.css';\n\nconst Examples = ({ className }) => {\n  const theme = useContext(ThemeContext);\n  const [buttonVariantIndex, setButtonVariantIndex] = useState(0);\n  const [cardVariantIndex, setCardVariantIndex] = useState(0);\n\n  const availableVariants = useMemo(\n    () => Object.keys(theme.baseColors).filter(key => !['black', 'white'].includes(key)),\n    [theme.baseColors],\n  );\n\n  const availableCardVariants = useMemo(() => [...availableVariants, undefined], [availableVariants]);\n\n  const cardVariant = availableCardVariants[cardVariantIndex];\n\n  const handleIncrementCardVariantIndex = () => {\n    setCardVariantIndex(prevButtonVariantIndex => (prevButtonVariantIndex + 1) % availableCardVariants.length);\n  }\n\n  const availableButtonVariants = useMemo(\n    () => Object.keys(theme.buttons.variants),\n    [theme.buttons.variants],\n  );\n\n  const buttonVariant = availableButtonVariants[buttonVariantIndex];\n\n  const handleIncrementButtonVariantIndex = () => {\n    setButtonVariantIndex(prevButtonVariantIndex => (prevButtonVariantIndex + 1) % availableButtonVariants.length);\n  }\n\n  return (\n    <div className={classNames(className, styles.Examples)}>\n      <A href=\"#heading\">Link</A>\n      <H1\n        id=\"heading-1\"\n        mb=\"md\"\n      >\n        Heading 1\n      </H1>\n      <H2\n        id=\"heading-2\"\n        mb=\"md\"\n      >\n        Heading 2\n      </H2>\n      <H3\n        id=\"heading-3\"\n        mb=\"md\"\n      >\n        Heading 3\n      </H3>\n      <H4\n        id=\"heading-4\"\n        mb=\"md\"\n      >\n        Heading 4\n      </H4>\n      <Button\n        mb=\"md\"\n        mr=\"md\"\n        onClick={handleIncrementButtonVariantIndex}\n        size=\"sm\"\n        variant={buttonVariant}\n      >\n        Button ({buttonVariant})\n      </Button>\n      {' '}\n      <Button\n        mb=\"md\"\n        mr=\"md\"\n        onClick={handleIncrementButtonVariantIndex}\n        variant={buttonVariant}\n      >\n        Button ({buttonVariant})\n      </Button>\n      {' '}\n      <Button\n        mb=\"md\"\n        mr=\"md\"\n        onClick={handleIncrementButtonVariantIndex}\n        size=\"lg\"\n        variant={buttonVariant}\n      >\n        Button ({buttonVariant})\n      </Button>\n      {' '}\n      <input value=\"Input\" onChange={() => {}}></input>\n      <P\n        mb=\"md\"\n        mt=\"md\"\n      >\n        This paragraph has <Strong>strong</Strong>, <Em>emphasized</Em>, and <Small>small</Small> text in it.\n      </P>\n      <P\n        mb=\"md\"\n        mt=\"md\"\n      >\n        <Font contrast=\"1\" tag=\"span\">High contrast text!</Font>{' '}\n        <Font contrast=\"2\" tag=\"span\">Medium contrast text!</Font>{' '}\n        <Font contrast=\"3\" tag=\"span\">Lower contrast text!</Font>\n      </P>\n      <Font tag=\"div\">\n        <A href=\"#heading\">Link</A>\n        <Card\n          mb=\"md\"\n          mt=\"md\"\n          onClick={handleIncrementCardVariantIndex}\n          variant={cardVariant}\n        >\n          <Card.Head variant={cardVariant}>\n            Card head {cardVariant && (<>({cardVariant})</>)}\n          </Card.Head>\n          <Card.Body variant={cardVariant}>\n            Card body\n          </Card.Body>\n          <Card.Foot variant={cardVariant}>\n            Card foot\n          </Card.Foot>\n        </Card>\n        <Accordion\n          mb=\"md\"\n          mt=\"md\"\n        >\n          Accordion contents\n        </Accordion>\n      </Font>\n    </div>\n  );\n};\n\nExamples.propTypes = {\n  className: PropTypes.string,\n};\n\nExamples.defaultProps = {\n  className: '',\n};\n\nconst StyledExamples = styled(Examples)(\n  ({\n    theme,\n  }) => ({\n    backgroundColor: (theme.shared.mode === 'dark' && theme.colors.default['dark-bg']) || theme.colors.default['light-bg'] ,\n    padding: theme.space.lg,\n    '@media (prefers-color-scheme: dark)': !theme.shared.mode && {\n      backgroundColor: theme.colors.default['dark-bg'],\n    },\n    '@media (prefers-color-scheme: light)': !theme.shared.mode && {\n      backgroundColor: theme.colors.default['light-bg'],\n    },\n  })\n);\n\nexport default StyledExamples;\n","import Examples from './Examples';\n\nexport default Examples;\n","import React, { useCallback, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Mousetrap from 'mousetrap';\nimport styles from './GridOverlay.module.css';\n\n\nconst GridOverlay = () => {\n  const [isVisible, setIsVisible] = useState(false);\n\n  const toggleIsVisible = useCallback(() => {\n    setIsVisible(!isVisible);\n  }, [isVisible]);\n\n  useEffect(() => {\n    Mousetrap.bind('.', toggleIsVisible);\n\n    return () => {\n      Mousetrap.unbind('.', toggleIsVisible);\n    };\n  }, [toggleIsVisible]);\n\n  if (!isVisible) {\n    return null;\n  }\n\n  return (\n    <div className={styles.GridOverlay} />\n  );\n};\n\nGridOverlay.propTypes = {\n  className: PropTypes.string,\n};\n\nGridOverlay.defaultProps = {\n  className: '',\n};\n\nexport default GridOverlay;\n","import GridOverlay from './GridOverlay';\n\nexport default GridOverlay;\n","import React, { useCallback, useState } from 'react';\nimport { ThemeProvider } from 'styled-components'\nimport classNames from 'classnames';\n\nimport { defaultTheme } from '@pixelbandito/theme';\n\nimport './App.css';\nimport styles from './App.module.css';\nimport ThemeForm from './ThemeForm';\nimport Examples from './Examples';\nimport GridOverlay from './GridOverlay';\n\nfunction App() {\n  const [theme, setTheme] = useState(defaultTheme);\n  const [themePreview, setThemePreview] = useState(theme);\n  const [sidebarIsExpanded, setSidebarIsExpanded] = useState(true);\n\n  const handleChangeThemePreview = useCallback((theme) => {\n    setThemePreview(theme);\n  }, []);\n\n  const handleApplyThemePreview = useCallback((theme) => {\n    setTheme(themePreview);\n  }, [themePreview]);\n\n  return (\n    <ThemeProvider theme={theme}>\n      <div className={classNames('App', styles.App, {\n        [styles.withSidebarExpanded]: sidebarIsExpanded,\n      })}>\n        <div className={styles.sidebar}>\n          <div className={styles.form}>\n            <ThemeForm\n              theme={theme}\n              onChangeTheme={handleChangeThemePreview}\n              onApplyTheme={handleApplyThemePreview}\n            />\n          </div>\n          <button\n            className={styles.sideBarToggleStripe}\n            onClick={() => setSidebarIsExpanded(prev => !prev)}\n            type=\"button\"\n            style={{\n              backgroundColor: theme.colors.default['dark-1'],\n            }}\n          />\n          <button\n            className={styles.sideBarToggleButton}\n            onClick={() => setSidebarIsExpanded(prev => !prev)}\n            type=\"button\"\n            style={{\n              borderColor: theme.colors.default['dark-1'],\n              color: theme.colors.default['dark-3']\n            }}\n          >\n            ↔\n          </button>\n        </div>\n        <div className={styles.example}>\n          <div>\n            <ThemeProvider theme={themePreview} >\n              <Examples />\n            </ThemeProvider>\n            <ThemeProvider theme={{\n                ...themePreview,\n                shared: {\n                  ...themePreview.shared,\n                  mode: 'dark',\n                },\n              }} >\n              <Examples />\n            </ThemeProvider>\n            <ThemeProvider theme={{\n                ...themePreview,\n                shared: {\n                  ...themePreview.shared,\n                  mode: 'light',\n                },\n              }} >\n              <Examples />\n            </ThemeProvider>\n          </div>\n        </div>\n      </div>\n      <GridOverlay />\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport '@pixelbandito/themed-ui/dist/index.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}