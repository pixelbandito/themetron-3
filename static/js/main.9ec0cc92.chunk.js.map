{"version":3,"sources":["Examples/Examples.module.css","App.module.css","ThemeForm/Control/Control.module.css","ThemeForm/ColorViz/ColorViz.module.css","ThemeForm/ContrastRatios/ContrastRatios.module.css","ThemeForm/ThemeForm.module.css","Button/Button.module.css","ThemeForm/Swatch/Swatch.module.css","ThemeForm/ColorRamp/ColorRamp.module.css","GridOverlay/GridOverlay.module.css","theme-utils.mjs","theme.mjs","Button/Button.js","Button/index.js","ThemeForm/Control/Control.js","ThemeForm/Control/index.js","utils/colors.js","ThemeForm/Swatch/Swatch.js","ThemeForm/Swatch/index.js","ThemeForm/ContrastRatios/ContrastRatios.js","ThemeForm/ContrastRatios/index.js","ThemeForm/ThemeForm.js","ThemeForm/index.js","ThemeForm/ColorRamp/ColorRamp.js","ThemeForm/ColorRamp/index.js","ThemeForm/ColorViz/ColorViz.js","ThemeForm/ColorViz/index.js","Examples/Examples.js","Examples/index.js","GridOverlay/GridOverlay.js","GridOverlay/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","getButtons","customColors","colors","customFonts","fonts","customSpacing","spacing","borderWidth","roundness","shine","sizes","sm","fontSize","paddingH","paddingV","xs","md","lg","variants","default","backgroundColor","neutral","color","white","hover","focus","active","disabled","primary","success","info","warning","danger","getSizeLabelFromIndex","sizeIndex","smSizeLabels","lgSizeLabels","length","getSizes","offset","count","customSizes","lgCount","mdSize","smCount","label","size","Error","Math","floor","Array","fill","map","i","pow","reduce","result","baseSize","black","shared","elevation","inverted","getShared","sansSerif","serif","xl","weights","normal","bold","buttons","getButttonStyle","outline","theme","variant","idealSize","ceil","px","abs","ratio","getMinLineHeight","lineHeightRatio","borderColor","borderStyle","borderRadius","paddingBottom","paddingLeft","paddingRight","paddingTop","lineHeight","Button","className","passedProps","classNames","styles","defaultProps","styled","Control","id","onChange","type","value","htmlFor","input","getContrastRatio","hexA","hexB","luminanceA","luminanceB","getLuminance","sort","darker","toFixed","hex","rgb2","colorConvert","rgb","channel","c","getTargetLuminanceViaHsl","attempt","initHsl","targetLuminance","luminance","maxAttempts","jumpSize","prevHsl","hsl","safeInitHsl","undefined","setHsl","l","max","min","getTargetContrastViaHsl","baseHex","targetContrastRatio","contrastRatio","nextValues","console","log","getTargetContrastViaHsv","warn","hsv","darken","setHsv","v","getTargetContrastViaLab","lab","setLab","h","s","h2","s2","l2","v2","a","b","a2","b2","getHexFromHexOrName","safeValue","keyword","toLowerCase","e","substr","window","pxbColors","Swatch","style","ContrastRatios","ramps","getNumberOrDont","string","number","parseInt","isNaN","ThemeForm","initTheme","onChangeTheme","onApplyTheme","useState","setMdSize","themeForm","setThemeForm","useEffect","handleClickApply","useCallback","handleClickRevert","safeColors","useMemo","Object","entries","key","setColors","handleChangeColor","event","target","nextColors","nextTheme","keys","fontSizesCount","setFontSizesCount","fontSizes","setFontSizes","handleChangeFontSize","nextSizes","nextFonts","handleChangeFontSizesCount","nextFontSizesCount","sizeKey","values","handleChangeMdSize","nextMdSize","contrastRatios","onClick","ColorRamp","initColor","mode","luminances","themeContext","useContext","ThemeContext","getTargetContrast","getter","getTargetLuminance","reverse","baseColor","display","flexFlow","alignItems","height","border","background","flex","justifyContent","padding","ColorViz","safeColor","rows","row","ri","columns","column","ci","adjustedColor","colorPoint","x","y","stats","position","gridTemplateRows","gridTemplateColumns","title","top","left","boxShadow","width","marginLeft","marginTop","ColorExample","name","isExpanded","setIsExpanded","safeHex","checked","marginRight","swatch","subtitle","margin","Examples","setColorMode","toUpperCase","href","card","cardHead","cardBody","cardFoot","filter","GridOverlay","isVisible","setIsVisible","toggleIsVisible","Mousetrap","bind","unbind","App","defaultTheme","setTheme","themePreview","setThemePreview","handleChangeThemePreview","handleApplyThemePreview","form","example","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"yGACAA,EAAOC,QAAU,CAAC,SAAW,2BAA2B,OAAS,2B,gBCAjED,EAAOC,QAAU,CAAC,IAAM,iBAAiB,KAAO,kBAAkB,QAAU,uB,gBCA5ED,EAAOC,QAAU,CAAC,QAAU,yBAAyB,MAAQ,uBAAuB,MAAQ,yB,gBCA5FD,EAAOC,QAAU,CAAC,SAAW,6B,kBCA7BD,EAAOC,QAAU,CAAC,eAAiB,uCAAuC,MAAQ,gC,gBCAlFD,EAAOC,QAAU,CAAC,UAAY,6BAA6B,eAAiB,oC,oBCA5ED,EAAOC,QAAU,CAAC,OAAS,yB,oBCA3BD,EAAOC,QAAU,CAAC,OAAS,yB,gBCA3BD,EAAOC,QAAU,CAAC,UAAY,+B,gBCA9BD,EAAOC,QAAU,CAAC,YAAc,mC,yNCDnBC,EAAa,SAAC,GAAD,IAAWC,EAAX,EAAGC,OAA6BC,EAAhC,EAAyBC,MAA6BC,EAAtD,EAA6CC,QAA7C,MAA2E,CACpGC,YAAa,EACbC,UAAW,GACXC,MAAO,EACPC,MAAO,CACNC,GAAI,CACHC,SAAUT,EAAYO,MAAMC,GAC5BE,SAAUR,EAAcM,GACxBG,SAAUT,EAAcU,IAEzBC,GAAI,CACHJ,SAAUT,EAAYO,MAAMM,GAC5BH,SAAUR,EAAcW,GACxBF,SAAUT,EAAcM,IAEzBM,GAAI,CACHL,SAAUT,EAAYO,MAAMO,GAC5BJ,SAAUR,EAAcW,GACxBF,SAAUT,EAAcM,KAG1BO,SAAU,CACTC,QAAS,CACRC,gBAAiBnB,EAAaoB,QAC9BC,MAAOrB,EAAasB,MACpBC,MAAO,CACNJ,gBAAiBnB,EAAaoB,QAC9BC,MAAOrB,EAAasB,OAErBE,MAAO,CACNL,gBAAiBnB,EAAaoB,QAC9BC,MAAOrB,EAAasB,OAErBG,OAAQ,CACPN,gBAAiBnB,EAAaoB,QAC9BC,MAAOrB,EAAasB,OAErBI,SAAU,CACTP,gBAAiBnB,EAAaoB,QAC9BC,MAAOrB,EAAasB,QAGtBK,QAAS,CACRR,gBAAiBnB,EAAa2B,QAC9BN,MAAOrB,EAAasB,MACpBC,MAAO,CACNJ,gBAAiBnB,EAAa2B,QAC9BN,MAAOrB,EAAasB,OAErBE,MAAO,CACNL,gBAAiBnB,EAAa2B,QAC9BN,MAAOrB,EAAasB,OAErBG,OAAQ,CACPN,gBAAiBnB,EAAa2B,QAC9BN,MAAOrB,EAAasB,OAErBI,SAAU,CACTP,gBAAiBnB,EAAa2B,QAC9BN,MAAOrB,EAAasB,QAGtBM,QAAS,CACRT,gBAAiBnB,EAAa4B,QAC9BP,MAAOrB,EAAasB,MACpBC,MAAO,CACNJ,gBAAiBnB,EAAa4B,QAC9BP,MAAOrB,EAAasB,OAErBE,MAAO,CACNL,gBAAiBnB,EAAa4B,QAC9BP,MAAOrB,EAAasB,OAErBG,OAAQ,CACPN,gBAAiBnB,EAAa4B,QAC9BP,MAAOrB,EAAasB,OAErBI,SAAU,CACTP,gBAAiBnB,EAAa4B,QAC9BP,MAAOrB,EAAasB,QAGtBO,KAAM,CACLV,gBAAiBnB,EAAa6B,KAC9BR,MAAOrB,EAAasB,MACpBC,MAAO,CACNJ,gBAAiBnB,EAAa6B,KAC9BR,MAAOrB,EAAasB,OAErBE,MAAO,CACNL,gBAAiBnB,EAAa6B,KAC9BR,MAAOrB,EAAasB,OAErBG,OAAQ,CACPN,gBAAiBnB,EAAa6B,KAC9BR,MAAOrB,EAAasB,OAErBI,SAAU,CACTP,gBAAiBnB,EAAa6B,KAC9BR,MAAOrB,EAAasB,QAGtBF,QAAS,CACRD,gBAAiBnB,EAAaoB,QAC9BC,MAAOrB,EAAasB,MACpBC,MAAO,CACNJ,gBAAiBnB,EAAaoB,QAC9BC,MAAOrB,EAAasB,OAErBE,MAAO,CACNL,gBAAiBnB,EAAaoB,QAC9BC,MAAOrB,EAAasB,OAErBG,OAAQ,CACPN,gBAAiBnB,EAAaoB,QAC9BC,MAAOrB,EAAasB,OAErBI,SAAU,CACTP,gBAAiBnB,EAAaoB,QAC9BC,MAAOrB,EAAasB,QAGtBQ,QAAS,CACRX,gBAAiBnB,EAAa8B,QAC9BT,MAAOrB,EAAasB,MACpBC,MAAO,CACNJ,gBAAiBnB,EAAa8B,QAC9BT,MAAOrB,EAAasB,OAErBE,MAAO,CACNL,gBAAiBnB,EAAa8B,QAC9BT,MAAOrB,EAAasB,OAErBG,OAAQ,CACPN,gBAAiBnB,EAAa8B,QAC9BT,MAAOrB,EAAasB,OAErBI,SAAU,CACTP,gBAAiBnB,EAAa8B,QAC9BT,MAAOrB,EAAasB,QAGtBS,OAAQ,CACPZ,gBAAiBnB,EAAa+B,OAC9BV,MAAOrB,EAAasB,MACpBC,MAAO,CACNJ,gBAAiBnB,EAAa+B,OAC9BV,MAAOrB,EAAasB,OAErBE,MAAO,CACNL,gBAAiBnB,EAAa+B,OAC9BV,MAAOrB,EAAasB,OAErBG,OAAQ,CACPN,gBAAiBnB,EAAa+B,OAC9BV,MAAOrB,EAAasB,OAErBI,SAAU,CACTP,gBAAiBnB,EAAa+B,OAC9BV,MAAOrB,EAAasB,WA4BXU,EAAwB,SAAAC,GACpC,IAAMC,EAAe,CAAC,KAAM,MACtBC,EAAe,CAAC,KAAM,MAG5B,OAAIF,EAAY,GACV,EAAIA,GAAaC,EAAaE,OAC3BF,GAAc,EAAID,EAAY,GAGhC,GAAN,QAAW,EAAIA,EAAY,GAA3B,OAA+BC,EAAaA,EAAaE,OAAS,IAG/DH,EAAY,EACXA,GAAaE,EAAaC,OACtBD,EAAaF,EAAY,GAG3B,GAAN,OAAUA,EAAY,GAAtB,OAA0BE,EAAaA,EAAaC,OAAS,IAfxC,MAqBVC,EAAW,SAAC,GAMlB,IACFC,EANJC,EAKK,EALLA,MAKK,KAJLC,YAIK,EAHLC,gBAGK,MAHK,EAGL,MAFLC,cAEK,MAFI,KAEJ,MADLC,eACK,MADK,EACL,EAGDlC,EAAQ,CAAC,CACZmC,MAAO,KACPC,KAAMH,IAGP,GAAIH,EAAO,CACV,GAAIA,EAAQ,EACX,MAAM,IAAIO,MAAM,4BAGjBR,EAASS,KAAKC,MAAMT,EAAQ,GAC5B9B,EAAQ,IAAIwC,MAAMV,GAAOW,KAAK,MAAMC,KAAI,SAACN,EAAMO,GAAP,OAAaA,EAAId,SACnD,MAAIG,GAAW,GAAKE,GAAW,GAIrC,MAAM,IAAIG,MAAM,oDAHhBR,EAASK,EACTlC,EAAQ,IAAIwC,MAAM,EAAIR,EAAUE,GAASO,KAAK,MAAMC,KAAI,SAACN,EAAMO,GAAP,OAAaA,EAAId,KAc1E,OATA7B,EAAQA,EAAM0C,KAAI,SAAAlB,GAMjB,MALW,CACVW,MAAOZ,EAAsBC,GAC7BY,KAAMH,EAASK,KAAKM,IAAI,EAAGpB,QAMhBqB,QAAO,SAACC,EAAQV,GAAT,sBAChBU,EADgB,eAElBV,EAAKD,MAAQC,EAAKA,SAChB,KCvPCxC,EAAUgC,EAAS,CAAEE,MAAO,EAAGG,OAAQc,KAEvCvD,EAAS,CACdqB,MAAO,QACPmC,MAAO,UACP9B,QAAS,OACTC,QAAS,QACTC,KAAM,YACNT,QAAS,OACTU,QAAS,SACTC,OAAQ,OAGH2B,EDiKmB,SAAC,GAAD,IAAW1D,EAAX,EAAGC,OAAH,MAA+B,CACvDkB,gBAAiBnB,EAAasB,MAC9BD,MAAOrB,EAAayD,MACpBE,UAAW,EACXC,UAAU,EACVrD,UAAW,EACXC,MAAO,GCvKOqD,CAAU,CAAE5D,WAErBE,EAAQ,CACb2D,UAAW,aACXC,MAAO,QACPtD,MAAO,CACNK,GAAI,GACJJ,GAAI,GACJK,GAAI,GACJC,GAAI,GACJgD,GAAI,IAELC,QAAS,CACRC,OAAQ,IACRC,KAAM,MA8CO,GACdC,QA3CerE,EAAW,CAAEE,SAAQE,QAAOE,YA4C3CJ,SACAE,QACAuD,SACArD,W,wDC3EYgE,EAAkB,SAAC,GAKzB,IAAD,IAJJC,eAII,aAHJzB,YAGI,MAHG,KAGH,EAFJ0B,EAEI,EAFJA,MAEI,IADJC,eACI,MADM,UACN,EAEFJ,EAEEG,EAFFH,QACA/D,EACEkE,EADFlE,QAIAC,EAIE8D,EAJF9D,YACAC,EAGE6D,EAHF7D,UACAE,EAEE2D,EAFF3D,MATE,EAWA2D,EADFnD,SAOWuD,GAHXrD,EAdE,EAcFA,gBACAE,EAfE,EAeFA,MACAE,EAhBE,EAgBFA,MAhBE,EAuBAd,EAAMoC,GAHRlC,EApBE,EAoBFA,SACAC,EArBE,EAqBFA,SACAC,EAtBE,EAsBFA,SAtBE,EFyJ0B,SAAC,GAAuB,IAArBgC,EAAoB,EAApBA,KAAMxC,EAAc,EAAdA,QAClCoE,EAAmB,IAAP5B,EACZG,EAAQD,KAAKC,MAAMyB,EAAYpE,EAAQS,IAAMT,EAAQS,GACrD4D,EAAO3B,KAAK2B,KAAKD,EAAYpE,EAAQS,IAAMT,EAAQS,GACnD6D,EAAK5B,KAAK6B,IAAIH,EAAYzB,IAAUD,KAAK6B,IAAIH,EAAYC,GAAQ1B,EAAQ0B,EAG/E,MAAO,CACNC,KACAE,MAJaF,EAAK9B,GElIdiC,CAAiB,CACnBjC,KAAMlC,EACNN,YAJO0E,EA1BL,EA0BFF,MAOF,MAAQ,CACNxD,MAAOiD,EAAUnD,EAAkBE,EACnCF,gBAAiBmD,EAAUjD,EAAQF,EACnC6D,YAAa7D,EACbb,cACA2E,YAAa,QACbC,aAAc3E,GAvCZ,EA2BFoE,GAY0C,EAAI9D,GAC9CsE,cAAetE,EAAWP,EAC1B8E,YAAaxE,EAAWN,EACxB+E,aAAczE,EAAWN,EACzBgF,WAAYzE,EAAWP,EACvBK,SAAUA,EACV4E,WAAYR,EACZ,SAAU,CACR1D,MAAOiD,EAAU/C,EAAMJ,gBAAkBI,EAAMF,MAC/CF,gBAAiBmD,EAAU/C,EAAMF,MAAQE,EAAMJ,gBAC/C6D,YAAazD,EAAMJ,mBAKnBqE,EAAS,SAAC,GAAD,IACbC,EADa,EACbA,UAGGC,GAJU,EAEb9B,SAFa,EAGbU,QAHa,0DAMb,4CACMoB,EADN,CAEED,UAAWE,IAAWF,EAAWG,IAAOJ,YAQ5CA,EAAOK,aAAe,CACpBJ,UAAW,IAGb,ICpFeD,EDoFMM,YAAON,EAAPM,EACnB,YAKO,IAJLxB,EAII,EAJJA,QACAzB,EAGI,EAHJA,KACA0B,EAEI,EAFJA,MACAC,EACI,EADJA,QASA,OAPoBH,EAAgB,CAClCC,UACAzB,OACA0B,QACAC,e,iBE5FAuB,EAAU,SAAC,GAAD,IACdN,EADc,EACdA,UACAO,EAFc,EAEdA,GACApD,EAHc,EAGdA,MACAqD,EAJc,EAIdA,SACAC,EALc,EAKdA,KACAC,EANc,EAMdA,MACGT,EAPW,2EASd,yCACMA,EADN,CAEED,UAAWE,IAAWF,EAAWG,IAAOG,WAExC,2BACEN,UAAWG,IAAOhD,MAClBwD,QAASJ,GAERpD,GAASoD,GAEZ,2BACEP,UAAWG,IAAOS,MAClBL,GAAIA,EACJC,SAAUA,EACVC,KAAMA,EACNC,MAAOA,MAcbJ,EAAQF,aAAe,CACrBJ,UAAW,GACX7C,MAAO,GACPsD,KAAM,QAGOH,IC/CAA,ED+CAA,EE/CFO,EAAmB,SAAC,GAA4C,IAA1CC,EAAyC,EAAzCA,KAAMC,EAAmC,EAAnCA,KAAMC,EAA6B,EAA7BA,WAAYC,EAAiB,EAAjBA,WAAiB,EAGhD,CAF1BD,EAAaA,GAA6B,IAAfA,EAAmBA,EAAaE,EAAaJ,GACxEG,EAAaA,GAA6B,IAAfA,EAAmBA,EAAaC,EAAaH,IACrBI,OAHuB,mBAGnEC,EAHmE,KAK1E,QAL0E,KAIxC,MAASA,EAAS,MAAOC,QAAQ,IAIxDH,EAAe,SAAAI,GAC1B,IAEIC,EAFQC,IAAaF,IAAIG,IAAIH,GAElB5D,KAAI,SAACgE,EAAS/D,GAC3B,IAAIgE,EAAID,EAAU,IAElB,OAAIC,GAAK,OACAA,EAAI,MAEJrE,KAAKM,KAAK+D,EAAI,MAAS,MAAO,QAKzC,MADmB,MAASJ,EAAK,GAAK,MAASA,EAAK,GAAK,MAASA,EAAK,IAI5DK,EAA2B,SAA3BA,EAA4B,GAMlC,IAAD,IALJC,eAKI,MALM,EAKN,EAJJP,EAII,EAJJA,IACAQ,EAGI,EAHJA,QACWC,EAEP,EAFJC,UAEI,IADJC,mBACI,MADU,GACV,EACED,EAAYd,EAAaI,GAE/B,GAAIU,IAAcD,GAAmBF,GAAWI,EAC9C,OAAOX,EAGT,IACMY,GADSF,EAAYD,GACC,IAAM,KAAOzE,KAAKM,IAAI,EAAGiE,EAAU,GAC3DM,EAAUX,IAAaF,IAAIc,IAAId,GAC/Be,OAA0BC,IAAZR,EAAwBA,EAAUK,EAE9CC,EAAMG,EAAO,CACjBH,IAAKC,EACLG,EAAGlF,KAAKmF,IAAI,EAAGnF,KAAKoF,IAAIP,EAAQ,GAAKD,EAAU,QAGjD,MAAI,WAAIV,IAAaY,IAAId,IAAIc,MAAWd,EAC/BA,EAGFM,EAAyB,CAC9BC,QAASA,EAAU,EACnBP,IAAI,IAAD,OAAME,IAAaY,IAAId,IAAIc,IAC9BN,QAASO,EACTL,UAAWD,EACXE,iBAISU,EAA0B,SAA1BA,EAA2B,GAOjC,IAAD,IANJd,eAMI,MANM,EAMN,EALJe,EAKI,EALJA,QACeC,EAIX,EAJJC,cACAxB,EAGI,EAHJA,IACAQ,EAEI,EAFJA,QAEI,IADJG,mBACI,MADU,GACV,EACEjB,EAAaE,EAAaI,GAC1BL,EAAaC,EAAa0B,GAC1BE,EAAgBjC,EAAiB,CAAEG,aAAYC,eAErD,GAAI6B,IAAkBD,GAAuBhB,GAAWI,EACtD,OAAOX,EAGT,IAKMY,GAJHlB,EAAaC,GAAc6B,EAAgBD,GAC3C7B,EAAaC,GAAc6B,EAAgBD,GAGlB,IAAM,KAAOvF,KAAKM,IAAI,EAAGiE,EAAU,GAC3DM,EAAUX,IAAaF,IAAIc,IAAId,GAC/Be,OAA0BC,IAAZR,EAAwBA,EAAUK,EAE9CC,EAAMG,EAAO,CACjBH,IAAKC,EACLG,EAAGlF,KAAKmF,IAAI,EAAGnF,KAAKoF,IAAIP,EAAQ,GAAKD,EAAU,QAGjD,GAAI,WAAIV,IAAaY,IAAId,IAAIc,MAAWd,EACtC,OAAOA,EAGT,IAAMyB,EAAa,CACjBlB,QAASA,EAAU,EACnBe,UACAE,cAAeD,EACfvB,IAAI,IAAD,OAAME,IAAaY,IAAId,IAAIc,IAC9BN,QAASO,EACTJ,eAKF,OAFAe,QAAQC,IAAIF,GAELJ,EAAwBI,IAIpBG,EAA0B,SAA1BA,EAA2B,GAMjC,IAAD,IALJrB,eAKI,MALM,EAKN,EAJJe,EAII,EAJJA,QACeC,EAGX,EAHJC,cACAxB,EAEI,EAFJA,IAEI,IADJW,mBACI,MADU,GACV,EACJe,QAAQG,KAAK,+CACb,IAAMnC,EAAaE,EAAaI,GAC1BL,EAAaC,EAAa0B,GAC1BE,EAAgBjC,EAAiB,CAAEG,aAAYC,eAErD,GAAI6B,IAAkBD,GAAuBhB,GAAWI,EACtD,OAAOX,EAEP,IAAI8B,EAAM5B,IAAaF,IAAI8B,IAAI9B,GAE3B+B,EACDrC,EAAaC,GAAc6B,EAAgBD,GAC3C7B,EAAaC,GAAc6B,EAAgBD,EAG1CX,EAAWmB,EAAS,IAAMD,EAAI,GAAK,IAAMA,EAAI,GAQjD,OAPAlB,GAAsB5E,KAAKM,IAAI,EAAGiE,EAAU,GAC5CuB,EAAME,EAAO,CACXF,MACAZ,EAAIa,EAA6BD,EAAI,GAAxBA,EAAI,GAAKlB,EACtBqB,EAAGF,EAASD,EAAI,GAAKlB,EAAWkB,EAAI,KAGlC,WAAI5B,IAAa4B,IAAI9B,IAAI8B,MAAW9B,EAC/BA,EAGF4B,EAAwB,CAC7BrB,QAASA,EAAU,EACnBe,UACAE,cAAeD,EACfvB,IAAI,IAAD,OAAME,IAAa4B,IAAI9B,IAAI8B,IAC9BnB,iBAKOuB,EAA0B,SAA1BA,EAA2B,GAMjC,IAAD,IALJ3B,eAKI,MALM,EAKN,EAJJe,EAII,EAJJA,QACeC,EAGX,EAHJC,cACAxB,EAEI,EAFJA,IAEI,IADJW,mBACI,MADU,GACV,EACEjB,EAAaE,EAAaI,GAC1BL,EAAaC,EAAa0B,GAC1BE,EAAgBjC,EAAiB,CAAEG,aAAYC,eAErD,GAAI6B,IAAkBD,GAAuBhB,GAAWI,EACtD,OAAOX,EAEP,IAAImC,EAAMjC,IAAaF,IAAImC,IAAInC,GAO3BY,EAJDlB,EAAaC,GAAc6B,EAAgBD,GAC3C7B,EAAaC,GAAc6B,EAAgBD,EAGtB,EAAIY,EAAI,GAAK,IAAMA,EAAI,GAI/C,OAHAvB,GAAsB5E,KAAKM,IAAI,EAAGiE,EAAU,GAC5C4B,EAAMC,EAAO,CAAED,MAAKjB,EAAGiB,EAAI,GAAKvB,IAE5B,WAAIV,IAAaiC,IAAInC,IAAImC,MAAWnC,EAC/BA,EAGFkC,EAAwB,CAC7B3B,QAASA,EAAU,EACnBe,UACAE,cAAeD,EACfvB,IAAI,IAAD,OAAME,IAAaiC,IAAInC,IAAImC,IAC9BxB,iBAKOM,EAAS,SAAC,GAAD,oBAAGH,IAAH,GAASuB,EAAT,KAAYC,EAAZ,KAAepB,EAAf,KAAsBqB,EAAtB,EAAmBF,EAAUG,EAA7B,EAA0BF,EAAUG,EAApC,EAAiCvB,EAAjC,MAA8C,CACpD,kBAAPqB,EAAkBA,EAAKF,EAChB,kBAAPG,EAAkBA,EAAKF,EAChB,kBAAPG,EAAkBA,EAAKvB,IAGnBc,EAAS,SAAC,GAAD,oBAAGF,IAAH,GAASO,EAAT,KAAYC,EAAZ,KAAeL,EAAf,KAAsBM,EAAtB,EAAmBF,EAAUG,EAA7B,EAA0BF,EAAUI,EAApC,EAAiCT,EAAjC,MAA8C,CACpD,kBAAPM,EAAkBA,EAAKF,EAChB,kBAAPG,EAAkBA,EAAKF,EAChB,kBAAPI,EAAkBA,EAAKT,IAGnBG,EAAS,SAAC,GAAD,oBAAGD,IAAH,GAASjB,EAAT,KAAYyB,EAAZ,KAAeC,EAAf,KAAsBH,EAAtB,EAAmBvB,EAAU2B,EAA7B,EAA0BF,EAAUG,EAApC,EAAiCF,EAAjC,MAA8C,CACpD,kBAAPH,EAAkBA,EAAKvB,EAChB,kBAAP2B,EAAkBA,EAAKF,EAChB,kBAAPG,EAAkBA,EAAKF,IAGnBG,EAAsB,SAAAzI,GACjC,IAAI0I,EAEJ,IACEA,EAAY9C,IAAa+C,QAAQjD,IAAI1F,GAAO4I,cAC5C,MAAMC,GACNH,EAAyB,MAAb1I,EAAM,GAAaA,EAAM8I,OAAO,GAAK9I,EAGnD,MAAO,WAAI0I,KAAe,GAG5BK,OAAOC,UAAY,CACjBpD,iBACAX,mBACAwD,sBACAnD,eACAyB,0BACAJ,SACAmB,UAGa,I,iBCtOTmB,EAAS,SAAC,GAAD,IACbnJ,EADa,EACbA,gBACAsE,EAFa,EAEbA,UACApE,EAHa,EAGbA,MACGqE,EAJU,8DAMb,yCACMA,EADN,CAEED,UAAWE,IAAWC,IAAO0E,OAAQ7E,GACrC8E,MAAO,CACLpJ,kBACAE,aAWNiJ,EAAOzE,aAAe,CACpB1E,gBAAiB,OACjBsE,UAAW,GACXpE,MAAO,QAGMiJ,IC/BAA,ED+BAA,E,iBE1BTE,EAAiB,SAAC,GAKjB,IAJL/E,EAII,EAJJA,UACOU,EAGH,EAHJ9E,MACApB,EAEI,EAFJA,OAEI,8CACJ,OACE,yBAAKwF,UAAWE,IAAWC,IAAO4E,eAAgB/E,IAAlD,iBAEE,6BACA,yBAAKA,UAAWG,IAAO6E,OACrB,kBAAC,EAAD,CACEtJ,gBAAiBlB,EAAOqB,MACxBD,MAAO8E,GAENG,EAAiB,CAAEC,KAAMJ,EAAOK,KAAMvG,EAAOqB,SAEhD,kBAAC,EAAD,CACEH,gBAAiBlB,EAAOwD,MACxBpC,MAAO8E,GAENG,EAAiB,CAAEC,KAAMJ,EAAOK,KAAMvG,EAAOwD,SAEhD,kBAAC,EAAD,CACEtC,gBAAiBgF,EACjB9E,MAAOpB,EAAOqB,OAEbgF,EAAiB,CAAEC,KAAMtG,EAAOqB,MAAOkF,KAAML,KAEhD,kBAAC,EAAD,CACEhF,gBAAiBgF,EACjB9E,MAAOpB,EAAOwD,OAEb6C,EAAiB,CAAEC,KAAMtG,EAAOwD,MAAO+C,KAAML,QAWxDqE,EAAe3E,aAAe,CAC5BJ,UAAW,IAGE+E,ICrDAA,EDqDAA,E,kBE7CFE,GAAkB,SAACC,GAC9B,IAAIC,EAEJ,IAGE,GAFAA,EAASC,SAASF,EAAQ,IAEtBG,MAAMF,GACR,MAAM,IAAI9H,MAAM,gBAElB,MAAMoH,GACNU,EAAS,KAGX,OAAOA,GAiBHG,GAAY,SAAC,GAKZ,IAJLtF,EAII,EAJJA,UACOuF,EAGH,EAHJzG,MACA0G,EAEI,EAFJA,cACAC,EACI,EADJA,aACI,EACwBC,mBAASH,EAAU3K,QAAQU,IADnD,mBACG2B,EADH,KACW0I,EADX,OAE8BD,mBAASH,GAFvC,mBAEGK,EAFH,KAEcC,EAFd,KAIJC,qBAAU,WACRN,EAAcI,KACb,CAACJ,EAAeI,IAEnB,IAAMG,EAAmBC,uBAAY,WACnCP,EAAaG,KACZ,CAACH,EAAcG,IAEZK,EAAoBD,uBAAY,WACpCH,EAAaN,KACZ,CAACA,IAGEW,EAAaC,mBAAQ,WAgBzB,OAfoBC,OAAOC,QAAQT,EAAUpL,QAAQqD,QAAO,SAACC,EAAD,GAA2B,IACjFwG,EADgF,mBAAhBgC,EAAgB,KAAX5F,EAAW,KAGpF,IACE4D,EAAY9C,IAAa+C,QAAQjD,IAAIZ,GAAO8D,cAC5C,MAAMC,GACNH,EAAyB,MAAb5D,EAAM,GAAaA,EAAMgE,OAAO,GAAKhE,EAGnD,OAAO,eACF5C,EADL,eAEGwI,EAFH,WAEahC,OAEZ,MAGF,CAACsB,EAAUpL,SAlCV,EAoCwBkL,mBAASQ,GApCjC,mBAoCG1L,EApCH,KAoCW+L,EApCX,KAsCJT,qBAAU,WACRS,EAAUL,KACT,CAACA,IAEJ,IAAMM,EAAoBR,uBAAY,YAAqB,IAAlBS,EAAiB,EAAjBA,MAAOH,EAAU,EAAVA,IAC9CtD,QAAQC,IAAI,CAAEqD,MAAK5F,MAAO+F,EAAMC,OAAOhG,QAEvC,IAAMiG,EAAU,eACXnM,EADW,eAEb8L,EAAmBG,EAAMC,OAAOhG,QAG7BkG,EAAS,eACVhB,EADU,CAEbpL,OAAQmM,EACRhI,QAASrE,EAAW,eACfsL,EADc,CAEjBpL,OAAQmM,OAIZd,EAAae,KACZ,CAACpM,EAAQoL,IA5DR,EAgEwCF,mBAASU,OAAOS,KAAKtB,EAAU7K,MAAMM,OAAO2B,QAhEpF,mBAgEGmK,EAhEH,KAgEmBC,EAhEnB,OAiE8BrB,mBAASH,EAAU7K,MAAMM,OAjEvD,mBAiEGgM,EAjEH,KAiEcC,EAjEd,KAmEEC,EAAuBlB,uBAAY,YAAqB,IAAlBS,EAAiB,EAAjBA,MAAOH,EAAU,EAAVA,IAC3Ca,EAAS,eACVH,EADU,eAEZV,EAAMrB,GAAgBwB,EAAMC,OAAOhG,SAGhC0G,EAAS,eACVxB,EAAUlL,MADA,CAEbM,MAAOmM,IAGHP,EAAS,eACVhB,EADU,CAEbjH,QAASrE,EAAW,eACfsL,EADc,CAEjBlL,MAAO0M,KAET1M,MAAO0M,IAGTH,EAAaE,GACbtB,EAAae,KACZ,CAACI,EAAWpB,IAETyB,EAA6BrB,uBAAY,SAAAvB,GAC7CzB,QAAQC,IAAI,CAAE+D,cACd,IAAMM,EAAqBrC,GAAgBR,EAAEiC,OAAOhG,OAChDyG,EAAYvK,EAAS,CAAEE,MAAOwK,IAElCH,EAAYf,OAAOS,KAAKM,GAAWtJ,QAAO,SAACC,EAAQyJ,GACjD,OAAO,eACFzJ,EADL,eAEGyJ,EAAUP,EAAUO,IAAYnB,OAAOoB,OAAOR,GAAW,OAE3D,IAEHC,EAAaE,GACbJ,EAAkBO,KACjB,CAACN,IAEES,EAAqBzB,uBAAY,SAAAvB,GACrC,IAAMiD,EAAazC,GAAgBR,EAAEiC,OAAOhG,OACtC9F,EAAUgC,EAAS,CAAEE,MAAO,EAAGG,OAAQyK,IAC7C/B,EAAU+B,GAEV7B,EAAa,eACRD,EADO,CAEVjH,QAASrE,EAAW,CAAEE,OAAQoL,EAAUpL,OAAQE,MAAOkL,EAAUlL,MAAOE,YACxEA,eAED,CAACgL,IAEJ,OACE,0BAAM5F,UAAWE,IAAWF,EAAWG,KAAOmF,YAC5C,kBAAC,EAAD,CACE/E,GAAG,SACHC,SAAUiH,EACVhH,KAAK,SACLC,MAAK,UAAKzD,KAEZ,iCACE,+CACCmJ,OAAOC,QAAQ7L,GAAQkD,KAAI,WAAeC,GAAO,IAAD,mBAAnB2I,EAAmB,KAAd5F,EAAc,KAC/C,OACE,yBAAK4F,IAAKA,GACR,kBAAC,EAAD,CACE/F,GAAE,wBAAmB+F,GACrBA,IAAKA,EACLnJ,MAAOmJ,EACP9F,SAAU,SAAAiG,GAAK,OAAID,EAAkB,CAAEC,QAAOH,SAC9C7F,KAAK,QACLC,MAAK,UAAKA,KAEZ,yBAAKV,UAAWG,KAAOwH,gBACrB,kBAAC,EAAD,CACE/L,MAAO8E,EACPlG,OAAQA,UAOpB,kBAAC,EAAD,CACE+F,GAAG,iBACHC,SAAU6G,EACV5G,KAAK,SACLC,MAAK,UAAKoG,KAEZ,iCACE,0CACCV,OAAOC,QAAQW,GAAWtJ,KAAI,mCAAE4I,EAAF,KAAO5F,EAAP,YAC7B,kBAAC,EAAD,CACEH,GAAE,mBAAc+F,GAChBA,IAAKA,EACLnJ,MAAOmJ,EACP9F,SAAU,SAAAiG,GAAK,OAAIS,EAAqB,CAAET,QAAOH,SACjD7F,KAAK,SACLC,MAAK,UAAKA,SAIhB,6BACE,kBAAC,EAAD,CACEvC,UAAQ,EACRyJ,QAAS3B,EACTpH,SAAO,EACP4B,KAAK,UAJP,UAQC,IACD,kBAAC,EAAD,CACEmH,QAAS7B,EACTtF,KAAK,SACL1B,QAAQ,WAHV,YAgBRuG,GAAUlF,aAAe,CACvBJ,UAAW,IAIEsF,ICnPAA,GDmPAA,G,6BEnOTuC,GAAY,SAAC,GAOZ,IANL7H,EAMI,EANJA,UACO8H,EAKH,EALJlM,MACAmM,EAII,EAJJA,KAII,IAHJC,kBAGI,MAHS,GAGT,EAFJL,EAEI,EAFJA,eACG1H,EACC,0EACEgI,EAAeC,qBAAWC,KAC1BtM,EAAQsK,mBAAQ,kBAAM9B,EAAoB4D,EAAazN,OAAOqB,SAAQ,CAACoM,EAAazN,OAAOqB,QAC3FmC,EAAQmI,mBAAQ,kBAAM9B,EAAoB4D,EAAazN,OAAOwD,SAAQ,CAACiK,EAAazN,OAAOwD,QAC3FpC,EAAQuK,mBAAQ,kBAAM9B,EAAoByD,KAAY,CAACA,IAEzDM,EAAoBjC,mBAAQ,WAC9B,IAAIkC,EAAS1F,EAGb,OAFA0F,EAAkB,QAATN,EAAiBvE,EAA0B6E,EACpDA,EAAkB,QAATN,EAAiB7E,EAA0BmF,IAEnD,CAACN,IAEAO,EAAqBnC,mBAAQ,WAC/B,IAAIkC,EAAS,KAEb,OADAA,EAAkB,QAATN,GAAkBC,EAAWrL,OAASiF,EAA2ByG,IAEzE,CAACN,EAAMC,IAEJxN,EAAS2L,mBAAQ,WACrB,IAAI3L,EAkCJ,OAVAA,GArBEA,EADE8N,EACO,aACJN,EAAW7G,QACdzD,KAAI,SAACsE,EAAWrE,GAChB,OAAO2K,EAAmB,CACxBhH,IAAK1F,EACLoG,iBAIK,uBACJ2F,EAAexG,OAAOoH,WADlB,aAEJZ,EAAexG,SAClBzD,KAAI,SAACoF,EAAenF,GACpB,OAAOyK,EAAkB,CACvB9G,IAAK1F,EACLgH,QAASjF,EAAIgK,EAAehL,OAASd,EAAQmC,EAC7C8E,sBAKUpF,KAAI,SAAC9B,EAAO+B,GAAR,MAAe,CACjC6K,UAAW7K,EAAIgK,EAAehL,OAASd,EAAQmC,EAC/CpC,QACAkH,cAAejC,EAAiB,CAAEC,KAAMlF,EAAOmF,KAAMpD,EAAIgK,EAAehL,OAASd,EAAQmC,IACzFgE,UAAWd,EAAatF,GACxB0K,IAAI,GAAD,OAAK1K,EAAL,YAAc+B,QAGZwD,MAAK,uBAAGa,UAAH,EAAqBA,aAE1BxH,IACN,CAACwD,EAAOpC,EAAO+L,EAAgBS,EAAmBE,EAAoBN,EAAYnM,IAErF,OACE,yCACMoE,EADN,CAEED,UAAWE,IAAWF,EAAWG,KAAO0H,aAExC,yBAAK/C,MAAO,CACV2D,QAAS,OACTC,SAAU,aACVC,WAAY,UACZC,OAAQ,OACRC,OAAQ,sBAEPrO,EAAOkD,KAAI,gBACV8K,EADU,EACVA,UACA5M,EAFU,EAEVA,MACAkH,EAHU,EAGVA,cACAwD,EAJU,EAIVA,IACAtE,EALU,EAKVA,UALU,OAOV,yBACEsE,IAAKA,EACLxB,MAAO,CACL6D,WAAY,SACZG,WAAYlN,EACZA,MAAOoG,EAAY,GAAMiG,EAAazN,OAAOwD,MAAQiK,EAAazN,OAAOqB,MACzE4M,QAAS,OACTM,KAAM,WACNC,eAAgB,SAChBC,QAAS,SATb,UAYUrN,EACR,6BAbF,SAcS4M,EACP,6BAfF,aAgBa1F,EACX,6BAjBF,cAkBcd,EAAUX,QAAQ,UAc1CwG,GAAUzH,aAAe,CACvBJ,UAAW,IAGE6H,ICvIAA,GDuIAA,G,oBEjITqB,GAAW,SAAC,GAIX,IAHLlJ,EAGI,EAHJA,UACApE,EAEI,EAFJA,MACGqE,EACC,qCACEkJ,EAAYhD,mBAAQ,kBAAM9B,EAAoBzI,KAAQ,CAACA,IACvDoG,EAAYmE,mBAAQ,kBAAMjF,EAAaiI,KAAY,CAACA,IACpD/G,EAAM+D,mBAAQ,kBAAM3E,IAAaF,IAAIc,IAAI+G,KAAY,CAACA,IACtD1F,EAAM0C,mBAAQ,kBAAM3E,IAAaF,IAAImC,IAAI0F,KAAY,CAACA,IAGtDC,EAAOjD,mBAAQ,kBAAM,IAAI3I,MAFjB,IAE8BC,KAAK,IAAIC,KAAI,SAAC2L,EAAKC,GAC7D,IAAIC,EAAU,IAAI/L,MAHN,IAGmBC,KAAK,IAiBpC,OAVA8L,EAAUA,EAAQ7L,KAAI,SAAC8L,EAAQC,GAC7B,IALiB9L,EAKX+L,EAAa,WAAOlI,IAAaiC,IAAInC,IAAIoC,EAAO,CAAED,MAAKjB,EAAG,KAL/C7E,EAKgE2L,EAJ1E3L,EAAC,GAAiB,SAKnBmF,EAAgBjC,EAAiB,CAAEC,KAAM4I,EAAe3I,KAAM,YAEpE,MAAO,CACL+B,gBACAlH,MAAOkH,GAAiB,EAAI4G,EAAgB,iBAK9C,CAACjG,IAECkG,EAAaxD,mBAAQ,WAAO,IAAD,cACd/D,EADc,GACtBwB,EADsB,KACnBpB,EADmB,KAE/B,MAAO,CACLoH,EAAE,GAAD,OAAKhG,EAAL,KACDiG,EAAE,GAAD,OAAK,IAAMrH,EAAX,QAEF,CAACJ,IAEJ,OACE,oCACE,yBAAKpC,UAAWG,KAAO2J,OAAvB,QACQ1H,EAAI,GACV,6BAFF,eAGeqB,EAAI,GAAKA,EAAI,IAAIpC,QAAQ,GACtC,6BAJF,mCAKoCe,EAAI,GAAK,IAAOJ,GAAWX,QAAQ,GACrE,6BANF,eAOee,EAAI,GACjB,6BARF,cAScJ,EACZ,6BAVF,cAWcyB,EAAI,GAChB,6BAZF,6BAa6B,GAE7B,yCACMxD,EADN,CAEED,UAAWE,IAAWF,EAAWG,KAAO+I,UACxCpE,MAAO,CACL+D,OAAO,aAAD,OAAejN,GACrB6D,aAAc,MACdsK,SAAU,cAGZ,yBACEjF,MAAO,CACLpJ,gBAAiBE,EACjB6M,QAAS,OACTG,OAAQ,QACRoB,iBAAiB,UAAD,OA9DZ,GA8DY,UAChBC,oBAAoB,UAAD,OA/Df,GA+De,YAGpBb,EAAK1L,KAAI,SAAC2L,EAAKC,GAAN,OAAaD,EAAI3L,KAAI,SAAC8L,EAAQC,GAAT,OAC7B,yBACEnD,IAAG,WAAMgD,EAAN,aAAaG,GAChB3E,MAAO,CACL2D,QAAS,QACT/M,gBAAiB8N,EAAO5N,OAE1BsO,MAAOV,EAAO1G,uBAIpB,yBACE9C,UAAWG,KAAOwJ,WAClB7E,MAAO,CACLiF,SAAU,WACVI,IAAKR,EAAWE,EAChBO,KAAMT,EAAWC,EACjBf,OAAQ,kBACRwB,UAAW,oBACXzB,OAAQ,OACR0B,MAAO,OACPC,WAAY,UACZC,UAAW,UACX/K,aAAc,SACd/D,gBAAiBE,QAY7BsN,GAAS9I,aAAe,CACtBJ,UAAW,IAGb,ICzHekJ,GDyHQ7I,YAAO6I,GAAP7I,EACrB,YAGM,EAFJ3E,gBAGA,MAAO,CACLA,gBAAiB,OACjBE,MAHE,EADJkD,MAIelD,U,mBEzHb6O,GAAe,SAAC,GAIf,IAHLC,EAGI,EAHJA,KACApJ,EAEI,EAFJA,IACAyG,EACI,EADJA,KACI,EACgCrC,oBAAS,GADzC,mBACGiF,EADH,KACeC,EADf,KAEEC,EAAU1E,mBAAQ,kBAAM9B,EAAoB/C,KAAM,CAACA,IAEzD,OACE,6BACE,4BACE,2BACEwJ,UAAWH,EACXnK,SAAU,SAAAiG,GAAK,OAAImE,EAAcnE,EAAMC,OAAOoE,UAC9CrK,KAAK,WACLqE,MAAO,CAAEiG,YAAa,UAExB,0BACE/K,UAAWG,KAAO6K,OAClBlG,MAAO,CAAEpJ,gBAAiB4F,KAE7BoJ,EAAM,IACL,2BAAO1K,UAAWG,KAAO8K,UAAW/J,EAAa2J,GAASxJ,QAAQ,KAEpE,kBAAC,GAAD,CACEzF,MAAO0F,EACPqG,eAAgB,CAAC,EAAG,IAAK,GACzBK,WAAY,CAAC,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,OACrDD,KAAMA,IAER,kBAAC,GAAD,CACEnM,MAAO0F,EACPqG,eAAgB,CAAC,EAAG,IAAK,GACzBI,KAAMA,IAQP4C,GACC,yBAAK7F,MAAO,CAAEoG,OAAQ,aACpB,kBAAC,GAAD,CAAUtP,MAAO0F,OClDZ6J,GDyDE,WAAO,IAAD,EACQzF,mBAAS,OADjB,mBACdqC,EADc,KACRqD,EADQ,KAEfnD,EAAeC,qBAAWC,KAEhC,OACE,oCACE,kDACqB,IACnB,4BAAQzH,MAAOqH,EAAKsD,cAAe7K,SAAU,SAACiG,GAAD,OAAW2E,EAAa3E,EAAMC,OAAOhG,MAAM8D,iBACtF,uCACA,uCACA,yCAGJ,wBAAIjE,GAAG,WAAP,WACA,kBAAC,EAAD,CAAQnD,KAAK,MAAb,UACC,IACD,kBAAC,EAAD,eACC,IACD,kBAAC,EAAD,CAAQA,KAAK,MAAb,UACC,IACD,2BAAOsD,MAAM,QAAQF,SAAU,eAC/B,wCAGA,uBAAG8K,KAAK,YAAR,QACA,yBAAKtL,UAAWG,KAAOoL,MACrB,yBAAKvL,UAAWG,KAAOqL,UAAvB,aAGA,yBAAKxL,UAAWG,KAAOsL,UAAvB,aAGA,yBAAKzL,UAAWG,KAAOuL,UAAvB,cAIF,6BACE,2CACCtF,OAAOC,QAAQ4B,EAAazN,QAC1BmR,QAAO,uCAAW,KAClBjO,KAAI,mCAAE4I,EAAF,KAAO5F,EAAP,YACH,kBAAC,GAAD,CACE4F,IAAKA,EACLoE,KAAMpE,EACNhF,IAAKZ,EACLqH,KAAMA,U,wCEnGd6D,GAAc,WAAO,IAAD,EACUlG,oBAAS,GADnB,mBACjBmG,EADiB,KACNC,EADM,KAGlBC,EAAkB/F,uBAAY,WAClC8F,GAAcD,KACb,CAACA,IAUJ,OARA/F,qBAAU,WAGR,OAFAkG,KAAUC,KAAK,IAAKF,GAEb,WACLC,KAAUE,OAAO,IAAKH,MAEvB,CAACA,IAECF,EAKH,yBAAK7L,UAAWG,KAAOyL,cAJhB,MAYXA,GAAYxL,aAAe,CACzBJ,UAAW,IAGE4L,ICpCAA,GDoCAA,GEKAO,OAjCf,WAAgB,IAAD,EACazG,mBAAS0G,GADtB,mBACNtN,EADM,KACCuN,EADD,OAE2B3G,mBAAS5G,GAFpC,mBAENwN,EAFM,KAEQC,EAFR,KAIPC,EAA2BxG,uBAAY,SAAClH,GAC5CyN,EAAgBzN,KACf,IAEG2N,EAA0BzG,uBAAY,SAAClH,GAC3CuN,EAASC,KACR,CAACA,IAEJ,OACE,kBAAC,IAAD,CAAexN,MAAOA,GACpB,yBAAKkB,UAAS,cAASG,IAAOgM,MAC5B,yBAAKnM,UAAWG,IAAOuM,MACrB,kBAAC,GAAD,CACE5N,MAAOA,EACP0G,cAAegH,EACf/G,aAAcgH,KAGlB,yBAAKzM,UAAWG,IAAOwM,SACrB,kBAAC,IAAD,CAAe7N,MAAOwN,GACpB,kBAAC,GAAD,SAIN,kBAAC,GAAD,QC1BcM,QACW,cAA7BjI,OAAOkI,SAASC,UAEe,UAA7BnI,OAAOkI,SAASC,UAEhBnI,OAAOkI,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,GAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACL3K,QAAQ2K,MAAMA,EAAMC,c","file":"static/js/main.9ec0cc92.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"subtitle\":\"Examples_subtitle__L0_CV\",\"swatch\":\"Examples_swatch__3QSmL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__16ZpL\",\"form\":\"App_form__30Y9M\",\"example\":\"App_example__1C_qW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Control\":\"Control_Control__3EPTo\",\"label\":\"Control_label__3Ujpe\",\"input\":\"Control_input__2uiDw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ColorViz\":\"ColorViz_ColorViz__1Ci1d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contrastRatios\":\"ContrastRatios_contrastRatios__3bxBf\",\"ramps\":\"ContrastRatios_ramps__3bqjK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ThemeForm\":\"ThemeForm_ThemeForm__SOs96\",\"contrastRatios\":\"ThemeForm_contrastRatios__1WuQN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__1Isrx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Swatch\":\"Swatch_Swatch__2rCcA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ColorRamp\":\"ColorRamp_ColorRamp__14vxo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"GridOverlay\":\"GridOverlay_GridOverlay__38eQu\"};","export const getButtons = ({ colors: customColors, fonts: customFonts, spacing: customSpacing }) => ({\n\tborderWidth: 1,\n\troundness: 0.2,\n\tshine: 1, // Very shiny: glass, shiny: plastic, slightly shiny: paper, 0: flat\n\tsizes: {\n\t\tsm: {\n\t\t\tfontSize: customFonts.sizes.sm,\n\t\t\tpaddingH: customSpacing.sm,\n\t\t\tpaddingV: customSpacing.xs,\n\t\t},\n\t\tmd: {\n\t\t\tfontSize: customFonts.sizes.md,\n\t\t\tpaddingH: customSpacing.md,\n\t\t\tpaddingV: customSpacing.sm,\n\t\t},\n\t\tlg: {\n\t\t\tfontSize: customFonts.sizes.lg,\n\t\t\tpaddingH: customSpacing.md,\n\t\t\tpaddingV: customSpacing.sm,\n\t\t},\n\t},\n\tvariants: {\n\t\tdefault: {\n\t\t\tbackgroundColor: customColors.neutral,\n\t\t\tcolor: customColors.white,\n\t\t\thover: {\n\t\t\t\tbackgroundColor: customColors.neutral,\n\t\t\t\tcolor: customColors.white,\n\t\t\t},\n\t\t\tfocus: {\n\t\t\t\tbackgroundColor: customColors.neutral,\n\t\t\t\tcolor: customColors.white,\n\t\t\t},\n\t\t\tactive: {\n\t\t\t\tbackgroundColor: customColors.neutral,\n\t\t\t\tcolor: customColors.white,\n\t\t\t},\n\t\t\tdisabled: {\n\t\t\t\tbackgroundColor: customColors.neutral,\n\t\t\t\tcolor: customColors.white,\n\t\t\t},\n\t\t},\n\t\tprimary: {\n\t\t\tbackgroundColor: customColors.primary,\n\t\t\tcolor: customColors.white,\n\t\t\thover: {\n\t\t\t\tbackgroundColor: customColors.primary,\n\t\t\t\tcolor: customColors.white,\n\t\t\t},\n\t\t\tfocus: {\n\t\t\t\tbackgroundColor: customColors.primary,\n\t\t\t\tcolor: customColors.white,\n\t\t\t},\n\t\t\tactive: {\n\t\t\t\tbackgroundColor: customColors.primary,\n\t\t\t\tcolor: customColors.white,\n\t\t\t},\n\t\t\tdisabled: {\n\t\t\t\tbackgroundColor: customColors.primary,\n\t\t\t\tcolor: customColors.white,\n\t\t\t},\n\t\t},\n\t\tsuccess: {\n\t\t\tbackgroundColor: customColors.success,\n\t\t\tcolor: customColors.white,\n\t\t\thover: {\n\t\t\t\tbackgroundColor: customColors.success,\n\t\t\t\tcolor: customColors.white,\n\t\t\t},\n\t\t\tfocus: {\n\t\t\t\tbackgroundColor: customColors.success,\n\t\t\t\tcolor: customColors.white,\n\t\t\t},\n\t\t\tactive: {\n\t\t\t\tbackgroundColor: customColors.success,\n\t\t\t\tcolor: customColors.white,\n\t\t\t},\n\t\t\tdisabled: {\n\t\t\t\tbackgroundColor: customColors.success,\n\t\t\t\tcolor: customColors.white,\n\t\t\t},\n\t\t},\n\t\tinfo: {\n\t\t\tbackgroundColor: customColors.info,\n\t\t\tcolor: customColors.white,\n\t\t\thover: {\n\t\t\t\tbackgroundColor: customColors.info,\n\t\t\t\tcolor: customColors.white,\n\t\t\t},\n\t\t\tfocus: {\n\t\t\t\tbackgroundColor: customColors.info,\n\t\t\t\tcolor: customColors.white,\n\t\t\t},\n\t\t\tactive: {\n\t\t\t\tbackgroundColor: customColors.info,\n\t\t\t\tcolor: customColors.white,\n\t\t\t},\n\t\t\tdisabled: {\n\t\t\t\tbackgroundColor: customColors.info,\n\t\t\t\tcolor: customColors.white,\n\t\t\t},\n\t\t},\n\t\tneutral: {\n\t\t\tbackgroundColor: customColors.neutral,\n\t\t\tcolor: customColors.white,\n\t\t\thover: {\n\t\t\t\tbackgroundColor: customColors.neutral,\n\t\t\t\tcolor: customColors.white,\n\t\t\t},\n\t\t\tfocus: {\n\t\t\t\tbackgroundColor: customColors.neutral,\n\t\t\t\tcolor: customColors.white,\n\t\t\t},\n\t\t\tactive: {\n\t\t\t\tbackgroundColor: customColors.neutral,\n\t\t\t\tcolor: customColors.white,\n\t\t\t},\n\t\t\tdisabled: {\n\t\t\t\tbackgroundColor: customColors.neutral,\n\t\t\t\tcolor: customColors.white,\n\t\t\t},\n\t\t},\n\t\twarning: {\n\t\t\tbackgroundColor: customColors.warning,\n\t\t\tcolor: customColors.white,\n\t\t\thover: {\n\t\t\t\tbackgroundColor: customColors.warning,\n\t\t\t\tcolor: customColors.white,\n\t\t\t},\n\t\t\tfocus: {\n\t\t\t\tbackgroundColor: customColors.warning,\n\t\t\t\tcolor: customColors.white,\n\t\t\t},\n\t\t\tactive: {\n\t\t\t\tbackgroundColor: customColors.warning,\n\t\t\t\tcolor: customColors.white,\n\t\t\t},\n\t\t\tdisabled: {\n\t\t\t\tbackgroundColor: customColors.warning,\n\t\t\t\tcolor: customColors.white,\n\t\t\t},\n\t\t},\n\t\tdanger: {\n\t\t\tbackgroundColor: customColors.danger,\n\t\t\tcolor: customColors.white,\n\t\t\thover: {\n\t\t\t\tbackgroundColor: customColors.danger,\n\t\t\t\tcolor: customColors.white,\n\t\t\t},\n\t\t\tfocus: {\n\t\t\t\tbackgroundColor: customColors.danger,\n\t\t\t\tcolor: customColors.white,\n\t\t\t},\n\t\t\tactive: {\n\t\t\t\tbackgroundColor: customColors.danger,\n\t\t\t\tcolor: customColors.white,\n\t\t\t},\n\t\t\tdisabled: {\n\t\t\t\tbackgroundColor: customColors.danger,\n\t\t\t\tcolor: customColors.white,\n\t\t\t},\n\t\t},\n\t},\n});\n\nexport const getMinLineHeight = ({ size, spacing }) => {\n\tconst idealSize = size * 1.4;\n\tconst floor = Math.floor(idealSize / spacing.xs) * spacing.xs;\n\tconst ceil = Math.ceil(idealSize / spacing.xs) * spacing.xs;\n\tconst px = Math.abs(idealSize - floor) <= Math.abs(idealSize - ceil) ? floor : ceil;\n\tconst ratio = px / size;\n\n\treturn {\n\t\tpx,\n\t\tratio,\n\t}\n};\n\nexport const getShared = ({ colors: customColors }) => ({\n\tbackgroundColor: customColors.white,\n\tcolor: customColors.black,\n\televation: 1,\n\tinverted: false,\n\troundness: 0,\n\tshine: 0,\n});\n\nexport const getSizeLabelFromIndex = sizeIndex => {\n\tconst smSizeLabels = ['sm', 'xs'];\n\tconst lgSizeLabels = ['lg', 'xl'];\n\tconst baseSizeLabel = 'md';\n\n\tif (sizeIndex < 0) {\n\t\tif (-1 * sizeIndex <= smSizeLabels.length) {\n\t\t\treturn smSizeLabels[-1 * sizeIndex - 1];\n\t\t}\n\n\t\treturn `${-1 * sizeIndex - 1}${smSizeLabels[smSizeLabels.length - 1]}`;\n\t}\n\n\tif (sizeIndex > 0) {\n\t\tif (sizeIndex <= lgSizeLabels.length) {\n\t\t\treturn lgSizeLabels[sizeIndex - 1];\n\t\t}\n\n\t\treturn `${sizeIndex - 1}${lgSizeLabels[lgSizeLabels.length - 1]}`;\n\t}\n\n\treturn baseSizeLabel;\n}\n\nexport const getSizes = ({\n\tcount,\n\tcustomSizes = {},\n\tlgCount = 0,\n\tmdSize = null,\n\tsmCount = 0,\n}) => {\n\tlet offset;\n\n\tlet sizes = [{\n\t\tlabel: 'md',\n\t\tsize: mdSize,\n\t}];\n\n\tif (count) {\n\t\tif (count < 1) {\n\t\t\tthrow new Error('Count must be at least 1');\n\t\t}\n\n\t\toffset = Math.floor(count / 2);\n\t\tsizes = new Array(count).fill(null).map((size, i) => i - offset);\n\t} else if (lgCount >= 0 && smCount >= 0) {\n\t\toffset = smCount;\n\t\tsizes = new Array(1 + lgCount + smCount).fill(null).map((size, i) => i - offset);\n\t} else {\n\t\tthrow new Error('You must define `count` _or_ `lgCount`/`smCount`');\n\t}\n\n\tsizes = sizes.map(sizeIndex => {\n\t\tlet size = {\n\t\t\tlabel: getSizeLabelFromIndex(sizeIndex),\n\t\t\tsize: mdSize * Math.pow(2, sizeIndex),\n\t\t};\n\n\t\treturn size;\n\t});\n\n\treturn sizes.reduce((result, size) => ({\n\t\t...result,\n\t\t[size.label]: size.size,\n\t}), {});\n}\n\nexport default {\n  getSizes,\n};\n","import { getButtons, getShared, getSizes } from './theme-utils';\n\nconst baseSize = 4;\n\nconst spacing = getSizes({ count: 5, mdSize: baseSize * 4 });\n\nconst colors = {\n\twhite: 'white',\n\tblack: '#16161d',\n\tprimary: 'blue',\n\tsuccess: 'green',\n\tinfo: 'lightblue',\n\tneutral: 'gray',\n\twarning: 'yellow',\n\tdanger: 'red',\n};\n\nconst shared = getShared({ colors });\n\nconst fonts = {\n\tsansSerif: 'sans-serif',\n\tserif: 'serif',\n\tsizes: {\n\t\txs: 10,\n\t\tsm: 12,\n\t\tmd: 16,\n\t\tlg: 24,\n\t\txl: 32,\n\t},\n\tweights: {\n\t\tnormal: 400,\n\t\tbold: 700,\n\t},\n};\n\nconst buttons = getButtons({ colors, fonts, spacing });\n\n\t/*\n\t\tDark mode?\n\t\t- on/off\n\n\t\tRoundness applies to button and card corners.\n\t\t- Should you be able to separate them?\n\n\t\tButton surfaces should be able to look\n\t\t- glass-shiny (old iOS)\n\t\t- softly shaded (plastic?)\n\t\t- totally flat (paper?)\n\t\t- soft around the edges (neuomorphic?)\n\n\t\tButton shapes should be able to look\n\t\t- Totally pill shaped\n\t\t- Slightly rounded\n\n\t\tButtons should be able to elevate:\n\t\t- Not at all - no shadows\n\t\t- float above the background (distant, large shadows)\n\n\t\tNeumorphism\n\t\t- Emboss\n\t\t- Float\n\t\t- None\n\n\t\tButton style schemes\n\t\t- link style - no border, no background\n\t\t- Standard, semantic color background, inverted foreground\n\t\t- Pastel, i.e. monochomatic with tinted background, intense foreground\n\n\t\tFloating panels should have\n\t\t- Roundness\n\t\t- Elevation\n\n\t\tAnd a different material palette\n\t\t- Edged for visibility\n\t\t- Edged for 3D realism\n*/\n\nexport default {\n\tbuttons,\n\tcolors,\n\tfonts,\n\tshared,\n\tspacing,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport styled from 'styled-components';\nimport { getMinLineHeight } from '../theme-utils';\nimport styles from './Button.module.css';\n\nexport const getButttonStyle = ({\n  outline = false,\n  size = 'md',\n  theme,\n  variant = 'default',\n}) => {\n  const {\n    buttons,\n    spacing,\n  } = theme;\n\n  const {\n    borderWidth,\n    roundness,\n    sizes,\n    variants,\n  } = buttons;\n\n  const {\n    backgroundColor,\n    color,\n    hover,\n  } = variants[variant];\n\n  let {\n    fontSize,\n    paddingH,\n    paddingV,\n  } = sizes[size];\n\n  const {\n    ratio: lineHeightRatio,\n    px: lineHeightPx,\n  } = getMinLineHeight({\n    size: fontSize,\n    spacing\n  });\n\n  return ({\n    color: outline ? backgroundColor : color,\n    backgroundColor: outline ? color : backgroundColor,\n    borderColor: backgroundColor,\n    borderWidth,\n    borderStyle: 'solid',\n    borderRadius: roundness * (lineHeightPx / 2 + paddingV),\n    paddingBottom: paddingV - borderWidth,\n    paddingLeft: paddingH - borderWidth,\n    paddingRight: paddingH - borderWidth,\n    paddingTop: paddingV - borderWidth,\n    fontSize: fontSize,\n    lineHeight: lineHeightRatio,\n    ':hover': {\n      color: outline ? hover.backgroundColor : hover.color,\n      backgroundColor: outline ? hover.color : hover.backgroundColor,\n      borderColor: hover.backgroundColor,\n    }\n  })\n};\n\nconst Button = ({\n  className,\n  inverted,\n  outline,\n  ...passedProps\n}) => (\n  <button\n    {...passedProps}\n    className={classNames(className, styles.Button)}\n  />\n);\n\nButton.propTypes = {\n  className: PropTypes.string,\n};\n\nButton.defaultProps = {\n  className: '',\n};\n\nconst StyledButton = styled(Button)(\n  ({\n    outline,\n    size,\n    theme,\n    variant,\n  }) => {\n    const buttonStyle = getButttonStyle({\n      outline,\n      size,\n      theme,\n      variant,\n    });\n\n    return buttonStyle;\n  }\n);\n\nexport default StyledButton;\n","import Button from './Button';\n\nexport default Button;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport styles from './Control.module.css';\n\nconst Control = ({\n  className,\n  id,\n  label,\n  onChange,\n  type,\n  value,\n  ...passedProps\n}) => (\n  <div\n    {...passedProps}\n    className={classNames(className, styles.Control)}\n  >\n    <label\n      className={styles.label}\n      htmlFor={id}\n    >\n      {label || id}\n    </label>\n    <input\n      className={styles.input}\n      id={id}\n      onChange={onChange}\n      type={type}\n      value={value}\n    />\n  </div>\n);\n\nControl.propTypes = {\n  className: PropTypes.string,\n  id: PropTypes.string.isRequired,\n  label: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n  type: PropTypes.string,\n  value: PropTypes.string.isRequired,\n};\n\nControl.defaultProps = {\n  className: '',\n  label: '',\n  type: 'text',\n};\n\nexport default Control;\n","import Control from './Control';\n\nexport default Control;\n","import colorConvert from 'color-convert';\n\nexport const getContrastRatio = ({ hexA, hexB, luminanceA, luminanceB }) => {\n  luminanceA = luminanceA || luminanceA === 0 ? luminanceA : getLuminance(hexA);\n  luminanceB = luminanceB || luminanceB === 0 ? luminanceB : getLuminance(hexB);\n  const [darker, lighter] = [luminanceA, luminanceB].sort();\n  const contrastRatio = ((lighter + 0.05) / (darker + 0.05)).toFixed(2);\n  return contrastRatio;\n};\n\nexport const getLuminance = hex => {\n  const rgb = colorConvert.hex.rgb(hex);\n\n  let rgb2 = rgb.map((channel, i) => {\n    let c = channel / 255;\n\n    if (c <= 0.03928) {\n      return c / 12.92;\n    } else {\n      return Math.pow((c + 0.055) / 1.055, 2.4);\n    }\n  });\n\n  const luminance = (0.2126 * rgb2[0] + 0.7152 * rgb2[1] + 0.0722 * rgb2[2]);\n  return luminance;\n};\n\nexport const getTargetLuminanceViaHsl = ({\n  attempt = 0,\n  hex,\n  initHsl,\n  luminance: targetLuminance,\n  maxAttempts = 10,\n}) => {\n  const luminance = getLuminance(hex);\n\n  if (luminance === targetLuminance || attempt >= maxAttempts) {\n    return hex;\n  }\n\n  const darken = luminance > targetLuminance;\n  const jumpSize = (darken ? -100 : 100) / Math.pow(2, attempt + 1);\n  let prevHsl = colorConvert.hex.hsl(hex);\n  let safeInitHsl = initHsl !== undefined ? initHsl : prevHsl;\n\n  const hsl = setHsl({\n    hsl: safeInitHsl,\n    l: Math.max(0, Math.min(prevHsl[2] + jumpSize, 100)),\n  });\n\n  if (`#${colorConvert.hsl.hex(hsl)}` === hex) {\n    return hex;\n  }\n\n  return getTargetLuminanceViaHsl({\n    attempt: attempt + 1,\n    hex: `#${colorConvert.hsl.hex(hsl)}`,\n    initHsl: safeInitHsl,\n    luminance: targetLuminance,\n    maxAttempts,\n  });\n};\n\nexport const getTargetContrastViaHsl = ({\n  attempt = 0,\n  baseHex,\n  contrastRatio: targetContrastRatio,\n  hex,\n  initHsl,\n  maxAttempts = 10,\n}) => {\n  const luminanceA = getLuminance(hex);\n  const luminanceB = getLuminance(baseHex);\n  const contrastRatio = getContrastRatio({ luminanceA, luminanceB });\n\n  if (contrastRatio === targetContrastRatio || attempt >= maxAttempts) {\n    return hex;\n  }\n\n  let darken = (\n    (luminanceA > luminanceB && contrastRatio > targetContrastRatio) ||\n    (luminanceA < luminanceB && contrastRatio < targetContrastRatio)\n  );\n\n  const jumpSize = (darken ? -100 : 100) / Math.pow(2, attempt + 1);\n  let prevHsl = colorConvert.hex.hsl(hex);\n  let safeInitHsl = initHsl !== undefined ? initHsl : prevHsl;\n\n  const hsl = setHsl({\n    hsl: safeInitHsl,\n    l: Math.max(0, Math.min(prevHsl[2] + jumpSize, 100)),\n  });\n\n  if (`#${colorConvert.hsl.hex(hsl)}` === hex) {\n    return hex;\n  }\n\n  const nextValues = {\n    attempt: attempt + 1,\n    baseHex,\n    contrastRatio: targetContrastRatio,\n    hex: `#${colorConvert.hsl.hex(hsl)}`,\n    initHsl: safeInitHsl,\n    maxAttempts,\n  };\n\n  console.log(nextValues);\n\n  return getTargetContrastViaHsl(nextValues);\n};\n\n// TODO: Figure out a better algorithm for shifting brightness and saturation for hsv\nexport const getTargetContrastViaHsv = ({\n  attempt = 0,\n  baseHex,\n  contrastRatio: targetContrastRatio,\n  hex,\n  maxAttempts = 10,\n}) => {\n  console.warn(\"HSV color ramps aren't supported currently.\");\n  const luminanceA = getLuminance(hex);\n  const luminanceB = getLuminance(baseHex);\n  const contrastRatio = getContrastRatio({ luminanceA, luminanceB });\n\n  if (contrastRatio === targetContrastRatio || attempt >= maxAttempts) {\n    return hex;\n  } else {\n    let hsv = colorConvert.hex.hsv(hex);\n\n    let darken = (\n      (luminanceA > luminanceB && contrastRatio > targetContrastRatio) ||\n      (luminanceA < luminanceB && contrastRatio < targetContrastRatio)\n    );\n\n    let jumpSize = darken ? 100 - hsv[2] : 100 - hsv[1];\n    jumpSize = jumpSize / Math.pow(2, attempt + 1);\n    hsv = setHsv({\n      hsv,\n      l: !darken ? hsv[1] + jumpSize : hsv[1],\n      v: darken ? hsv[2] + jumpSize : hsv[2],\n    });\n\n    if (`#${colorConvert.hsv.hex(hsv)}` === hex) {\n      return hex;\n    }\n\n    return getTargetContrastViaHsv({\n      attempt: attempt + 1,\n      baseHex,\n      contrastRatio: targetContrastRatio,\n      hex: `#${colorConvert.hsv.hex(hsv)}`,\n      maxAttempts,\n    });\n  }\n};\n\nexport const getTargetContrastViaLab = ({\n  attempt = 0,\n  baseHex,\n  contrastRatio: targetContrastRatio,\n  hex,\n  maxAttempts = 10,\n}) => {\n  const luminanceA = getLuminance(hex);\n  const luminanceB = getLuminance(baseHex);\n  const contrastRatio = getContrastRatio({ luminanceA, luminanceB });\n\n  if (contrastRatio === targetContrastRatio || attempt >= maxAttempts) {\n    return hex;\n  } else {\n    let lab = colorConvert.hex.lab(hex);\n\n    let darken = (\n      (luminanceA > luminanceB && contrastRatio > targetContrastRatio) ||\n      (luminanceA < luminanceB && contrastRatio < targetContrastRatio)\n    );\n\n    let jumpSize = darken ? 0 - lab[0] : 100 - lab[0];\n    jumpSize = jumpSize / Math.pow(2, attempt + 1);\n    lab = setLab({ lab, l: lab[0] + jumpSize});\n\n    if (`#${colorConvert.lab.hex(lab)}` === hex) {\n      return hex;\n    }\n\n    return getTargetContrastViaLab({\n      attempt: attempt + 1,\n      baseHex,\n      contrastRatio: targetContrastRatio,\n      hex: `#${colorConvert.lab.hex(lab)}`,\n      maxAttempts,\n    });\n  }\n};\n\nexport const setHsl = ({ hsl: [h, s, l], h: h2, s: s2, l: l2 }) => ([\n  typeof h2 === 'number' ? h2 : h,\n  typeof s2 === 'number' ? s2 : s,\n  typeof l2 === 'number' ? l2 : l,\n]);\n\nexport const setHsv = ({ hsv: [h, s, v], h: h2, s: s2, v: v2 }) => ([\n  typeof h2 === 'number' ? h2 : h,\n  typeof s2 === 'number' ? s2 : s,\n  typeof v2 === 'number' ? v2 : v,\n]);\n\nexport const setLab = ({ lab: [l, a, b], l: l2, a: a2, b: b2 }) => ([\n  typeof l2 === 'number' ? l2 : l,\n  typeof a2 === 'number' ? a2 : a,\n  typeof b2 === 'number' ? b2 : b,\n]);\n\nexport const getHexFromHexOrName = color => {\n  let safeValue;\n\n  try {\n    safeValue = colorConvert.keyword.hex(color).toLowerCase();\n  } catch(e) {\n    safeValue = color[0] === '#' ? color.substr(1) : color;\n  }\n\n  return `#${safeValue}` || '#000000';\n}\n\nwindow.pxbColors = {\n  colorConvert,\n  getContrastRatio,\n  getHexFromHexOrName,\n  getLuminance,\n  getTargetContrastViaHsl,\n  setHsl,\n  setLab,\n};\n\nexport default {\n  getContrastRatio,\n  getHexFromHexOrName,\n  getLuminance,\n  getTargetContrastViaHsl,\n  setHsl,\n  setLab,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport styles from './Swatch.module.css';\n\nconst Swatch = ({\n  backgroundColor,\n  className,\n  color,\n  ...passedProps\n}) => (\n  <div\n    {...passedProps}\n    className={classNames(styles.Swatch, className)}\n    style={{\n      backgroundColor,\n      color,\n    }}\n  />\n);\n\nSwatch.propTypes = {\n  backgroundColor: PropTypes.string,\n  className: PropTypes.string,\n  color: PropTypes.string,\n};\n\nSwatch.defaultProps = {\n  backgroundColor: '#fff',\n  className: '',\n  color: '#000',\n};\n\nexport default Swatch;\n","import Swatch from './Swatch';\n\nexport default Swatch;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getContrastRatio } from '../../utils/colors';\nimport Swatch from '../Swatch';\nimport styles from './ContrastRatios.module.css';\n\nconst ContrastRatios = ({\n  className,\n  color: value,\n  colors,\n  ...passedProps\n}) => {\n  return (\n    <div className={classNames(styles.ContrastRatios, className)}>\n      Contrast ratio\n      <br />\n      <div className={styles.ramps}>\n        <Swatch\n          backgroundColor={colors.white}\n          color={value}\n        >\n          {getContrastRatio({ hexA: value, hexB: colors.white })}\n        </Swatch>\n        <Swatch\n          backgroundColor={colors.black}\n          color={value}\n        >\n          {getContrastRatio({ hexA: value, hexB: colors.black })}\n        </Swatch>\n        <Swatch\n          backgroundColor={value}\n          color={colors.white}\n        >\n          {getContrastRatio({ hexA: colors.white, hexB: value })}\n        </Swatch>\n        <Swatch\n          backgroundColor={value}\n          color={colors.black}\n        >\n          {getContrastRatio({ hexA: colors.black, hexB: value })}\n        </Swatch>\n      </div>\n    </div>\n  );\n};\n\nContrastRatios.propTypes = {\n  className: PropTypes.string,\n};\n\nContrastRatios.defaultProps = {\n  className: '',\n};\n\nexport default ContrastRatios;\n","import ContrastRatios from './ContrastRatios';\n\nexport default ContrastRatios;\n","import React, { useCallback, useEffect, useMemo, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport colorConvert from 'color-convert';\nimport { getButtons, getSizes } from '../theme-utils.mjs';\nimport Button from '../Button';\nimport Control from './Control';\nimport ContrastRatios from './ContrastRatios';\nimport styles from './ThemeForm.module.css';\n\nexport const getNumberOrDont = (string) => {\n  let number;\n\n  try {\n    number = parseInt(string, 10);\n\n    if (isNaN(number)) {\n      throw new Error('not a number');\n    }\n  } catch(e) {\n    number = null;\n  }\n\n  return number\n};\n\nexport const getHexOrDont = string => string;\n\nexport const getJsonOrDont = (string) => {\n  let json;\n\n  try {\n    json = JSON.parse(string);\n  } catch(e) {\n    json =  {};\n  }\n\n  return json;\n};\n\nconst ThemeForm = ({\n  className,\n  theme: initTheme,\n  onChangeTheme,\n  onApplyTheme,\n}) => {\n  const [mdSize, setMdSize] = useState(initTheme.spacing.md);\n  const [themeForm, setThemeForm] = useState(initTheme);\n\n  useEffect(() => {\n    onChangeTheme(themeForm);\n  }, [onChangeTheme, themeForm]);\n\n  const handleClickApply = useCallback(() => {\n    onApplyTheme(themeForm);\n  }, [onApplyTheme, themeForm]);\n\n  const handleClickRevert = useCallback(() => {\n    setThemeForm(initTheme);\n  }, [initTheme]);\n\n  // COLORS\n  const safeColors = useMemo(() => {\n    const safeColors =  Object.entries(themeForm.colors).reduce((result, [key, value]) => {\n      let safeValue;\n\n      try {\n        safeValue = colorConvert.keyword.hex(value).toLowerCase();\n      } catch(e) {\n        safeValue = value[0] === '#' ? value.substr(1) : value;\n      }\n\n      return {\n        ...result,\n        [key]: `#${safeValue}`,\n      }\n    }, {});\n\n    return safeColors;\n  }, [themeForm.colors]);\n\n  const [colors, setColors] = useState(safeColors);\n\n  useEffect(() => {\n    setColors(safeColors)\n  }, [safeColors]);\n\n  const handleChangeColor = useCallback(({ event, key }) => {\n    console.log({ key, value: event.target.value});\n\n    const nextColors = {\n      ...colors,\n      [key]: getHexOrDont(event.target.value),\n    };\n\n    const nextTheme = {\n      ...themeForm,\n      colors: nextColors,\n      buttons: getButtons({\n        ...themeForm,\n        colors: nextColors,\n      }),\n    };\n\n    setThemeForm(nextTheme);\n  }, [colors, themeForm]);\n\n  // FONTS\n\n  const [fontSizesCount, setFontSizesCount] = useState(Object.keys(initTheme.fonts.sizes).length);\n  const [fontSizes, setFontSizes] = useState(initTheme.fonts.sizes);\n\n  const handleChangeFontSize = useCallback(({ event, key }) => {\n    const nextSizes = {\n      ...fontSizes,\n      [key]: getNumberOrDont(event.target.value),\n    };\n\n    const nextFonts = {\n      ...themeForm.fonts,\n      sizes: nextSizes,\n    };\n\n    const nextTheme = {\n      ...themeForm,\n      buttons: getButtons({\n        ...themeForm,\n        fonts: nextFonts,\n      }),\n      fonts: nextFonts,\n    };\n\n    setFontSizes(nextSizes);\n    setThemeForm(nextTheme);\n  }, [fontSizes, themeForm]);\n\n  const handleChangeFontSizesCount = useCallback(e => {\n    console.log({ fontSizes });\n    const nextFontSizesCount = getNumberOrDont(e.target.value);\n    let nextSizes = getSizes({ count: nextFontSizesCount });\n\n    nextSizes = Object.keys(nextSizes).reduce((result, sizeKey) => {\n      return {\n        ...result,\n        [sizeKey]: fontSizes[sizeKey] || Object.values(fontSizes)[0],\n      };\n    }, {});\n\n    setFontSizes(nextSizes);\n    setFontSizesCount(nextFontSizesCount);\n  }, [fontSizes]);\n\n  const handleChangeMdSize = useCallback(e => {\n    const nextMdSize = getNumberOrDont(e.target.value);\n    const spacing = getSizes({ count: 5, mdSize: nextMdSize });\n    setMdSize(nextMdSize);\n\n    setThemeForm({\n      ...themeForm,\n      buttons: getButtons({ colors: themeForm.colors, fonts: themeForm.fonts, spacing }),\n      spacing,\n    });\n  }, [themeForm]);\n\n  return (\n    <form className={classNames(className, styles.ThemeForm)}>\n      <Control\n        id=\"mdSize\"\n        onChange={handleChangeMdSize}\n        type=\"number\"\n        value={`${mdSize}`}\n      />\n      <section>\n        <h4>Semantic colors</h4>\n        {Object.entries(colors).map(([key, value], i) => {\n          return (\n            <div key={key}>\n              <Control\n                id={`semanticColor-${key}`}\n                key={key}\n                label={key}\n                onChange={event => handleChangeColor({ event, key })}\n                type=\"color\"\n                value={`${value}`}\n              />\n              <div className={styles.contrastRatios}>\n                <ContrastRatios\n                  color={value}\n                  colors={colors}\n                />\n              </div>\n            </div>\n            );\n        })}\n      </section>\n      <Control\n        id=\"fontSizesCount\"\n        onChange={handleChangeFontSizesCount}\n        type=\"number\"\n        value={`${fontSizesCount}`}\n      />\n      <section>\n        <h4>Font sizes</h4>\n        {Object.entries(fontSizes).map(([key, value]) => (\n          <Control\n            id={`fontSize-${key}`}\n            key={key}\n            label={key}\n            onChange={event => handleChangeFontSize({ event, key })}\n            type=\"number\"\n            value={`${value}`}\n          />\n        ))}\n      </section>\n      <div>\n        <Button\n          inverted\n          onClick={handleClickRevert}\n          outline\n          type=\"button\"\n        >\n          Revert\n        </Button>\n        {' '}\n        <Button\n          onClick={handleClickApply}\n          type=\"button\"\n          variant=\"primary\"\n        >\n          Apply\n        </Button>\n      </div>\n    </form>\n  );\n}\n\nThemeForm.propTypes = {\n  className: PropTypes.string,\n};\n\nThemeForm.defaultProps = {\n  className: '',\n};\n\n\nexport default ThemeForm;\n","import ThemeForm from './ThemeForm';\n\nexport default ThemeForm;\n","import React, { useContext, useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { ThemeContext } from 'styled-components';\n// import colorConvert from 'color-convert';\n\nimport {\n  getContrastRatio,\n  getHexFromHexOrName,\n  getLuminance,\n  getTargetContrastViaHsl,\n  getTargetContrastViaHsv,\n  getTargetContrastViaLab,\n  getTargetLuminanceViaHsl,\n} from '../../utils/colors';\n\nimport styles from './ColorRamp.module.css';\n\nconst ColorRamp = ({\n  className,\n  color: initColor,\n  mode,\n  luminances = [],\n  contrastRatios,\n  ...passedProps\n}) => {\n  const themeContext = useContext(ThemeContext);\n  const white = useMemo(() => getHexFromHexOrName(themeContext.colors.white), [themeContext.colors.white]);\n  const black = useMemo(() => getHexFromHexOrName(themeContext.colors.black), [themeContext.colors.black]);\n  const color = useMemo(() => getHexFromHexOrName(initColor), [initColor]);\n\n  let getTargetContrast = useMemo(() => {\n    let getter = getTargetContrastViaHsl;\n    getter = mode === 'lab' ? getTargetContrastViaLab : getter;\n    getter = mode === 'hsv' ? getTargetContrastViaHsv : getter;\n    return getter;\n  }, [mode]);\n\n  let getTargetLuminance = useMemo(() => {\n    let getter = null;\n    getter = mode === 'hsl' && luminances.length ? getTargetLuminanceViaHsl : getter;\n    return getter;\n  }, [mode, luminances]);\n\n  const colors = useMemo(() => {\n    let colors;\n\n    if (getTargetLuminance) {\n      colors = [\n        ...luminances.sort(),\n      ].map((luminance, i) => {\n        return getTargetLuminance({\n          hex: color,\n          luminance,\n        })\n      });\n    } else {\n      colors = [\n        ...contrastRatios.sort().reverse(),\n        ...contrastRatios.sort(),\n      ].map((contrastRatio, i) => {\n        return getTargetContrast({\n          hex: color,\n          baseHex: i < contrastRatios.length ? white : black,\n          contrastRatio,\n        })\n      });\n    }\n\n    colors = colors.map((color, i) => ({\n      baseColor: i < contrastRatios.length ? white : black,\n      color,\n      contrastRatio: getContrastRatio({ hexA: color, hexB: i < contrastRatios.length ? white : black }),\n      luminance: getLuminance(color),\n      key: `${color}-${i}`\n    }));\n\n    colors.sort(({ luminance: a }, { luminance: b }) => a - b);\n\n    return colors;\n  }, [black, color, contrastRatios, getTargetContrast, getTargetLuminance, luminances, white]);\n\n  return (\n    <div\n      {...passedProps}\n      className={classNames(className, styles.ColorRamp)}\n    >\n      <div style={{\n        display: 'flex',\n        flexFlow: 'row nowrap',\n        alignItems: 'stretch',\n        height: 'auto',\n        border: '1px solid #efefef',\n      }}>\n        {colors.map(({\n          baseColor,\n          color,\n          contrastRatio,\n          key,\n          luminance,\n        }) => (\n          <div\n            key={key}\n            style={{\n              alignItems: 'center',\n              background: color,\n              color: luminance > 0.5 ? themeContext.colors.black : themeContext.colors.white,\n              display: 'flex',\n              flex: '1 1 auto',\n              justifyContent: 'center',\n              padding: '1rem',\n            }}\n          >\n            Color: {color}\n            <br/>\n            Base: {baseColor}\n            <br/>\n            Contrast: {contrastRatio}\n            <br/>\n            Luminance: {luminance.toFixed(4)}\n          </div>\n        ))}\n      </div>\n    </div>\n  )\n};\n\nColorRamp.propTypes = {\n  className: PropTypes.string,\n  color: PropTypes.string.isRequired,\n  contrastRatios: PropTypes.arrayOf(PropTypes.number),\n};\n\nColorRamp.defaultProps = {\n  className: '',\n};\n\nexport default ColorRamp;\n","import ColorRamp from './ColorRamp';\n\nexport default ColorRamp;\n","import React, { useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport colorConvert from 'color-convert';\nimport styled from 'styled-components';\nimport { getContrastRatio, getHexFromHexOrName, getLuminance, setLab } from '../../utils/colors';\nimport styles from './ColorViz.module.css';\n\nconst ColorViz = ({\n  className,\n  color,\n  ...passedProps\n}) => {\n  const safeColor = useMemo(() => getHexFromHexOrName(color), [color]);\n  const luminance = useMemo(() => getLuminance(safeColor), [safeColor]);\n  const hsl = useMemo(() => colorConvert.hex.hsl(safeColor), [safeColor]);\n  const lab = useMemo(() => colorConvert.hex.lab(safeColor), [safeColor]);\n  const units = 50;\n\n  const rows = useMemo(() => new Array(units).fill([]).map((row, ri) => {\n    let columns = new Array(units).fill('');\n\n    // Turn 0-5 into a range from 0-100\n    const getPercent = i => {\n      return i / (units - 1) * 100;\n    }\n\n    columns = columns.map((column, ci) => {\n      const adjustedColor = `#${colorConvert.lab.hex(setLab({ lab, l: 100 - getPercent(ri) }))}`;\n      const contrastRatio = getContrastRatio({ hexA: adjustedColor, hexB: '#ffffff' });\n\n      return {\n        contrastRatio,\n        color: contrastRatio >= 1 ? adjustedColor : 'black',\n      }\n    });\n\n    return columns;\n  }), [lab]);\n\n  const colorPoint = useMemo(() => {\n    const [, s, l] = hsl;\n    return {\n      x: `${s}%`,\n      y: `${100 - l}%`,\n    }\n  }, [hsl]);\n\n  return (\n    <>\n      <div className={styles.stats}>\n        Hue: {hsl[0]}\n        <br />\n        a/b ratio: {(lab[1] / lab[2]).toFixed(2)}\n        <br />\n        Saturation to luminance ratio: {((hsl[1] / 100) / luminance).toFixed(0)}\n        <br />\n        Saturation: {hsl[1]}\n        <br />\n        Luminance: {luminance}\n        <br />\n        Lightness: {lab[0]}\n        <br />\n        Closest target luminance: {1}\n      </div>\n      <div\n        {...passedProps}\n        className={classNames(className, styles.ColorViz)}\n        style={{\n          border: `1px solid ${color}`,\n          borderRadius: '4px',\n          position: 'relative',\n        }}\n      >\n        <div\n          style={{\n            backgroundColor: color,\n            display: 'grid',\n            height: '10rem',\n            gridTemplateRows: `repeat(${units}, 1fr)`,\n            gridTemplateColumns: `repeat(${units}, 1fr)`,\n          }}\n        >\n          {rows.map((row, ri) => row.map((column, ci) => (\n            <div\n              key={`r${ri}-c${ci}`}\n              style={{\n                display: 'block',\n                backgroundColor: column.color,\n              }}\n              title={column.contrastRatio}\n            />\n          )))}\n        </div>\n        <div\n          className={styles.colorPoint}\n          style={{\n            position: 'absolute',\n            top: colorPoint.y,\n            left: colorPoint.x,\n            border: '2px solid black',\n            boxShadow: '0 0 0px 1px white',\n            height: '1rem',\n            width: '1rem',\n            marginLeft: '-0.5rem',\n            marginTop: '-0.5rem',\n            borderRadius: '0.5rem',\n            backgroundColor: color,\n          }}\n        />\n      </div>\n    </>\n  );\n};\n\nColorViz.propTypes = {\n  className: PropTypes.string,\n};\n\nColorViz.defaultProps = {\n  className: '',\n};\n\nconst StyledColorViz = styled(ColorViz)(\n  ({\n    backgroundColor,\n    theme,\n  }) => {\n    return {\n      backgroundColor: 'pink',\n      color: theme.color,\n    };\n  }\n);\n\nexport default StyledColorViz;\n","import ColorViz from './ColorViz';\n\nexport default ColorViz;\n","import React, { useContext, useMemo, useState } from 'react';\nimport { ThemeContext } from 'styled-components';\n\nimport { getHexFromHexOrName, getLuminance } from '../utils/colors';\nimport Button from '../Button';\nimport ColorRamp from '../ThemeForm/ColorRamp';\nimport ColorViz from '../ThemeForm/ColorViz';\nimport styles from './Examples.module.css';\n\nconst ColorExample = ({\n  name,\n  hex,\n  mode,\n}) => {\n  const [isExpanded, setIsExpanded] = useState(false);\n  const safeHex = useMemo(() => getHexFromHexOrName(hex), [hex]);\n\n  return (\n    <div>\n      <h3>\n        <input\n          checked={!!isExpanded}\n          onChange={event => setIsExpanded(event.target.checked)}\n          type=\"checkbox\"\n          style={{ marginRight: '1rem' }}\n        />\n        <span\n          className={styles.swatch}\n          style={{ backgroundColor: hex }}\n        />\n      {name}{' '}\n        <small className={styles.subtitle}>{getLuminance(safeHex).toFixed(2)}</small>\n      </h3>\n      <ColorRamp\n        color={hex}\n        contrastRatios={[7, 4.5, 2]}\n        luminances={[0.0724, 0.0999, 0.1818, 0.2122, 0.3604, 0.4633]}\n        mode={mode}\n      />\n      <ColorRamp\n        color={hex}\n        contrastRatios={[7, 4.5, 2]}\n        mode={mode}\n      />\n      {/*\n        contrastRatios={[7, 4.5, 1]}\n        luminances={[0.0086, 0.0999, 0.1818, 0.2122, 0.3604, 1] : undefined}\n        luminances={[0.0724, 0.0999, 0.1818, 0.2122, 0.3604, 0.4633]}\n        luminances={safeHex === '#ffffff' ? [0.0194, 0.1046, 0.1812, 0.2195, 0.3564, 0.6939] : undefined}\n      */}\n      {isExpanded && (\n        <div style={{ margin: '0.5rem 0' }}>\n          <ColorViz color={hex} />\n        </div>\n      )}\n    </div>\n  );\n};\n\nconst Examples = () => {\n  const [mode, setColorMode] = useState('hsl');\n  const themeContext = useContext(ThemeContext);\n\n  return (\n    <>\n      <div>\n        Pick a color mode:{' '}\n        <select value={mode.toUpperCase()} onChange={(event) => setColorMode(event.target.value.toLowerCase())}>\n          <option>HSL</option>\n          <option>HSV</option>\n          <option>LAB</option>\n        </select>\n      </div>\n      <h1 id=\"heading\">Heading</h1>\n      <Button size=\"sm\">Button</Button>\n      {' '}\n      <Button>Button</Button>\n      {' '}\n      <Button size=\"lg\">Button</Button>\n      {' '}\n      <input value=\"Input\" onChange={() => {}}></input>\n      <p>\n        Paragraph\n      </p>\n      <a href=\"#heading\">Link</a>\n      <div className={styles.card}>\n        <div className={styles.cardHead}>\n          Card head\n        </div>\n        <div className={styles.cardBody}>\n          Card body\n        </div>\n        <div className={styles.cardFoot}>\n          Card foot\n        </div>\n      </div>\n      <div>\n        <h2>Color ramps</h2>\n        {Object.entries(themeContext.colors)\n          .filter(([key]) => true || ['primary', 'neutral'].indexOf(key) >= 0)\n          .map(([key, value]) => (\n            <ColorExample\n              key={key}\n              name={key}\n              hex={value}\n              mode={mode}\n            />\n          ))\n        }\n      </div>\n    </>\n  );\n};\n\nexport default Examples;\n","import Examples from './Examples';\n\nexport default Examples;\n","import React, { useCallback, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Mousetrap from 'mousetrap';\nimport styles from './GridOverlay.module.css';\n\n\nconst GridOverlay = () => {\n  const [isVisible, setIsVisible] = useState(false);\n\n  const toggleIsVisible = useCallback(() => {\n    setIsVisible(!isVisible);\n  }, [isVisible]);\n\n  useEffect(() => {\n    Mousetrap.bind('.', toggleIsVisible);\n\n    return () => {\n      Mousetrap.unbind('.', toggleIsVisible);\n    };\n  }, [toggleIsVisible]);\n\n  if (!isVisible) {\n    return null;\n  }\n\n  return (\n    <div className={styles.GridOverlay} />\n  );\n};\n\nGridOverlay.propTypes = {\n  className: PropTypes.string,\n};\n\nGridOverlay.defaultProps = {\n  className: '',\n};\n\nexport default GridOverlay;\n","import GridOverlay from './GridOverlay';\n\nexport default GridOverlay;\n","import React, { useCallback, useState } from 'react';\nimport { ThemeProvider } from 'styled-components'\n\nimport './App.css';\nimport styles from './App.module.css';\nimport defaultTheme from './theme.mjs';\nimport ThemeForm from './ThemeForm';\nimport Examples from './Examples';\nimport GridOverlay from './GridOverlay';\n\nfunction App() {\n  const [theme, setTheme] = useState(defaultTheme);\n  const [themePreview, setThemePreview] = useState(theme);\n\n  const handleChangeThemePreview = useCallback((theme) => {\n    setThemePreview(theme);\n  }, []);\n\n  const handleApplyThemePreview = useCallback((theme) => {\n    setTheme(themePreview);\n  }, [themePreview]);\n\n  return (\n    <ThemeProvider theme={theme}>\n      <div className={`App ${styles.App}`}>\n        <div className={styles.form}>\n          <ThemeForm\n            theme={theme}\n            onChangeTheme={handleChangeThemePreview}\n            onApplyTheme={handleApplyThemePreview}\n          />\n        </div>\n        <div className={styles.example}>\n          <ThemeProvider theme={themePreview} >\n            <Examples />\n          </ThemeProvider>\n        </div>\n      </div>\n      <GridOverlay />\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}