{"version":3,"sources":["App.module.css","ThemeForm/Control/Control.module.css","ThemeForm/ThemeForm.module.css","Button/Button.module.css","Swatch/Swatch.module.css","GridOverlay/GridOverlay.module.css","utils/colors.js","theme-utils.mjs","theme.mjs","prop-types.js","Button/Button.js","Button/index.js","Swatch/Swatch.js","Swatch/index.js","ThemeForm/Control/Control.js","ThemeForm/Control/index.js","ThemeForm/ThemeForm.js","ThemeForm/index.js","Examples/index.js","Examples/Examples.js","GridOverlay/GridOverlay.js","GridOverlay/index.js","App.js","serviceWorker.js","index.js","Examples/Examples.module.css"],"names":["module","exports","getContrastRatio","hexA","hexB","luminanceA","luminanceB","getLuminance","sort","darker","toFixed","getNextLuminanceByContrastRatio","luminance","contrastRatio","getPrevLuminanceByContrastRatio","hex","rgb2","colorConvert","rgb","map","channel","i","c","Math","pow","setColorByContrastWithHsl","targetLuminance","attempt","baseHex","targetContrastRatio","originalContrastRatio","direction","maxAttempts","nextColor","setColorByLuminanceWithHsl","initHsl","jumpSize","prevHsl","hsl","safeInitHsl","undefined","setHsl","l","max","min","h","s","h2","s2","l2","getHexFromHexOrName","color","safeValue","keyword","toLowerCase","e","substr","window","pxbColors","getColors","baseColors","contrastRatios","Object","entries","reduce","result","key","unsafeColor","white","black","base","indexOf","forEach","getButtons","customColors","colors","customFonts","fonts","customSpacing","spacing","borderWidth","roundness","shine","sizes","sm","fontSize","paddingH","paddingV","xs","md","lg","variants","default","backgroundColor","neutral","hover","focus","active","disabled","primary","success","info","warning","danger","getSizeLabelFromIndex","sizeIndex","smSizeLabels","lgSizeLabels","length","getSizes","offset","count","customSizes","lgCount","mdSize","smCount","label","size","Error","floor","Array","fill","baseSize","shared","elevation","inverted","getShared","sansSerif","serif","xl","weights","normal","bold","theme","buttons","PropTypes","oneOfType","func","string","shape","$$typeof","symbol","render","arrayOf","getButttonStyle","outline","variant","idealSize","ceil","px","abs","ratio","getMinLineHeight","lineHeightRatio","borderColor","borderStyle","borderRadius","paddingBottom","paddingLeft","paddingRight","paddingTop","lineHeight","Button","className","Tag","tag","passedProps","classNames","styles","defaultProps","styled","Swatch","style","Control","id","onChange","type","value","htmlFor","input","getNumberOrDont","number","parseInt","isNaN","ThemeForm","initTheme","onChangeTheme","onApplyTheme","useState","setMdSize","themeForm","setThemeForm","importInputFileRef","useRef","useEffect","handleClickApply","useCallback","handleClickRevert","safeBaseColors","useMemo","setColors","handleChangeColor","nextColors","nextTheme","debouncedHandleChangeColor","debounce","keys","fontSizesCount","setFontSizesCount","fontSizes","setFontSizes","handleChangeFontSize","event","nextSizes","target","nextFonts","handleChangeFontSizesCount","nextFontSizesCount","sizeKey","values","handleChangeMdSize","nextMdSize","handleClickImport","current","click","handleChangeImport","reader","FileReader","readAsText","files","onload","JSON","parse","console","warn","message","swatches","variantKeyA","variantKeyB","charCodeAt","filter","variantKey","swatch","onClick","download","href","encodeURIComponent","stringify","display","ref","height","left","opacity","position","top","width","zIndex","tabIndex","Examples","useContext","ThemeContext","card","cardHead","cardBody","cardFoot","GridOverlay","isVisible","setIsVisible","toggleIsVisible","Mousetrap","bind","unbind","App","defaultTheme","setTheme","themePreview","setThemePreview","handleChangeThemePreview","handleApplyThemePreview","form","example","Boolean","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.ecb940bd.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__16ZpL\",\"form\":\"App_form__30Y9M\",\"example\":\"App_example__1C_qW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Control\":\"Control_Control__3EPTo\",\"label\":\"Control_label__3Ujpe\",\"input\":\"Control_input__2uiDw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ThemeForm\":\"ThemeForm_ThemeForm__SOs96\",\"swatches\":\"ThemeForm_swatches__3cWYc\",\"swatch\":\"ThemeForm_swatch__dduV2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__1Isrx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Swatch\":\"Swatch_Swatch__Hae-f\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"GridOverlay\":\"GridOverlay_GridOverlay__38eQu\"};","import colorConvert from 'color-convert';\n\nexport const getContrastRatio = ({ hexA, hexB, luminanceA, luminanceB }) => {\n  luminanceA = luminanceA || luminanceA === 0 ? luminanceA : getLuminance(hexA);\n  luminanceB = luminanceB || luminanceB === 0 ? luminanceB : getLuminance(hexB);\n  const [darker, lighter] = [luminanceA, luminanceB].sort();\n  const contrastRatio = ((lighter + 0.05) / (darker + 0.05)).toFixed(2);\n  return contrastRatio;\n};\n\nexport const getNextLuminanceByContrastRatio = ({ luminance, contrastRatio }) =>\n  luminance * contrastRatio + contrastRatio / 20 - 1 / 20;\n\nexport const getPrevLuminanceByContrastRatio = ({ luminance, contrastRatio }) =>\n  (luminance + 1 / 20) / contrastRatio - 1 / 20;\n\nexport const getLuminance = hex => {\n  const rgb = colorConvert.hex.rgb(hex);\n\n  let rgb2 = rgb.map((channel, i) => {\n    let c = channel / 255;\n\n    if (c <= 0.03928) {\n      return c / 12.92;\n    } else {\n      return Math.pow((c + 0.055) / 1.055, 2.4);\n    }\n  });\n\n  const luminance = (0.2126 * rgb2[0] + 0.7152 * rgb2[1] + 0.0722 * rgb2[2]);\n  return luminance;\n};\n\nexport const setColorByLuminanceWithHsl = ({\n  attempt = 0,\n  hex,\n  initHsl,\n  luminance: targetLuminance,\n  maxAttempts = 10,\n}) => {\n  const luminance = getLuminance(hex);\n\n  if (luminance === targetLuminance || attempt >= maxAttempts) {\n    return hex;\n  }\n\n  const darken = luminance > targetLuminance;\n  const jumpSize = (darken ? -100 : 100) / Math.pow(2, attempt + 1);\n  let prevHsl = colorConvert.hex.hsl(hex);\n  let safeInitHsl = initHsl !== undefined ? initHsl : prevHsl;\n\n  const hsl = setHsl({\n    hsl: safeInitHsl,\n    l: Math.max(0, Math.min(prevHsl[2] + jumpSize, 100)),\n  });\n\n  if (`#${colorConvert.hsl.hex(hsl)}` === hex) {\n    return hex;\n  }\n\n  return setColorByLuminanceWithHsl({\n    attempt: attempt + 1,\n    hex: `#${colorConvert.hsl.hex(hsl)}`,\n    initHsl: safeInitHsl,\n    luminance: targetLuminance,\n    maxAttempts,\n  });\n};\n\nexport const setColorByContrastWithHsl = ({\n  attempt = 0,\n  baseHex,\n  contrastRatio: targetContrastRatio,\n  originalContrastRatio,\n  direction,\n  hex,\n  maxAttempts = 10,\n}) => {\n  let targetLuminance;\n  originalContrastRatio = originalContrastRatio || targetContrastRatio;\n\n  if (!direction) {\n    targetLuminance = getLuminance(baseHex) > 0.5 ?\n      getPrevLuminanceByContrastRatio({\n        contrastRatio: targetContrastRatio,\n        luminance: getLuminance(baseHex),\n      }) :\n      getNextLuminanceByContrastRatio({\n        contrastRatio: targetContrastRatio,\n        luminance: getLuminance(baseHex),\n      });\n  } else if (direction === 'asc') {\n    targetLuminance = getNextLuminanceByContrastRatio({\n      contrastRatio: targetContrastRatio,\n      luminance: getLuminance(baseHex),\n    });\n  } else if (direction === 'desc') {\n    targetLuminance = getPrevLuminanceByContrastRatio({\n      contrastRatio: targetContrastRatio,\n      luminance: getLuminance(baseHex),\n    })\n  }\n\n  const nextColor = setColorByLuminanceWithHsl({\n    hex,\n    luminance: targetLuminance,\n    maxAttempts,\n  });\n\n  if (getContrastRatio({ hexA: nextColor, hexB: baseHex }) >= originalContrastRatio || attempt > maxAttempts) {\n    return nextColor;\n  }\n\n  return setColorByContrastWithHsl({\n    attempt: attempt + 1,\n    baseHex,\n    contrastRatio: targetContrastRatio + 0.05,\n    originalContrastRatio,\n    direction,\n    hex,\n    maxAttempts,\n  });\n};\n\nexport const setHsl = ({ hsl: [h, s, l], h: h2, s: s2, l: l2 }) => ([\n  typeof h2 === 'number' ? h2 : h,\n  typeof s2 === 'number' ? s2 : s,\n  typeof l2 === 'number' ? l2 : l,\n]);\n\nexport const getHexFromHexOrName = color => {\n  let safeValue;\n\n  try {\n    safeValue = colorConvert.keyword.hex(color).toLowerCase();\n  } catch(e) {\n    safeValue = color[0] === '#' ? color.substr(1) : color;\n  }\n\n  return `#${safeValue}` || '#000000';\n}\n\nwindow.pxbColors = {\n  colorConvert,\n  getContrastRatio,\n  getHexFromHexOrName,\n  getLuminance,\n  setColorByContrastWithHsl,\n  setHsl,\n};\n\nexport default {\n  getContrastRatio,\n  getHexFromHexOrName,\n  getLuminance,\n  setColorByContrastWithHsl,\n  setHsl,\n};\n","import { getHexFromHexOrName, setColorByContrastWithHsl } from './utils/colors';\n\nexport const getColors = ({ baseColors }) => {\n\tconst bgStep = 1.1;\n\tconst contrastRatios = [7, 4.5, 3];\n\n\treturn Object.entries(baseColors).reduce((result, [key, unsafeColor]) => {\n\t\tconst color = getHexFromHexOrName(unsafeColor);\n\t\tconst white = getHexFromHexOrName(baseColors.white);\n\t\tconst black = getHexFromHexOrName(baseColors.black);\n\t\t//\n\t\t// if (key !== 'primary') {\n\t\t// \treturn result;\n\t\t// }\n\n\t\tresult[key] = {};\n\n\t\tresult[key].base = color;\n\n\t\tif (['white', 'black'].indexOf(key) >= 0) {\n\t\t\treturn result;\n\t\t}\n\n    result[key]['lite-bg'] = setColorByContrastWithHsl({\n      hex: color,\n      baseHex: white,\n      contrastRatio: bgStep,\n    });\n\n\t\tcontrastRatios.forEach((contrastRatio, i) => {\n\t\t\t// Large text\n\t    result[key][`lite-${i + 1}`] = setColorByContrastWithHsl({\n\t      hex: color,\n\t      baseHex: result[key]['lite-bg'],\n\t      contrastRatio,\n\t      direction: 'desc',\n\t    });\n\t\t});\n\n\t\tresult[key]['dark-bg'] = setColorByContrastWithHsl({\n      hex: color,\n      baseHex: black,\n      contrastRatio: bgStep,\n    });\n\n\t\tcontrastRatios.forEach((contrastRatio, i) => {\n\t\t\t// Large text\n\t    result[key][`dark-${i + 1}`] = setColorByContrastWithHsl({\n\t      hex: color,\n\t      baseHex: result[key]['dark-bg'],\n\t      contrastRatio: contrastRatio,\n\t      direction: 'asc',\n\t    });\n\t\t});\n\n\t\treturn result;\n\t}, {});\n}\n\nexport const getButtons = ({\n\tcolors: customColors,\n\tfonts: customFonts,\n\tspacing: customSpacing,\n}) => ({\n\tborderWidth: 1,\n\troundness: 0.2,\n\tshine: 1, // Very shiny: glass, shiny: plastic, slightly shiny: paper, 0: flat\n\tsizes: {\n\t\tsm: {\n\t\t\tfontSize: customFonts.sizes.sm,\n\t\t\tpaddingH: customSpacing.sm,\n\t\t\tpaddingV: customSpacing.xs,\n\t\t},\n\t\tmd: {\n\t\t\tfontSize: customFonts.sizes.md,\n\t\t\tpaddingH: customSpacing.md,\n\t\t\tpaddingV: customSpacing.sm,\n\t\t},\n\t\tlg: {\n\t\t\tfontSize: customFonts.sizes.lg,\n\t\t\tpaddingH: customSpacing.md,\n\t\t\tpaddingV: customSpacing.sm,\n\t\t},\n\t},\n\tvariants: {\n\t\tdefault: {\n\t\t\tbackgroundColor: customColors.neutral['lite-2'],\n\t\t\tcolor: customColors.white.base,\n\t\t\thover: {\n\t\t\t\tbackgroundColor: customColors.neutral['lite-1'],\n\t\t\t\tcolor: customColors.white.base,\n\t\t\t},\n\t\t\tfocus: {\n\t\t\t\tbackgroundColor: customColors.neutral['lite-1'],\n\t\t\t\tcolor: customColors.white.base,\n\t\t\t},\n\t\t\tactive: {\n\t\t\t\tbackgroundColor: customColors.neutral['lite-1'],\n\t\t\t\tcolor: customColors.white.base,\n\t\t\t},\n\t\t\tdisabled: {\n\t\t\t\tbackgroundColor: customColors.neutral['lite-3'],\n\t\t\t\tcolor: customColors.white.base,\n\t\t\t},\n\t\t},\n\t\tprimary: {\n\t\t\tbackgroundColor: customColors.primary['lite-2'],\n\t\t\tcolor: customColors.white.base,\n\t\t\thover: {\n\t\t\t\tbackgroundColor: customColors.primary['lite-1'],\n\t\t\t\tcolor: customColors.white.base,\n\t\t\t},\n\t\t\tfocus: {\n\t\t\t\tbackgroundColor: customColors.primary['lite-1'],\n\t\t\t\tcolor: customColors.white.base,\n\t\t\t},\n\t\t\tactive: {\n\t\t\t\tbackgroundColor: customColors.primary['lite-1'],\n\t\t\t\tcolor: customColors.white.base,\n\t\t\t},\n\t\t\tdisabled: {\n\t\t\t\tbackgroundColor: customColors.primary['lite-3'],\n\t\t\t\tcolor: customColors.white.base,\n\t\t\t},\n\t\t},\n\t\tsuccess: {\n\t\t\tbackgroundColor: customColors.success['lite-2'],\n\t\t\tcolor: customColors.white.base,\n\t\t\thover: {\n\t\t\t\tbackgroundColor: customColors.success['lite-1'],\n\t\t\t\tcolor: customColors.white.base,\n\t\t\t},\n\t\t\tfocus: {\n\t\t\t\tbackgroundColor: customColors.success['lite-1'],\n\t\t\t\tcolor: customColors.white.base,\n\t\t\t},\n\t\t\tactive: {\n\t\t\t\tbackgroundColor: customColors.success['lite-1'],\n\t\t\t\tcolor: customColors.white.base,\n\t\t\t},\n\t\t\tdisabled: {\n\t\t\t\tbackgroundColor: customColors.success['lite-3'],\n\t\t\t\tcolor: customColors.white.base,\n\t\t\t},\n\t\t},\n\t\tinfo: {\n\t\t\tbackgroundColor: customColors.info['lite-2'],\n\t\t\tcolor: customColors.white.base,\n\t\t\thover: {\n\t\t\t\tbackgroundColor: customColors.info['lite-1'],\n\t\t\t\tcolor: customColors.white.base,\n\t\t\t},\n\t\t\tfocus: {\n\t\t\t\tbackgroundColor: customColors.info['lite-1'],\n\t\t\t\tcolor: customColors.white.base,\n\t\t\t},\n\t\t\tactive: {\n\t\t\t\tbackgroundColor: customColors.info['lite-1'],\n\t\t\t\tcolor: customColors.white.base,\n\t\t\t},\n\t\t\tdisabled: {\n\t\t\t\tbackgroundColor: customColors.info['lite-3'],\n\t\t\t\tcolor: customColors.white.base,\n\t\t\t},\n\t\t},\n\t\tneutral: {\n\t\t\tbackgroundColor: customColors.neutral['lite-2'],\n\t\t\tcolor: customColors.white.base,\n\t\t\thover: {\n\t\t\t\tbackgroundColor: customColors.neutral['lite-1'],\n\t\t\t\tcolor: customColors.white.base,\n\t\t\t},\n\t\t\tfocus: {\n\t\t\t\tbackgroundColor: customColors.neutral['lite-1'],\n\t\t\t\tcolor: customColors.white.base,\n\t\t\t},\n\t\t\tactive: {\n\t\t\t\tbackgroundColor: customColors.neutral['lite-1'],\n\t\t\t\tcolor: customColors.white.base,\n\t\t\t},\n\t\t\tdisabled: {\n\t\t\t\tbackgroundColor: customColors.neutral['lite-3'],\n\t\t\t\tcolor: customColors.white.base,\n\t\t\t},\n\t\t},\n\t\twarning: {\n\t\t\tbackgroundColor: customColors.warning['lite-2'],\n\t\t\tcolor: customColors.white.base,\n\t\t\thover: {\n\t\t\t\tbackgroundColor: customColors.warning['lite-1'],\n\t\t\t\tcolor: customColors.white.base,\n\t\t\t},\n\t\t\tfocus: {\n\t\t\t\tbackgroundColor: customColors.warning['lite-1'],\n\t\t\t\tcolor: customColors.white.base,\n\t\t\t},\n\t\t\tactive: {\n\t\t\t\tbackgroundColor: customColors.warning['lite-1'],\n\t\t\t\tcolor: customColors.white.base,\n\t\t\t},\n\t\t\tdisabled: {\n\t\t\t\tbackgroundColor: customColors.warning['lite-3'],\n\t\t\t\tcolor: customColors.white.base,\n\t\t\t},\n\t\t},\n\t\tdanger: {\n\t\t\tbackgroundColor: customColors.danger['lite-2'],\n\t\t\tcolor: customColors.white.base,\n\t\t\thover: {\n\t\t\t\tbackgroundColor: customColors.danger['lite-1'],\n\t\t\t\tcolor: customColors.white.base,\n\t\t\t},\n\t\t\tfocus: {\n\t\t\t\tbackgroundColor: customColors.danger['lite-1'],\n\t\t\t\tcolor: customColors.white.base,\n\t\t\t},\n\t\t\tactive: {\n\t\t\t\tbackgroundColor: customColors.danger['lite-1'],\n\t\t\t\tcolor: customColors.white.base,\n\t\t\t},\n\t\t\tdisabled: {\n\t\t\t\tbackgroundColor: customColors.danger['lite-3'],\n\t\t\t\tcolor: customColors.white.base,\n\t\t\t},\n\t\t},\n\t},\n});\n\nexport const getMinLineHeight = ({ size, spacing }) => {\n\tconst idealSize = size * 1.4;\n\tconst floor = Math.floor(idealSize / spacing.xs) * spacing.xs;\n\tconst ceil = Math.ceil(idealSize / spacing.xs) * spacing.xs;\n\tconst px = Math.abs(idealSize - floor) <= Math.abs(idealSize - ceil) ? floor : ceil;\n\tconst ratio = px / size;\n\n\treturn {\n\t\tpx,\n\t\tratio,\n\t}\n};\n\nexport const getShared = ({ colors: customColors }) => ({\n\tbackgroundColor: customColors.white,\n\tcolor: customColors.black,\n\televation: 1,\n\tinverted: false,\n\troundness: 0,\n\tshine: 0,\n});\n\nexport const getSizeLabelFromIndex = sizeIndex => {\n\tconst smSizeLabels = ['sm', 'xs'];\n\tconst lgSizeLabels = ['lg', 'xl'];\n\tconst baseSizeLabel = 'md';\n\n\tif (sizeIndex < 0) {\n\t\tif (-1 * sizeIndex <= smSizeLabels.length) {\n\t\t\treturn smSizeLabels[-1 * sizeIndex - 1];\n\t\t}\n\n\t\treturn `${-1 * sizeIndex - 1}${smSizeLabels[smSizeLabels.length - 1]}`;\n\t}\n\n\tif (sizeIndex > 0) {\n\t\tif (sizeIndex <= lgSizeLabels.length) {\n\t\t\treturn lgSizeLabels[sizeIndex - 1];\n\t\t}\n\n\t\treturn `${sizeIndex - 1}${lgSizeLabels[lgSizeLabels.length - 1]}`;\n\t}\n\n\treturn baseSizeLabel;\n}\n\nexport const getSizes = ({\n\tcount,\n\tcustomSizes = {},\n\tlgCount = 0,\n\tmdSize = null,\n\tsmCount = 0,\n}) => {\n\tlet offset;\n\n\tlet sizes = [{\n\t\tlabel: 'md',\n\t\tsize: mdSize,\n\t}];\n\n\tif (count) {\n\t\tif (count < 1) {\n\t\t\tthrow new Error('Count must be at least 1');\n\t\t}\n\n\t\toffset = Math.floor(count / 2);\n\t\tsizes = new Array(count).fill(null).map((size, i) => i - offset);\n\t} else if (lgCount >= 0 && smCount >= 0) {\n\t\toffset = smCount;\n\t\tsizes = new Array(1 + lgCount + smCount).fill(null).map((size, i) => i - offset);\n\t} else {\n\t\tthrow new Error('You must define `count` _or_ `lgCount`/`smCount`');\n\t}\n\n\tsizes = sizes.map(sizeIndex => {\n\t\tlet size = {\n\t\t\tlabel: getSizeLabelFromIndex(sizeIndex),\n\t\t\tsize: mdSize * Math.pow(2, sizeIndex),\n\t\t};\n\n\t\treturn size;\n\t});\n\n\treturn sizes.reduce((result, size) => ({\n\t\t...result,\n\t\t[size.label]: size.size,\n\t}), {});\n}\n\nexport default {\n  getSizes,\n};\n","import { getButtons, getColors, getShared, getSizes } from './theme-utils';\n\nconst baseSize = 4;\n\nconst spacing = getSizes({ count: 5, mdSize: baseSize * 4 });\n\nconst baseColors = {\n\twhite: 'white',\n\tblack: '#16161d',\n\tprimary: 'blue',\n\tsuccess: 'green',\n\tinfo: 'lightblue',\n\tneutral: '#16161d',\n\twarning: 'yellow',\n\tdanger: 'red',\n};\n\nconst colors = getColors({ baseColors });\n\nconst shared = getShared({ colors });\n\nconst fonts = {\n\tsansSerif: 'sans-serif',\n\tserif: 'serif',\n\tsizes: {\n\t\txs: 10,\n\t\tsm: 12,\n\t\tmd: 16,\n\t\tlg: 24,\n\t\txl: 32,\n\t},\n\tweights: {\n\t\tnormal: 400,\n\t\tbold: 700,\n\t},\n};\n\nconst buttons = getButtons({ colors, fonts, spacing });\n\n\t/*\n\t\tDark mode?\n\t\t- on/off\n\n\t\tRoundness applies to button and card corners.\n\t\t- Should you be able to separate them?\n\n\t\tButton surfaces should be able to look\n\t\t- glass-shiny (old iOS)\n\t\t- softly shaded (plastic?)\n\t\t- totally flat (paper?)\n\t\t- soft around the edges (neuomorphic?)\n\n\t\tButton shapes should be able to look\n\t\t- Totally pill shaped\n\t\t- Slightly rounded\n\n\t\tButtons should be able to elevate:\n\t\t- Not at all - no shadows\n\t\t- float above the background (distant, large shadows)\n\n\t\tNeumorphism\n\t\t- Emboss\n\t\t- Float\n\t\t- None\n\n\t\tButton style schemes\n\t\t- link style - no border, no background\n\t\t- Standard, semantic color background, inverted foreground\n\t\t- Pastel, i.e. monochomatic with tinted background, intense foreground\n\n\t\tFloating panels should have\n\t\t- Roundness\n\t\t- Elevation\n\n\t\tAnd a different material palette\n\t\t- Edged for visibility\n\t\t- Edged for 3D realism\n*/\n\nconst theme = {\n\tbaseColors,\n\tbuttons,\n\tcolors,\n\tfonts,\n\tshared,\n\tspacing,\n};\n\nexport default theme;\n","import PropTypes from 'prop-types';\n\nexport const tagPropType = PropTypes.oneOfType([\n  PropTypes.func,\n  PropTypes.string,\n  PropTypes.shape({ $$typeof: PropTypes.symbol, render: PropTypes.func }),\n  PropTypes.arrayOf(PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.string,\n    PropTypes.shape({ $$typeof: PropTypes.symbol, render: PropTypes.func }),\n  ]))\n]);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport styled from 'styled-components';\nimport { getMinLineHeight } from '../theme-utils';\nimport { tagPropType } from '../prop-types';\nimport styles from './Button.module.css';\n\nexport const getButttonStyle = ({\n  outline = false,\n  size = 'md',\n  theme,\n  variant = 'default',\n}) => {\n  const {\n    buttons,\n    spacing,\n  } = theme;\n\n  const {\n    borderWidth,\n    roundness,\n    sizes,\n    variants,\n  } = buttons;\n\n  const {\n    backgroundColor,\n    color,\n    hover,\n  } = variants[variant];\n\n  let {\n    fontSize,\n    paddingH,\n    paddingV,\n  } = sizes[size];\n\n  const {\n    ratio: lineHeightRatio,\n    px: lineHeightPx,\n  } = getMinLineHeight({\n    size: fontSize,\n    spacing\n  });\n\n  return ({\n    color: outline ? backgroundColor : color,\n    backgroundColor: outline ? color : backgroundColor,\n    borderColor: backgroundColor,\n    borderWidth,\n    borderStyle: 'solid',\n    borderRadius: roundness * (lineHeightPx / 2 + paddingV),\n    paddingBottom: paddingV - borderWidth,\n    paddingLeft: paddingH - borderWidth,\n    paddingRight: paddingH - borderWidth,\n    paddingTop: paddingV - borderWidth,\n    fontSize: fontSize,\n    lineHeight: lineHeightRatio,\n    ':hover': {\n      color: outline ? hover.backgroundColor : hover.color,\n      backgroundColor: outline ? hover.color : hover.backgroundColor,\n      borderColor: hover.backgroundColor,\n    }\n  })\n};\n\nconst Button = ({\n  className,\n  inverted,\n  outline,\n  tag: Tag,\n  ...passedProps\n}) => (\n  <Tag\n    {...passedProps}\n    className={classNames(className, styles.Button)}\n  />\n);\n\nButton.propTypes = {\n  className: PropTypes.string,\n  tag: tagPropType,\n};\n\nButton.defaultProps = {\n  className: '',\n  tag: 'button',\n};\n\nconst StyledButton = styled(Button)(\n  ({\n    outline,\n    size,\n    theme,\n    variant,\n  }) => {\n    const buttonStyle = getButttonStyle({\n      outline,\n      size,\n      theme,\n      variant,\n    });\n\n    return buttonStyle;\n  }\n);\n\nexport default StyledButton;\n","import Button from './Button';\n\nexport default Button;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport styles from './Swatch.module.css';\n\nconst Swatch = ({\n  backgroundColor,\n  className,\n  color,\n  ...passedProps\n}) => (\n  <div\n    {...passedProps}\n    className={classNames(styles.Swatch, className)}\n    style={{\n      backgroundColor,\n      color,\n    }}\n  />\n);\n\nSwatch.propTypes = {\n  backgroundColor: PropTypes.string,\n  className: PropTypes.string,\n  color: PropTypes.string,\n};\n\nSwatch.defaultProps = {\n  backgroundColor: '#fff',\n  className: '',\n  color: '#000',\n};\n\nexport default Swatch;\n","import Swatch from './Swatch';\n\nexport default Swatch;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport styles from './Control.module.css';\n\nconst Control = ({\n  className,\n  id,\n  label,\n  onChange,\n  type,\n  value,\n  ...passedProps\n}) => (\n  <div\n    {...passedProps}\n    className={classNames(className, styles.Control)}\n  >\n    <label\n      className={styles.label}\n      htmlFor={id}\n    >\n      {label || id}\n    </label>\n    <input\n      className={styles.input}\n      id={id}\n      onChange={onChange}\n      type={type}\n      value={value}\n    />\n  </div>\n);\n\nControl.propTypes = {\n  className: PropTypes.string,\n  id: PropTypes.string.isRequired,\n  label: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n  type: PropTypes.string,\n  value: PropTypes.string.isRequired,\n};\n\nControl.defaultProps = {\n  className: '',\n  label: '',\n  type: 'text',\n};\n\nexport default Control;\n","import Control from './Control';\n\nexport default Control;\n","import React, { useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport colorConvert from 'color-convert';\nimport { debounce } from 'lodash-es';\nimport { getButtons, getColors, getSizes } from '../theme-utils.mjs';\nimport { getLuminance } from '../utils/colors';\nimport Button from '../Button';\nimport Swatch from '../Swatch';\nimport Control from './Control';\nimport styles from './ThemeForm.module.css';\n\nexport const getNumberOrDont = (string) => {\n  let number;\n\n  try {\n    number = parseInt(string, 10);\n\n    if (isNaN(number)) {\n      throw new Error('not a number');\n    }\n  } catch(e) {\n    number = null;\n  }\n\n  return number\n};\n\nexport const getHexOrDont = string => string;\n\nexport const getJsonOrDont = (string) => {\n  let json;\n\n  try {\n    json = JSON.parse(string);\n  } catch(e) {\n    json =  {};\n  }\n\n  return json;\n};\n\nconst ThemeForm = ({\n  className,\n  theme: initTheme,\n  onChangeTheme,\n  onApplyTheme,\n}) => {\n  const [mdSize, setMdSize] = useState(initTheme.spacing.md);\n  const [themeForm, setThemeForm] = useState(initTheme);\n  const importInputFileRef = useRef();\n\n  useEffect(() => {\n    onChangeTheme(themeForm);\n  }, [onChangeTheme, themeForm]);\n\n  const handleClickApply = useCallback(() => {\n    onApplyTheme(themeForm);\n  }, [onApplyTheme, themeForm]);\n\n  const handleClickRevert = useCallback(() => {\n    setThemeForm(initTheme);\n  }, [initTheme]);\n\n  // COLORS\n  const safeBaseColors = useMemo(() => {\n    const safeColors =  Object.entries(themeForm.colors).reduce((result, [key, { base: value }]) => {\n      let safeValue;\n\n      try {\n        safeValue = colorConvert.keyword.hex(value).toLowerCase();\n      } catch(e) {\n        safeValue = value[0] === '#' ? value.substr(1) : value;\n      }\n\n      return {\n        ...result,\n        [key]: `#${safeValue}`,\n      }\n    }, {});\n\n    return safeColors;\n  }, [themeForm.colors]);\n\n  const [colors, setColors] = useState(safeBaseColors);\n\n  useEffect(() => {\n    setColors(safeBaseColors)\n  }, [safeBaseColors]);\n\n  const handleChangeColor = useCallback(({ value, key }) => {\n    const baseColors = {\n      ...colors,\n      [key]: getHexOrDont(value),\n    };\n\n    const nextColors = getColors({ baseColors });\n\n    const nextTheme = {\n      ...themeForm,\n      colors: nextColors,\n      buttons: getButtons({\n        ...themeForm,\n        colors: nextColors,\n      }),\n    };\n\n    setThemeForm(nextTheme);\n  }, [colors, themeForm]);\n\n  const debouncedHandleChangeColor = debounce(handleChangeColor, 100);\n\n  // FONTS\n\n  const [fontSizesCount, setFontSizesCount] = useState(Object.keys(initTheme.fonts.sizes).length);\n  const [fontSizes, setFontSizes] = useState(initTheme.fonts.sizes);\n\n  const handleChangeFontSize = useCallback(({ event, key }) => {\n    const nextSizes = {\n      ...fontSizes,\n      [key]: getNumberOrDont(event.target.value),\n    };\n\n    const nextFonts = {\n      ...themeForm.fonts,\n      sizes: nextSizes,\n    };\n\n    const nextTheme = {\n      ...themeForm,\n      buttons: getButtons({\n        ...themeForm,\n        fonts: nextFonts,\n      }),\n      fonts: nextFonts,\n    };\n\n    setFontSizes(nextSizes);\n    setThemeForm(nextTheme);\n  }, [fontSizes, themeForm]);\n\n  const handleChangeFontSizesCount = useCallback(e => {\n    const nextFontSizesCount = getNumberOrDont(e.target.value);\n    let nextSizes = getSizes({ count: nextFontSizesCount });\n\n    nextSizes = Object.keys(nextSizes).reduce((result, sizeKey) => {\n      return {\n        ...result,\n        [sizeKey]: fontSizes[sizeKey] || Object.values(fontSizes)[0],\n      };\n    }, {});\n\n    setFontSizes(nextSizes);\n    setFontSizesCount(nextFontSizesCount);\n  }, [fontSizes]);\n\n  const handleChangeMdSize = useCallback(e => {\n    const nextMdSize = getNumberOrDont(e.target.value);\n    const spacing = getSizes({ count: 5, mdSize: nextMdSize });\n    setMdSize(nextMdSize);\n\n    setThemeForm({\n      ...themeForm,\n      buttons: getButtons({\n        colors: themeForm.colors,\n        fonts: themeForm.fonts,\n        spacing,\n      }),\n      spacing,\n    });\n  }, [themeForm]);\n\n  const handleClickImport = useCallback(() => {\n    if (importInputFileRef.current) {\n      importInputFileRef.current.click();\n    }\n  }, []);\n\n  const handleChangeImport = useCallback(e => {\n    const reader = new FileReader();\n    reader.readAsText(e.target.files[0]);\n\n    reader.onload = e => {\n      try {\n        setThemeForm(JSON.parse(e.target.result))\n      } catch (e) {\n        console.warn('Couldn\\'t read theme file.', e.message);\n      }\n    }\n  }, []);\n\n  return (\n    <form className={classNames(className, styles.ThemeForm)}>\n      <Control\n        id=\"mdSize\"\n        onChange={handleChangeMdSize}\n        type=\"number\"\n        value={`${mdSize}`}\n      />\n      <section>\n        <h4>Semantic colors</h4>\n        {Object.entries(colors).map(([key, color], i) => {\n          const value = color;\n          return (\n            <div key={key}>\n              <Control\n                id={`semanticColor-${key}`}\n                key={key}\n                label={key}\n                onChange={event => debouncedHandleChangeColor({ value: event.target.value, key })}\n                type=\"color\"\n                value={`${value}`}\n              />\n              <div className={styles.swatches}>\n                {\n                  Object.entries(themeForm.colors[key])\n                  .sort(([variantKeyA ,hexA], [variantKeyB ,hexB]) => variantKeyB.charCodeAt(0) + getLuminance(hexB) - variantKeyA.charCodeAt(0) - getLuminance(hexA))\n                  .filter(([variantKey]) => variantKey !== 'base')\n                  .map(([variantKey, hex], i) => (\n                    <Swatch\n                      key={variantKey}\n                      className={styles.swatch}\n                      color={\n                        getLuminance(hex) > 0.5 ?\n                          themeForm.colors[key]['dark-bg'] :\n                          themeForm.colors[key]['lite-bg']\n                      }\n                      backgroundColor={hex}\n                    >\n                      {variantKey}\n                    </Swatch>\n                  ))\n                }\n              </div>\n            </div>\n            );\n        })}\n      </section>\n      <Control\n        id=\"fontSizesCount\"\n        onChange={handleChangeFontSizesCount}\n        type=\"number\"\n        value={`${fontSizesCount}`}\n      />\n      <section>\n        <h4>Font sizes</h4>\n        {Object.entries(fontSizes).map(([key, value]) => (\n          <Control\n            id={`fontSize-${key}`}\n            key={key}\n            label={key}\n            onChange={event => handleChangeFontSize({ event, key })}\n            type=\"number\"\n            value={`${value}`}\n          />\n        ))}\n      </section>\n      <div>\n        <Button\n          outline\n          onClick={handleClickRevert}\n          type=\"button\"\n        >\n          Revert\n        </Button>\n        {' '}\n        <Button\n          onClick={handleClickApply}\n          type=\"button\"\n          variant=\"primary\"\n        >\n          Apply\n        </Button>\n        <br />\n        <br />\n        <Button\n          download=\"theme.json\"\n          href={`data:text/json;charset=utf-8,${encodeURIComponent(JSON.stringify(themeForm))}`}\n          outline\n          size=\"sm\"\n          style={{\n            display: 'inline-block',\n          }}\n          tag=\"a\"\n        >\n          Export JSON\n        </Button>\n        {' '}\n        <input\n          onChange={handleChangeImport}\n          ref={importInputFileRef}\n          style={{\n            fontSize: '0',\n            height: '0',\n            left: '-100vw',\n            opacity: '0',\n            position: 'absolute',\n            top: '-100vh',\n            width: '0',\n            zIndex: '-1',\n          }}\n          tabIndex=\"-1\"\n          type=\"file\"\n        />\n        <Button\n          onClick={handleClickImport}\n          outline\n          size=\"sm\"\n          type=\"button\"\n        >\n          Import JSON ...\n        </Button>\n      </div>\n    </form>\n  );\n}\n\nThemeForm.propTypes = {\n  className: PropTypes.string,\n};\n\nThemeForm.defaultProps = {\n  className: '',\n};\n\n\nexport default ThemeForm;\n","import ThemeForm from './ThemeForm';\n\nexport default ThemeForm;\n","import Examples from './Examples';\n\nexport default Examples;\n","import React, { useContext, useMemo } from 'react';\nimport { ThemeContext } from 'styled-components';\n\nimport { getLuminance } from '../utils/colors';\nimport Button from '../Button';\nimport Swatch from '../Swatch';\nimport styles from './Examples.module.css';\n\nconst ColorExample = ({\n  name,\n  value,\n}) => {\n  return (\n    <div>\n      <h3>\n        <span\n          className={styles.swatch}\n          style={{ backgroundColor: value.base }}\n        />\n      {name}{' '}\n        <small className={styles.subtitle}>{getLuminance(value.base).toFixed(2)}</small>\n      </h3>\n      <div className={styles.ramp}>\n        {\n          Object.entries(value)\n          .sort(([,hexA], [,hexB]) => getLuminance(hexA) - getLuminance(hexB))\n          .filter(([key]) => key !== 'base')\n          .map(([key, hex], i) => (\n            <Swatch\n              key={key}\n              className={styles.rampSwatch}\n              color={getLuminance(hex) > 0.5 ? value['dark-bg'] : value['lite-bg']}\n              backgroundColor={hex}\n            >\n              {key}\n            </Swatch>\n          ))\n        }\n      </div>\n    </div>\n  );\n};\n\nconst Examples = () => {\n  const themeContext = useContext(ThemeContext);\n\n  return (\n    <>\n      <h1 id=\"heading\">Heading</h1>\n      <Button size=\"sm\">Button</Button>\n      {' '}\n      <Button>Button</Button>\n      {' '}\n      <Button size=\"lg\">Button</Button>\n      {' '}\n      <input value=\"Input\" onChange={() => {}}></input>\n      <p>\n        Paragraph\n      </p>\n      <a href=\"#heading\">Link</a>\n      <div className={styles.card}>\n        <div className={styles.cardHead}>\n          Card head\n        </div>\n        <div className={styles.cardBody}>\n          Card body\n        </div>\n        <div className={styles.cardFoot}>\n          Card foot\n        </div>\n      </div>\n      {/*\n        <div>\n          <h2>Color ramps</h2>\n          {Object.entries(themeContext.colors)\n            .filter(([key]) => ['white', 'black'].indexOf(key) < 0)\n            .map(([key, value]) => (\n              <ColorExample\n                key={key}\n                name={key}\n                value={value}\n              />\n            ))\n          }\n        </div>\n      */}\n    </>\n  );\n};\n\nexport default Examples;\n","import React, { useCallback, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Mousetrap from 'mousetrap';\nimport styles from './GridOverlay.module.css';\n\n\nconst GridOverlay = () => {\n  const [isVisible, setIsVisible] = useState(false);\n\n  const toggleIsVisible = useCallback(() => {\n    setIsVisible(!isVisible);\n  }, [isVisible]);\n\n  useEffect(() => {\n    Mousetrap.bind('.', toggleIsVisible);\n\n    return () => {\n      Mousetrap.unbind('.', toggleIsVisible);\n    };\n  }, [toggleIsVisible]);\n\n  if (!isVisible) {\n    return null;\n  }\n\n  return (\n    <div className={styles.GridOverlay} />\n  );\n};\n\nGridOverlay.propTypes = {\n  className: PropTypes.string,\n};\n\nGridOverlay.defaultProps = {\n  className: '',\n};\n\nexport default GridOverlay;\n","import GridOverlay from './GridOverlay';\n\nexport default GridOverlay;\n","import React, { useCallback, useState } from 'react';\nimport { ThemeProvider } from 'styled-components'\n\nimport './App.css';\nimport styles from './App.module.css';\nimport defaultTheme from './theme.mjs';\nimport ThemeForm from './ThemeForm';\nimport Examples from './Examples';\nimport GridOverlay from './GridOverlay';\n\nfunction App() {\n  const [theme, setTheme] = useState(defaultTheme);\n  const [themePreview, setThemePreview] = useState(theme);\n\n  const handleChangeThemePreview = useCallback((theme) => {\n    setThemePreview(theme);\n  }, []);\n\n  const handleApplyThemePreview = useCallback((theme) => {\n    setTheme(themePreview);\n  }, [themePreview]);\n\n  return (\n    <ThemeProvider theme={theme}>\n      <div className={`App ${styles.App}`}>\n        <div className={styles.form}>\n          <ThemeForm\n            theme={theme}\n            onChangeTheme={handleChangeThemePreview}\n            onApplyTheme={handleApplyThemePreview}\n          />\n        </div>\n        <div className={styles.example}>\n          <ThemeProvider theme={themePreview} >\n            <Examples />\n          </ThemeProvider>\n        </div>\n      </div>\n      <GridOverlay />\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"subtitle\":\"Examples_subtitle__L0_CV\",\"swatch\":\"Examples_swatch__3QSmL\"};"],"sourceRoot":""}